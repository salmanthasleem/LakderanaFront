{"version":3,"sources":["helpers/accessLevel.js","context/authContext.js","hooks/useAuth.js","components/layout/navigator.js","Theme.js","components/layout/header.js","components/layout/content.js","components/layout/dashboard.js","components/auth/textField.js","components/auth/signIn.js","redux/slicers/authSlice.js","components/auth/signUpOwner.js","screens/login/Auth.js","components/layout/layout.js","redux/slicers/inquiry.js","redux/slicers/cusAutoFill.js","redux/slicers/branchSlice.js","redux/slicers/employeeslice.js","redux/slicers/beverage.js","redux/slicers/addItemModalSlice.js","redux/slicers/restockItem.js","redux/slicers/gLocation.js","redux/store.js","api/api.js","components/auth/authProvider.js","sections/staff/customerHandling.js","sections/staff/payments&Services.js","sections/staff/bar.js","sections/hrStaff/attendance.js","sections/hrStaff/employee.js","sections/manager/manageBranch.js","sections/manager/manageEmployee.js","sections/manager/manageRooms.js","sections/manager/statistics.js","components/stats/graphContainer.js","helpers/checkRange.js","components/stats/dailyCusRegistrations.js","components/stats/inquiryStats.js","components/branchField.js","screens/dashboards/customer.js","components/stats/dailyTotalReservatons.js","components/stats/reservationTypeStats.js","screens/dashboards/payments.js","components/stats/dailyBarTotalSales.js","components/stats/barSalesByType.js","components/stats/barSalesByDrink.js","screens/dashboards/barFB.js","components/customerAutoFill.js","screens/customer/customerInquiry/addInquiry.js","screens/customer/customerInquiry/insert.js","screens/customer/customerInquiry/customerInquiry.js","components/customerRegistrationFields.js","screens/customer/customerRegistration/customerRegistration.js","screens/customer/inHotelCustomers/inHotelCustomrs.js","components/customerDetailsSections.js","helpers/customerDetailsProps.js","screens/paymentsAndServices/room/reserveRoom.js","screens/paymentsAndServices/services/services.js","components/beveragesField.js","screens/bar/frontDesk/frontDesk.js","components/bar/addItemModal.js","components/bar/restockModal.js","screens/bar/inventory/inventory.js","screens/manage/attendance/attendance.js","components/auth/searchEmployee.js","screens/manage/employee/configureSalary.js","screens/statistics/viewEmployee.js","screens/manage/rooms/addRoom.js","screens/manage/rooms/viewRooms.js","screens/manage/employee/addEmployee.js","components/glLocation.js","screens/manage/branches/addBranch.js","screens/manage/branches/viewBranches.js","screens/statistics/bar/dailyStats.js","screens/statistics/attendanceStats.js","screens/statistics/income.js","components/underConstruction.js","components/auth/protector.js","App.js","reportWebVitals.js","index.js"],"names":["level","Map","set","AuthContext","createContext","useAuth","React","useContext","categories","id","children","icon","active","item","py","px","color","bgcolor","itemCategory","boxShadow","Navigator","props","navigate","useNavigate","other","useState","select","setSelect","empStatus","userData","whichStatus","status","Drawer","variant","List","disablePadding","ListItem","sx","fontSize","display","justifyContent","src","style","height","map","whichLvl","get","empLvl","console","log","Box","ListItemText","i","childId","ListItemButton","selected","onClick","route","replaceAll","handleClick","ListItemIcon","Divider","mt","theme","createTheme","palette","primary","light","main","dark","typography","h5","fontWeight","letterSpacing","button","shape","borderRadius","components","MuiTab","defaultProps","disableRipple","mixins","toolbar","minHeight","MuiDrawer","styleOverrides","paper","backgroundColor","MuiButton","root","textTransform","contained","MuiTabs","marginLeft","spacing","indicator","borderTopLeftRadius","borderTopRightRadius","margin","minWidth","padding","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemButton","MuiListItemText","fontWeightMedium","MuiListItemIcon","marginRight","MuiAvatar","width","MuiPaper","sections","CustomerHandling","section","subSections","label","path","PaymentsAndServices","Statistics","Bar","Attendance","ManageStaff","ManageRooms","ManageEmployees","ManageBranches","Header","location","useLocation","pathname","Object","keys","find","sub","RegExp","test","onDrawerToggle","Fragment","AppBar","borderLeft","position","elevation","Toolbar","Grid","container","alignItems","sm","xs","IconButton","edge","direction","columnGap","Typography","userName","branchId","Tabs","isActive","to","Tab","Tooltip","title","Content","component","flex","Paper","maxWidth","overflow","Copyright","align","Link","href","Date","getFullYear","Dashboard","mobileOpen","setMobileOpen","isSmUp","useMediaQuery","auth","setUserVals","handleDrawerToggle","useEffect","a","data","flexShrink","PaperProps","open","onClose","flexDirection","p","_TextField","TextField","name","placeholder","pHolder","required","type","fullWidth","value","onChange","error","helperText","helper","InputLabelProps","shrink","size","focused","disabled","defaultValue","default","rows","multiline","SignIn","index","loginSchema","Yup","username","min","max","password","formik","useFormik","initialValues","validationSchema","onSubmit","val","handleLogin","values","req","signIn","e","preventDefault","handleSubmit","touched","Boolean","errors","handleChange","Button","createSlice","initialState","isOwner","reducers","setIsOwner","state","actions","payload","setIsOwnerAsync","dispatch","setTimeout","require","config","loadScript","url","script","document","createElement","getElementsByTagName","appendChild","minDate","maxDate","setFullYear","SignUpOwner","places","setPlaces","query","setQuery","useDispatch","useSelector","signUpSchema","fName","lName","uName","dob","confirmPass","oneOf","place","branchName","process","firstName","lastName","confirmPassword","registerValues","ownerCredentials","signUpOwner","orientation","flexItem","Autocomplete","freeSolo","disableClearable","options","renderInput","params","InputProps","onInputChange","window","google","maps","AutocompleteService","getPlacePredictions","input","types","componentRestrictions","predictions","PlacesServiceStatus","OK","description","handleScript","setFieldValue","inputValue","loading","Auth","owner","setOwner","setValue","Container","transform","square","textColor","indicatorColor","Layout","CssBaseline","inquiry","modalOpen","reload","statusModal","setModalOpen","setReload","setStatusModal","action","setcValuesAsync","createAsyncThunk","cName","cId","mobileNo","identityId","setbranchIdAsync","cusAutoFill","cValues","extraReducers","builder","addCase","fulfilled","branch","setBranch","setBranchName","setEmpValuesAsync","empFName","empLName","email","searchEmployee","empValues","setNameAsync","setTypeAsync","setQuantityAsync","setPriceAsync","setCostAsync","setStockAsync","clearFieldsAsync","quantity","price","cost","stock","beverage","barItem","setParamsAsync","itemId","restockBarItem","itemParams","restockModalOpen","setRestockModalOpen","setQueryAsync","gLocation","configureStore","reducer","api","axios","create","baseURL","AuthProvider","localStorage","getItem","JSON","parse","post","response","stringify","setItem","signUp","headers","credentials","empId","employeeId","empCredentialsRes","credentialsRes","getOwner","bool","Provider","PaymentAndServices","AttendanceDashBoard","Employee","ManageEmployee","GraphContainer","border","ResponsiveContainer","checkRange","from","setHelper","dateFrom","dateTo","DailyCustomerRegistrations","customers","setCustomers","records","setRecords","setDateFrom","setDateTo","getCustomers","err","message","dailyRegistrationsCalculate","dates","customer","dateRegistered","toISOString","split","setOfDates","Set","fromDate","toDate","filteredDates","filter","date","noOfRegistrationsDaily","number","length","target","BarChart","top","right","left","bottom","XAxis","dataKey","YAxis","fill","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","startAngle","endAngle","outerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","CustomerInquiryStats","pieData","setpieData","getInquiries","errorData","pie","element","calculatePie","PieChart","Pie","labelLine","entry","Cell","Legend","BranchField","helpers","showBranchName","branches","setBranches","setisBranch","selectBranch","setSelectBranch","showName","user","branchResponse","toString","disablePortal","int","Number","CustomerFrontBoard","DailyTotalReservations","allData","setData","filtered","setFiltered","handleData","reservationsDaily","randomColor","ReservationTypeStats","initialData","setInitialData","lines","setLines","filterData","reservationsByType","allLines","flat","filteredData","filteredLines","LineChart","verticalAlign","line","Line","stroke","luminosity","format","alpha","PaymentsFrontBoard","totalReservation","setTotalReservations","statsByType","setStatsByType","getReservation","subData","totalReservationsDaily","totalNumberOfReservations","reservationsByTypeDaily","elem","row","reduce","arr","forEach","deluxe","normal","DailyBarSalesTotal","salesDaily","DailyBarSalesByType","initialLines","setInitialLines","salesByType","DailyBarSalesByDrink","setDate","chart","setChart","salesByDrink","key","replace","trim","sales","z","drink","alcs","items","obj","current","findIndex","CustomTooltip","className","alignContent","ScatterChart","unit","cursor","strokeDasharray","content","scatter","Scatter","BarFrontBoard","totalSales","setTotalSales","setSalesByType","setSalesByDrink","getBar","totalSalesDaily","totalNumberOfSales","Alcohol","piece","array","hasOwnProperty","itm","found","slice","flexWrap","CustomerAutoFill","onchanges","identity","isName","setIsName","initialCustomers","setInititalCustomers","nameInput","setNameInput","idInput","setIdInput","setCName","setCId","mobile","setMobile","setIdentityId","selectedCus","cusIdentity","cusMobile","customersObject","customerData","combo","cus","customerVals","useMemo","cVals","event","newValue","newInputValue","autoSelect","clearOnBlur","textAlign","AddInquiry","customerAutoFill","cusName","cusId","customerInquirySchema","handleInquiry","handleClose","resetForm","put","helps","errs","onChanges","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","reason","Fade","in","InsertStatus","statusModalOpen","setBranchId","isStatusChanged","setStatusChanged","customerStatusSchema","handleInquiryStatus","columns","field","headerName","sortable","CustomerInquiry","setSelected","allRows","setAllRows","setDescription","selectedRow","setSelectedRow","getList","customerId","addEventListener","removeEventListener","pageSize","rowsPerPageOptions","checkboxSelection","disableColumnFilter","onSelectionModelChange","isRowSelectable","onRowClick","handleRowclick","gutterBottom","paragraph","CustomerRegistrationFields","phoneRegExp","CustomerRegistration","customerRegisterSchema","matches","handleRegister","vals","valueGetter","checkIn","toLocaleDateString","checkOut","hide","isBooked","InHotelCustomers","setOpen","allCustomers","setAllCustomers","nameQuery","setNameQuery","roomNoQuery","setRoomNoQuery","roomNo","isSuccess","autoPageSize","textDecoration","CustomerDetailsSection","newCus","oldCus","errsAutoFill","helpsAutoFill","onChangesAutoFill","ReserveRoom","setnewCus","breakfast","lunch","dinner","loadedData","setLoadedData","setTypes","numbers","setNumbers","buyNow","setBuyNow","reserveRoomSchema","dateIn","dateOut","when","Schema","endDate","day","getDate","minAdults","minChildren","pricePerNight","total","nights","roomType","beds","clearFields","getRooms","userParsed","isRoom","room","inMonth","getMonth","inYear","inDays","outMonth","diffYear","diffMonth","diffDays","TotalDays","totalPrice","meta","getFieldMeta","isValid","adult","childs","submitData","FormControlLabel","control","Switch","checked","labelPlacement","alignSelf","justifySelf","marginTop","Services","BeverageField","isPrice","isQuantity","isCost","isStock","beverages","setBeverages","setFilter","selectType","setSelectType","selectName","setSelectName","selectQuantity","setSelectQuantity","selectCost","setSelectCost","showPrice","showCost","showStock","showQuantity","handleType","names","handleName","handleQuantity","handleCost","getAllBeverages","isAvailable","prevname","prevtype","prevquantity","prevcost","FrontDesk","cart","setCart","setTotal","units","setUnits","enablePayNow","setEnablePayNow","setEnableAddToBill","setLoading","whichSubmit","setWhichSubmit","barPaymentSchema","purchase","of","handlePay","some","body","typeOfPay","itemType","itemName","itemQuantity","noOfUnits","itemPrice","itemCost","amount","expense","pricePerUnit","object","prev","intialTotal","arr1","handleCart","BarAddItem","submitLoading","setSubmitLoading","addBarItemSchema","handleItemAddition","searchDrinks","alert","isError","isEmpty","RestockItem","isParams","param","initialCost","useRef","onEnter","Inventory","inventory","setInventory","reStockedStock","reStockedBranch","getItems","barItemId","defaultBranchId","beverageId","handleRow","getValue","delay","openQr","setQrDiv","attendance","setAttendance","allEmployees","setAllEmployees","startMark","setStartMark","marked","setMarked","confirm","setConfirm","handleMark","ids","emp","checkAttendance","getEmployees","errData","msg","marginBottom","onError","onScan","text","findOne","employee","includes","facingMode","SearchEmployee","employees","setEmployees","empName","setName","empEmail","setEmail","filteredEmps","setFilteredEmps","empFullName","Dob","handleEmployeeSubmission","doubleFilter","ConfigureSalary","empBranchId","setIsAvailable","isEmpDetailsChanged","setEmpDetailsChanged","employeeDetails","setEmployeeDetails","employeeSalarySchema","basic","travel","optional","penaltyPerLeave","noLeavesBonus","vacayPerYear","leavesAllowed","employeeInitialValues","isChanged","every","setValues","res","EmployeeDetails","initialEmployees","setInitialEmployees","firstNameQuery","setfNameQuery","lastNameQuery","setlNameQuery","setEmpId","setIsEmp","isSearch","setIsSearch","empVal","searchQuery","requestBody","empType","AddRoom","setType","isRoomType","setRoomType","setHelperText","isWarning","setWarning","addRoomSchema","checkRoomType","isType","rooms","FormLabel","RadioGroup","Radio","ViewRooms","setRooms","setInitialRooms","setIsRoom","roomQuery","setRoomQuery","AddEmployee","isBasicDetails","setIsBasicDetails","employeeRegisterSchema","pass","enableReinitialize","validateOnMount","employeeType","FormControl","Location","AddBranch","barRegisterSchema","headerAlign","ViewBranches","setLocation","getBranches","BarStatsDaily","bars","setBars","fullwidth","AttendanceStats","attendees","setAttendees","absentees","setAbsentees","whichStat","setWhichStat","getAttendance","IncomeStats","incomes","setIncomes","getIncomes","UnderConstruction","subText","Prtotector","userId","App","store","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.540ed92e.chunk.js","sourcesContent":["export const level = new Map()\n\nlevel.set(\"Owner\", 1)\n    .set(\"Manager\", 2)\n    .set(\"Assistant Manager\", 3)\n    .set(\"HR Staff\", 4)\n    .set(\"Employee\", 5)\n\n\n","import { createContext } from \"react\"\n\nexport const AuthContext = createContext(null);","import React from \"react\";\nimport { AuthContext } from \"../context/authContext\";\n\nexport default function useAuth() {\n    return React.useContext(AuthContext)\n}","import * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport PeopleIcon from '@mui/icons-material/People';\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport LocalBarIcon from '@mui/icons-material/LocalBar';\nimport AnalyticsIcon from '@mui/icons-material/Analytics';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport RoomPreferencesIcon from '@mui/icons-material/RoomPreferences';\nimport EngineeringIcon from '@mui/icons-material/Engineering';\nimport { Typography } from '@mui/material';\nimport { useNavigate } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport { level } from '../../helpers/accessLevel'\nimport useAuth from '../../hooks/useAuth'\n\nconst categories = [\n    {\n        id: 'Staff',\n        children: [\n            {\n                id: 'Customer Handling',\n                icon: <PeopleIcon />,\n                active: true,\n            },\n            { id: 'Payments And Services', icon: <PaymentIcon /> },\n            { id: 'Bar', icon: <LocalBarIcon /> },\n        ],\n    },\n    {\n        id: 'Human Resource Staff',\n        children: [\n            { id: 'Attendance', icon: <PeopleIcon /> },\n            { id: 'Manage Staff', icon: <ManageAccountsIcon /> },\n        ],\n    },\n    {\n        id: 'Manager / Owner',\n        children: [\n            { id: 'Manage Rooms', icon: <RoomPreferencesIcon /> },\n            { id: 'Manage Employees', icon: <EngineeringIcon /> },\n            { id: 'Manage Branches', icon: <RoomPreferencesIcon /> },\n            { id: 'Statistics', icon: <AnalyticsIcon /> },\n        ],\n    },\n];\n\nconst item = {\n    py: '2px',\n    px: 3,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover, &:focus': {\n        bgcolor: 'rgba(255, 255, 255, 0.08)',\n    },\n};\n\nconst itemCategory = {\n    boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\n    py: 4,\n    px: 3,\n};\n\nexport default function Navigator(props) {\n    const navigate = useNavigate()\n    const { ...other } = props;\n    const [select, setSelect] = useState(0)\n\n    const auth = useAuth()\n\n    const empStatus = auth.userData.empStatus\n\n    const handleClick = (childId, i) => {\n        setSelect(childId + i)\n        const route = childId.replaceAll(\" \", \"\")\n        navigate(`/protected/${route}`)\n    }\n\n    const whichStatus = (status) => {\n        switch (status) {\n            case 'Staff':\n                return 'Employee'\n                break;\n            case 'Human Resource Staff':\n                return 'HR Staff'\n                break;\n            case 'Manager / Owner':\n                return 'Manager'\n                break;\n            case 'Assistant Manager':\n                return 'HR Staff'\n                break;\n            case 'Manager':\n                return 'Manager'\n                break;\n            case 'Owner':\n                return 'Owner'\n                break;\n            case 'HR Staff':\n                return 'HR Staff'\n                break;\n            default:\n                return 1000\n                break\n        }\n    }\n\n    return (\n        <Drawer variant=\"permanent\" {...other}>\n            <List disablePadding>\n                <ListItem sx={{ ...item, ...itemCategory, fontSize: 22, color: '#fff', display: 'flex', justifyContent: 'space-evenly' }}>\n                    <img\n                        src=\"/hotel.png\"\n                        style={{ height: '10rem' }}\n                    />\n                </ListItem>\n                {categories.map(({ id, children }) => {\n                    const whichLvl = level.get(whichStatus(id))\n                    const empLvl = level.get(whichStatus(empStatus))\n\n                    console.log(empLvl, whichLvl)\n                    if (empLvl === whichLvl || empLvl === 1) {\n                        return (\n                            <Box key={id} sx={{ bgcolor: '#101F33' }}>\n                                <ListItem sx={{ py: 2, px: 3 }}>\n                                    <ListItemText sx={{ color: '#fff' }}>{id}</ListItemText>\n                                </ListItem>\n                                {children.map(({ id: childId, icon, active }, i) => {\n                                    return (\n                                        <ListItem disablePadding key={childId}>\n                                            <ListItemButton selected={select === childId + i} sx={item} onClick={() => handleClick(childId, i)}>\n                                                <ListItemIcon>{icon}</ListItemIcon>\n                                                <ListItemText>{childId}</ListItemText>\n                                            </ListItemButton>\n                                        </ListItem>\n                                    )\n                                }\n\n                                )}\n\n                                <Divider sx={{ mt: 2 }} />\n                            </Box>\n                        )\n                    }\n                    return null\n                })}\n            </List>\n        </Drawer>\n    );\n}\n","import { createTheme } from '@mui/material/styles';\nimport { palette } from '@mui/system';\n\nlet theme = createTheme({\n  palette: {\n    primary: {\n      light: '#63ccff',\n      main: '#009be5',\n      dark: '#006db3',\n    },\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5,\n    },\n    button: {\n      fontSize: 20,\n    }\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  components: {\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true,\n      },\n    },\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 48,\n    },\n  },\n});\n\ntheme = {\n  ...theme,\n  components: {\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          backgroundColor: '#081627',\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n        },\n        contained: {\n          boxShadow: 'none',\n          '&:active': {\n            boxShadow: 'none',\n          },\n        },\n      },\n    },\n    MuiTabs: {\n      styleOverrides: {\n        root: {\n          marginLeft: theme.spacing(1),\n        },\n        indicator: {\n          height: 3,\n          borderTopLeftRadius: 3,\n          borderTopRightRadius: 3,\n          backgroundColor: theme.palette.primary.dark,\n        },\n      },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          margin: '0 16px',\n          minWidth: 0,\n          padding: 0,\n          [theme.breakpoints.up('md')]: {\n            padding: 0,\n            minWidth: 0,\n          },\n          // color: theme.palette.primary.dark\n\n        },\n      },\n    },\n    MuiIconButton: {\n      styleOverrides: {\n        root: {\n          padding: theme.spacing(1),\n        },\n      },\n    },\n    MuiTooltip: {\n      styleOverrides: {\n        tooltip: {\n          borderRadius: 4,\n        },\n      },\n    },\n    MuiDivider: {\n      styleOverrides: {\n        root: {\n          backgroundColor: 'rgb(255,255,255,0.15)',\n        },\n      },\n    },\n    MuiListItemButton: {\n      styleOverrides: {\n        root: {\n          '&.Mui-selected': {\n            color: '#4fc3f7',\n          },\n        },\n      },\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: 14,\n          fontWeight: theme.typography.fontWeightMedium,\n        },\n      },\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          color: 'inherit',\n          minWidth: 'auto',\n          marginRight: theme.spacing(2),\n          '& svg': {\n            fontSize: 20,\n          },\n        },\n      },\n    },\n    MuiAvatar: {\n      styleOverrides: {\n        root: {\n          width: 32,\n          height: 32,\n        },\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backgroundColor: '#eaeff1'\n        }\n      }\n    },\n\n\n  },\n};\n\n\nexport default theme;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport HelpIcon from '@mui/icons-material/Help';\nimport IconButton from '@mui/material/IconButton';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { Tab } from '@mui/material';\nimport Tabs from '@mui/material/Tabs';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport { NavLink, useLocation, Link as LinkRouter } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst sections = {\n    CustomerHandling: {\n        section: \"Customer Handling\",\n        subSections: [\n            {\n                label: \"Customer Inquiry\",\n                path: \"/protected/CustomerHandling/CustomerInquiry\"\n            },\n            {\n                label: \"Customer Registration\",\n                path: \"/protected/CustomerHandling/CustomerRegistration\"\n            },\n            {\n                label: \"In-Hotel Customers\",\n                path: \"/protected/CustomerHandling/InHotelCustomers\"\n            },\n        ]\n\n    },\n    PaymentsAndServices: {\n        section: \"Payments And Services\",\n        subSections: [\n            {\n                label: \"Reserve Room\",\n                path: \"/protected/PaymentsAndServices/ReserveRoom\"\n            },\n            {\n                label: \"Services\",\n                path: \"/protected/PaymentsAndServices/Services\"\n            },\n        ]\n\n    },\n    Statistics: {\n        section: \"Statistics\",\n        subSections: [\n            {\n                label: \"Bar\",\n                path: \"/protected/Statistics/BarStatsDaily\"\n            },\n            {\n                label: \"Attendance\",\n                path: \"/protected/Statistics/AttendaceStats\"\n            },\n            {\n                label: \"Income\",\n                path: \"/protected/Statistics/IncomeStats\"\n            },\n        ]\n    },\n    Bar: {\n        section: \"Bar\",\n        subSections: [\n            {\n                label: \"Front Desk\",\n                path: \"/protected/Bar/FrontDesk\"\n            },\n            {\n                label: \"Inventory\",\n                path: \"/protected/Bar/Inventory\"\n            },\n        ]\n\n    },\n    Attendance: {\n        section: \"Attendance\",\n        subSections: [\n            {\n                label: \"Attendance\",\n                path: \"/protected/Attendance\"\n            },\n        ]\n\n    },\n    ManageStaff: {\n        section: \"Manage Staff\",\n        subSections: [\n            {\n                label: \"Configure Salary\",\n                path: \"/protected/ManageStaff/ConfigureSalary\"\n            },\n            {\n                label: \"Employee Details\",\n                path: \"/protected/ManageStaff/EmployeeDetails\"\n            },\n        ]\n\n    },\n    ManageRooms: {\n        section: \"Manage Rooms\",\n        subSections: [\n            {\n                label: \"Add Room\",\n                path: \"/protected/ManageRooms/AddRoom\"\n            },\n            {\n                label: \"View Rooms\",\n                path: \"/protected/ManageRooms/ViewRooms\"\n            },\n        ]\n\n    },\n    ManageEmployees: {\n        section: \"Manage Employees\",\n        subSections: [\n            {\n                label: \"Add Employee\",\n                path: \"/protected/ManageEmployees/AddEmployee\"\n            },\n        ]\n\n    },\n    ManageBranches: {\n        section: \"Manage Branches\",\n        subSections: [\n            {\n                label: \"Add Branch\",\n                path: \"/protected/ManageBranches/AddBranch\"\n            },\n            {\n                label: \"View Branches\",\n                path: \"/protected/ManageBranches/ViewBranches\"\n            },\n        ]\n\n    },\n}\n\n\n\nfunction Header(props) {\n    const auth = useAuth()\n    const userData = auth.userData\n    const location = useLocation().pathname\n\n    const section = Object.keys(sections).find(sub => {\n        const regex = new RegExp(sub)\n        if (regex.test(location)) {\n            return sub\n        }\n    })\n    const { onDrawerToggle } = props;\n\n    return (\n        <React.Fragment>\n            <AppBar sx={{ backgroundColor: '#081627', borderLeft: \"2px solid grey\" }} position=\"sticky\" elevation={0}>\n                <Toolbar>\n                    <Grid container spacing={1} alignItems=\"center\">\n                        <Grid sx={{ display: { sm: 'none', xs: 'block' } }} item>\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                onClick={onDrawerToggle}\n                                edge=\"start\"\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs container sx={{ height: '9em' }}  >\n                            <Grid item container direction=\"row\" columnGap={10} sx={{ margin: '1rem 2.5rem' }}>\n                                <Grid item  >\n                                    <Typography>{userData.userName}</Typography>\n                                </Grid>\n                                <Grid item  >\n                                    <Typography>{userData.empStatus}</Typography>\n                                </Grid>\n                                <Grid item  >\n                                    <Typography>Branch No: {userData.branchId || \"\"}</Typography>\n                                </Grid>\n                            </Grid>\n\n\n                            <Grid item>\n                                <Tabs sx={{ display: 'flex', alignItems: 'flex-end' }} >\n                                    {sections[section].subSections.map((item, i) =>\n\n                                        <NavLink\n                                            style={({ isActive }) =>\n                                            ({\n                                                display: \"block\",\n                                                margin: \"1rem \",\n                                                color: isActive ? \"#009be5\" : \"white\"\n                                            })}\n                                            to={item.path}\n                                            key={section + ` ${i}`}\n                                        >\n                                            <Tab label={item.label} />\n                                        </NavLink>\n                                    )}\n                                </Tabs>\n                            </Grid>\n                        </Grid>\n                        <Grid item direction=\"column\">\n                            <Grid item container direction=\"row\" columnGap={15} sx={{ marginRight: '2.5rem' }}>\n                                <Grid item>\n                                    <Tooltip title=\"Alerts • No alerts\">\n                                        <IconButton color=\"inherit\">\n                                            <NotificationsIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </Grid>\n\n                                <Grid item>\n                                    <Tabs>\n                                        <NavLink\n                                            style={({ isActive }) =>\n                                            ({\n                                                color: isActive ? \"#009be5\" : \"white\"\n                                            })}\n                                            to={\"/\"}\n                                            key={\"login\"}\n                                        >\n                                            <Tab label=\"Log Out\" />\n                                        </NavLink>\n                                    </Tabs>\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment >\n    );\n}\n\nHeader.propTypes = {\n    onDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import * as React from 'react';\n// import AppBar from '@mui/material/AppBar';\n// import Toolbar from '@mui/material/Toolbar';\n// import Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n// import Grid from '@mui/material/Grid';\n// import Button from '@mui/material/Button';\n// import TextField from '@mui/material/TextField';\n// import Tooltip from '@mui/material/Tooltip';\n// import IconButton from '@mui/material/IconButton';\n// import SearchIcon from '@mui/icons-material/Search';\n// import RefreshIcon from '@mui/icons-material/Refresh';\n\nexport default function Content(props) {\n    return (\n        <Box component=\"main\" sx={{ flex: 1, py: 6, px: 4 }}>\n            <Paper sx={{ maxWidth: '100%', margin: 'auto', overflow: 'hidden' }}>\n                {props.children}\n            </Paper>\n        </Box>\n\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Navigator from './navigator';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport theme from '../../Theme'\nimport { Outlet } from 'react-router'\nimport Header from './header';\nimport Content from './content';\nimport useAuth from '../../hooks/useAuth';\n\n\nconst drawerWidth = 256;\n\nconst Dashboard = () => {\n    const [mobileOpen, setMobileOpen] = useState(false);\n    const isSmUp = useMediaQuery(theme.breakpoints.up('sm'));\n    const auth = useAuth()\n    const [userVals, setUserVals] = useState(null)\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    useEffect(async () => {\n        const data = await auth.userData\n        setUserVals(data)\n    }, [auth.userData])\n\n\n    return (\n        <>\n            <Box\n                component=\"nav\"\n                sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n            >\n                {isSmUp ? null : (\n                    <Navigator\n                        PaperProps={{ style: { width: drawerWidth } }}\n                        variant=\"temporary\"\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                    />\n                )}\n\n                <Navigator\n                    PaperProps={{ style: { width: drawerWidth } }}\n                    sx={{ display: { sm: 'block', xs: 'none' } }}\n                />\n            </Box>\n            <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column', bgcolor: '#eaeff1' }}>\n                <Header onDrawerToggle={handleDrawerToggle} />\n                <Content>\n                    <Outlet />\n                </Content>\n                <Box component=\"footer\" sx={{ p: 2 }}>\n                    <Copyright />\n                </Box>\n            </Box>\n        </>\n    )\n}\n\n\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"\">\n                Lakderana\n            </Link>{' '}\n            {new Date().getFullYear()}.\n        </Typography>\n    );\n}\n\nexport default Dashboard;\n\n\n","import React from \"react\";\nimport { TextField } from \"@mui/material\";\n\nconst _TextField = (props) => {\n    return (\n        <TextField\n            label={props.label}\n            name={props.name}\n            placeholder={props.pHolder}\n            required={props.required}\n            type={props.type}\n            fullWidth={props.fullWidth || true}\n            value={props.value}\n            onChange={props.onChange}\n            color={props.error ? 'warning' : 'secondary'}\n            error={props.error}\n            helperText={props.helper}\n            margin={props.margin || 'normal'}\n            InputLabelProps={{\n                shrink: props.shrink,\n            }}\n            size={props.size}\n            sx={props.sx}\n            variant={props.variant}\n            focused={props.focused}\n            disabled={props.disabled}\n            defaultValue={props.default}\n            rows={props.rows}\n            multiline={props.multiline}\n        />\n    )\n}\n\nexport default _TextField","import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup'\nimport _TextField from './textField'\nimport useAuth from \"../../hooks/useAuth\";\n\nconst SignIn = ({ index, value, navigate }) => {\n    const auth = useAuth()\n\n    const loginSchema = Yup.object({\n        username: Yup.string('Enter A Username')\n            .min(5, 'Username Too Short')\n            .max(30, 'Username Too Long')\n            .required('Enter A Username'),\n        password: Yup.string('Enter A Password')\n            .required('Enter A Password')\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            username: \"\",\n            password: '',\n        },\n        validationSchema: loginSchema,\n        onSubmit: val => handleLogin(formik.values)\n    })\n\n    const handleLogin = (values) => {\n        const req = { userName: values.username, password: values.password }\n        auth.signIn(req)\n    }\n\n    if (index !== value) return null\n    return (\n        <form\n            style={{\n                display: 'flex',\n                width: '40%',\n                minHeight: '20rem',\n                margin: '10% auto',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'space-evenly'\n            }}\n            onSubmit={(e) => {\n                e.preventDefault()\n                formik.handleSubmit()\n            }}\n        >\n            <_TextField\n                label=\"Username\"\n                pHolder=\"Username\"\n                required\n                type=\"text\"\n                error={formik.touched.username && Boolean(formik.errors.username)}\n                helper={formik.touched.username && formik.errors.username}\n                value={formik.values.username}\n                onChange={formik.handleChange}\n                name=\"username\"\n            />\n            <_TextField\n                label=\"Password\"\n                pHolder=\"Password\"\n                required\n                type=\"password\"\n                error={formik.touched.password && Boolean(formik.errors.password)}\n                helper={formik.touched.password && formik.errors.password}\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                name=\"password\"\n            />\n            <Button variant=\"contained\" fullWidth type='submit'>Login</Button>\n        </form>\n    )\n}\n\nexport default SignIn","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst auth = createSlice({\n    name: \"auth\",\n    initialState: {\n        isOwner: false\n    },\n    reducers: {\n        setIsOwner: (state, actions) => {\n            state.isOwner = actions.payload\n        }\n    }\n})\n\nexport const setIsOwnerAsync = value => dispatch => {\n    setTimeout(() => {\n        dispatch(setIsOwner(value));\n    }, 1000);\n};\n\n\nexport const { setIsOwner } = auth.actions\n\nexport default auth.reducer","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Box, Divider, Autocomplete, TextField, Typography } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup'\nimport _TextField from './textField'\nimport useAuth from '../../hooks/useAuth'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setIsOwnerAsync } from '../../redux/slicers/authSlice'\nrequire('dotenv').config()\n\n\nconst loadScript = (url) => {\n    let script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = url;\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\n\nconst SignUpOwner = ({ index, value, navigate }) => {\n    const [places, setPlaces] = useState([])\n    const [query, setQuery] = useState(\"\")\n    const auth = useAuth()\n    const dispatch = useDispatch()\n    const isOwner = useSelector(state => state.auth.isOwner)\n\n\n    const signUpSchema = Yup.object({\n        fName: Yup.string('Enter Your First Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        lName: Yup.string('Enter Your Last Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        uName: Yup.string('Enter Your User Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        dob: Yup.date('Enter Your Date Of Birth')\n            .min(minDate, \"Too Old\")\n            .max(maxDate, \"Too Young\")\n            .required(\"Date Of Birth Required\"),\n        password: Yup.string('Enter A Password')\n            .min(7, \"Too Short\")\n            .required(\"Enter A Password\"),\n        confirmPass: Yup.string('Enter A Same Password')\n            .oneOf([Yup.ref(\"password\"), null], \"Passwords Must Match\")\n            .required('Required Field & Passwords Must Match'),\n        location: Yup.string('Enter Branch Location').required('Required').test('isLocation', \"Select An Available Value\", (val) => {\n            return places.find(place => place === val)\n        }),\n        branchName: Yup.string('Enter Branch Name').required('Required'),\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            fName: \"salman\",\n            lName: \"thasleem\",\n            uName: \"\",\n            dob: \"02/02/1999\",\n            password: \"salman123\",\n            confirmPass: \"salman123\",\n            branchName: \"branch\",\n            location: \"\"\n        },\n        validationSchema: signUpSchema,\n        onSubmit: () => {\n            handleSubmit(formik.values)\n        }\n    })\n\n    const handleScript = (query) => {\n        const options = {\n            types: ['(cities)'],\n            componentRestrictions: { 'country': ['LK'] },\n        }\n\n\n        var autocomplete = new window.google.maps.places.AutocompleteService()\n        autocomplete.getPlacePredictions({\n            input: query,\n            ...options\n        }, (predictions, status) => {\n            if (status != window.google.maps.places.PlacesServiceStatus.OK || !predictions) {\n                return\n            }\n\n            const places = predictions.map(place => place.description)\n            setPlaces(places)\n        })\n\n\n    }\n\n    useEffect(async () => {\n        await dispatch(setIsOwnerAsync(true))\n        if (!isOwner) {\n            loadScript(\n                `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_PLACESAPI}&libraries=places&callback=initMap`\n            );\n        }\n    }, [isOwner])\n\n\n    const handleSubmit = async ({ fName: firstName, lName: lastName, dob, uName: userName, password, confirmPass: confirmPassword, branchName, location }) => {\n        await setQuery(formik.values.location)\n        const registerValues = {\n            firstName,\n            lastName,\n            dob,\n            branchName,\n            location,\n            status: \"Owner\"\n        }\n        const ownerCredentials = {\n            userName,\n            password,\n            confirmPassword\n        }\n        auth.signUpOwner(registerValues, ownerCredentials)\n    }\n    console.log(isOwner)\n    if (index !== value) return null\n    return (\n        isOwner === true ?\n            <Box sx={{\n                display: 'flex',\n                margin: '10% auto',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'space-evenly'\n            }}>\n                <Typography component=\"h2\" >\n                    Owner Already Registered\n                </Typography>\n            </Box>\n            : <form\n\n                sx={{\n                    display: 'flex',\n                    margin: '10% auto',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n                onSubmit={(e) => {\n                    e.preventDefault()\n                    formik.handleSubmit()\n                }}\n            >\n                <Box sx={{\n                    display: 'flex',\n                    margin: '10% auto',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'space-evenly'\n                }}>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', width: 1 / 3, alignItems: 'center' }}>\n                        <Box sx={{ minHeight: '15rem' }}>\n                            <_TextField\n                                label=\"First Name\"\n                                pHolder=\"Name\"\n                                required\n                                type=\"text\"\n                                error={formik.touched.fName && Boolean(formik.errors.fName)}\n                                helper={formik.touched.fName && formik.errors.fName}\n                                value={formik.values.fName}\n                                onChange={formik.handleChange}\n                                margin=\"dense\"\n                                name=\"fName\"\n                            />\n                            <_TextField\n                                label=\"Last Name\"\n                                pHolder=\"Name\"\n                                required\n                                type=\"text\"\n                                error={formik.touched.lName && Boolean(formik.errors.lName)}\n                                helper={formik.touched.lName && formik.errors.lName}\n                                value={formik.values.lName}\n                                onChange={formik.handleChange}\n                                margin=\"dense\"\n                                name=\"lName\"\n                            />\n                            <_TextField\n                                label=\"DOB\"\n                                pHolder=\"DOB\"\n                                required\n                                type='date'\n                                error={formik.touched.dob && Boolean(formik.errors.dob)}\n                                helper={formik.touched.dob && formik.errors.dob}\n                                shrink={true}\n                                value={formik.values.dob}\n                                onChange={formik.handleChange}\n                                margin=\"dense\"\n                                name=\"dob\"\n                            />\n                        </Box>\n                        <Box sx={{ minHeight: '10rem' }}>\n                            <_TextField\n                                label=\"User Name\"\n                                pHolder=\"Name\"\n                                required\n                                type=\"text\"\n                                error={formik.touched.uName && Boolean(formik.errors.uName)}\n                                helper={formik.touched.uName && formik.errors.uName}\n                                value={formik.values.uName}\n                                onChange={formik.handleChange}\n                                margin=\"dense\"\n                                name=\"uName\"\n                            />\n                            <_TextField\n                                label=\"Password\"\n                                pHolder=\"Password\"\n                                required\n                                type=\"password\"\n                                error={formik.touched.password && Boolean(formik.errors.password)}\n                                helper={formik.touched.password && formik.errors.password}\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                margin=\"dense\"\n                                name=\"password\"\n                            />\n                            <_TextField\n                                label=\"Confirm Password\"\n                                pHolder=\"Confirm Password\"\n                                required\n                                type=\"password\"\n                                error={formik.touched.confirmPass && Boolean(formik.errors.confirmPass)}\n                                helper={formik.touched.confirmPass && formik.errors.confirmPass}\n                                value={formik.values.confirmPass}\n                                onChange={formik.handleChange}\n                                margin=\"dense\"\n                                name=\"confirmPass\"\n                            />\n                        </Box>\n                    </Box>\n\n                    <Divider orientation=\"vertical\" flexItem />\n\n                    <Box sx={{ width: 1 / 3 }}>\n                        <_TextField\n                            label=\"Branch Name\"\n                            pHolder=\"Lakderana\"\n                            required\n                            type=\"text\"\n                            error={formik.touched.branchName && Boolean(formik.errors.branchName)}\n                            helper={formik.touched.branchName && formik.errors.branchName}\n                            value={formik.values.branchName}\n                            onChange={formik.handleChange}\n                            name=\"branchName\"\n                        />\n                        <Box>\n                            <Autocomplete\n                                freeSolo\n                                disableClearable\n                                options={places}\n                                renderInput={(params) => (\n                                    <TextField\n                                        {...params}\n                                        label=\"Location\"\n                                        name=\"location\"\n                                        InputProps={{\n                                            ...params.InputProps,\n                                            type: 'search',\n                                        }}\n                                    />\n                                )}\n                                onInputChange={(e, val) => {\n                                    handleScript(val)\n                                    setQuery(val)\n                                    formik.setFieldValue('location', \"\")\n                                }}\n                                onChange={(e, val) => {\n                                    formik.setFieldValue('location', val)\n                                    setQuery(val)\n                                }}\n                                inputValue={query}\n                                loading={places ? false : true}\n                                value={formik.values.location}\n                                label=\"Location\"\n                                name=\"location\"\n                            />\n                            {formik.touched.location && Boolean(formik.errors.location) &&\n                                <Typography color=\"red\"  >\n                                    {formik.touched.location && formik.errors.location}\n                                </Typography>}\n                        </Box>\n                    </Box>\n\n                </Box>\n\n\n                <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                    <Button variant=\"contained\" fullWidth type='submit' sx={{ width: 1 / 3 }}  >Register As Owner</Button>\n                </Box>\n            </form>\n\n    )\n}\n\nexport default SignUpOwner","import React from \"react\";\nimport { Container, Paper, Grid, Tab, Tabs } from \"@mui/material\";\nimport theme from \"../../Theme\";\nimport { display } from \"@mui/system\";\nimport { useNavigate } from \"react-router\";\nimport { useState, useEffect } from \"react\";\nimport SignIn from \"../../components/auth/signIn\";\nimport SignUpOwner from \"../../components/auth/signUpOwner\";\nimport { useSelector } from \"react-redux\";\nimport { Typography, Box } from \"@mui/material\";\n\nconst Auth = () => {\n    let navigate = useNavigate();\n    const isOwner = useSelector(state => state.auth.isOwner)\n    const [owner, setOwner] = useState(isOwner)\n\n    useEffect(() => {\n        setOwner(isOwner)\n        console.log(isOwner)\n    }, [isOwner])\n\n    const [value, setValue] = useState(\"signIn\")\n\n    const handleChange = (e, value) => {\n        setValue(value)\n    }\n\n    return (\n        <Container sx={{\n            bgcolor: 'primary.dark',\n            minHeight: '100vh',\n            minWidth: '100vw',\n\n        }}\n        >\n            <Box sx={{ minWidth: '100vw', transform: 'translateX(-0.8%)', display: 'flex', justifyContent: 'center', backgroundColor: 'primary.light', color: 'primary.dark', height: '10rem', alignItems: 'center' }}>\n                <img\n                    src=\"/hotel.png\"\n                    style={{ width: '20rem', height: '10rem' }}\n                />\n                <Typography component=\"h1\" variant=\"h1\"  >Lakderana Integrated System</Typography>\n            </Box>\n            <Grid container\n                sx={{\n                    minHeight: '80vh',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }}\n            >\n                <Paper elevation={24}\n                    square\n                    sx={{\n                        bgcolor: 'primary.light',\n                        minHeight: value === \"signIn\" ? '25rem' : value === \"signIn\" && owner ? \"60rem\" : '25rem',\n                        width: value === \"signIn\" ? '40rem' : value === \"signIn\" && owner ? \"80rem\" : '40rem',\n                    }}\n                >\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        textColor=\"inherit\"\n                        indicatorColor=\"secondary\"\n                        aria-label=\"auth tabs\"\n                        sx={{ marginLeft: 0 }}\n                        variant='fullWidth'\n                    >\n                        <Tab value=\"signIn\" label=\"Sign In\" sx={{ margin: 'auto' }} />\n                        <Tab value=\"signUp\" label=\"Register\" sx={{ margin: 'auto' }} />\n                    </Tabs>\n                    <SignIn value={value} index=\"signIn\" navigate={navigate} />\n                    <SignUpOwner value={value} index=\"signUp\" navigate={navigate} />\n                </Paper>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Auth","import React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Dashboard from './dashboard'\nimport Auth from '../../screens/login/Auth';\nimport { Outlet } from 'react-router';\n\n\n\nexport default function Layout({ children }) {\n\n    return (\n        <Box sx={{ display: 'flex', minHeight: '100vh' }}>\n            <CssBaseline />\n            <Outlet />\n        </Box>\n    );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst inquiry = createSlice({\n    name: \"inquiry\",\n    initialState: {\n        modalOpen: false,\n        reload: true,\n        statusModal: false\n    },\n    reducers: {\n        setModalOpen: (state, actions) => {\n            state.modalOpen = actions.payload\n        },\n        setReload: (state, actions) => {\n            state.reload = actions.payload\n        },\n        setStatusModal: (state, action) => {\n            state.statusModal = action.payload\n        }\n    }\n})\n\n\n\nexport const { setModalOpen, setReload, setStatusModal } = inquiry.actions\n\nexport default inquiry.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const setcValuesAsync = createAsyncThunk('cusAutoFill/setcValues', async (value = { cName: \"\", cId: \"\", mobileNo: \"\", identityId: \"\", branchId: \"\" }) => {\n    const val = await value\n    return val\n})\n\nexport const setbranchIdAsync = createAsyncThunk('cusAutoFill/setbranchId', async (value) => {\n    const val = await value\n    return val\n})\n\nconst cusAutoFill = createSlice({\n    name: \"cusAutoFill\",\n    initialState: {\n        cValues: {\n            cName: \"\",\n            cId: \"\",\n            mobileNo: \"\",\n            identityId: \"\",\n            branchId: \"\"\n        },\n        branchId: \"\"\n    },\n    extraReducers: builder => builder\n        .addCase(setcValuesAsync.fulfilled, (state, action) => {\n            state.cValues = action.payload\n        })\n        .addCase(setbranchIdAsync.fulfilled, (state, action) => {\n            state.branchId = action.payload || \"\"\n        })\n})\n\n\nexport default cusAutoFill.reducer","import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst branch = createSlice({\n    name: 'branch',\n    initialState: {\n        branchId: '',\n        branchName: \"\"\n    },\n    reducers: {\n        setBranch: (state, actions) => {\n            state.branchId = actions.payload\n        },\n        setBranchName: (state, actions) => {\n            state.branchName = actions.payload\n        }\n    }\n})\n\nexport const { setBranch, setBranchName } = branch.actions\n\nexport default branch.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const setEmpValuesAsync = createAsyncThunk('searchEmployee/setEmpValues', async (value = { empFName: \"\", empLName: \"\", email: \"\", status: \"\", dob: \"\", branchId: \"\" }) => {\n    const val = await value\n    return val\n})\n\nexport const setbranchIdAsync = createAsyncThunk('searchEmployee/setbranchId', async (value) => {\n    const val = await value\n    return val\n})\n\nconst searchEmployee = createSlice({\n    name: \"searchEmployee\",\n    initialState: {\n        empValues: {\n            empFName: \"\",\n            empLName: \"\",\n            email: \"\",\n            status: \"\",\n            branchId: \"\"\n        },\n        branchId: \"\"\n    },\n    extraReducers: builder => builder\n        .addCase(setEmpValuesAsync.fulfilled, (state, action) => {\n            state.empValues = action.payload\n        })\n        .addCase(setbranchIdAsync.fulfilled, (state, action) => {\n            state.branchId = action.payload || \"\"\n        })\n})\n\n\nexport default searchEmployee.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const setNameAsync = createAsyncThunk('beverage/setName', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setTypeAsync = createAsyncThunk('beverage/setType', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setQuantityAsync = createAsyncThunk('beverage/setQuantity', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setPriceAsync = createAsyncThunk('beverage/setPrice', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setCostAsync = createAsyncThunk('beverage/setCost', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setStockAsync = createAsyncThunk('beverage/setStock', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const clearFieldsAsync = createAsyncThunk('beverage/clearFields', async (value = { name: \"\", type: \"\", quantity: \"\", price: \"\", cost: \"\", stock: \"\" }) => {\n    const val = await value\n    return val\n})\n\nconst beverage = createSlice({\n    name: \"beverage\",\n    initialState: {\n        name: \"\",\n        type: \"\",\n        quantity: \"\",\n        price: \"\",\n        cost: \"\",\n        stock: \"\"\n    },\n    extraReducers: builder => builder\n        .addCase(setNameAsync.fulfilled, (state, action) => {\n            state.name = action.payload\n        })\n        .addCase(setTypeAsync.fulfilled, (state, action) => {\n            state.type = action.payload\n        })\n        .addCase(setQuantityAsync.fulfilled, (state, action) => {\n            state.quantity = action.payload\n        })\n        .addCase(setPriceAsync.fulfilled, (state, action) => {\n            state.price = action.payload\n        })\n        .addCase(setCostAsync.fulfilled, (state, action) => {\n            state.cost = action.payload\n        })\n        .addCase(setStockAsync.fulfilled, (state, action) => {\n            state.stock = action.payload\n        })\n        .addCase(clearFieldsAsync.fulfilled, (state, action) => {\n            state = action.payload\n        })\n})\n\n\nexport default beverage.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const setNameAsync = createAsyncThunk('barItem/setName', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setTypeAsync = createAsyncThunk('barItem/setType', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setQuantityAsync = createAsyncThunk('barItem/setQuantity', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setPriceAsync = createAsyncThunk('barItem/setPrice', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\nexport const setCostAsync = createAsyncThunk('beverage/setCost', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\n\nconst barItem = createSlice({\n    name: \"barItem\",\n    initialState: {\n        name: \"\",\n        type: \"\",\n        quantity: \"\",\n        price: \"\",\n        cost: \"\",\n        modalOpen: false\n    },\n    reducers: {\n        setModalOpen: (state, actions) => {\n            state.modalOpen = actions.payload\n        }\n    },\n    extraReducers: builder => builder\n        .addCase(setNameAsync.fulfilled, (state, action) => {\n            state.name = action.payload\n        })\n        .addCase(setTypeAsync.fulfilled, (state, action) => {\n            state.type = action.payload\n        })\n        .addCase(setQuantityAsync.fulfilled, (state, action) => {\n            state.quantity = action.payload\n        })\n        .addCase(setPriceAsync.fulfilled, (state, action) => {\n            state.price = action.payload\n        })\n        .addCase(setCostAsync.fulfilled, (state, action) => {\n            state.cost = action.payload\n        })\n})\n\nexport const { setModalOpen } = barItem.actions\n\nexport default barItem.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const setParamsAsync = createAsyncThunk('barItem/setParams', async (value = { stock: \"\", branchId: \"\", itemId: \"\", name: \"\", type: \"\", quantity: \"\" }) => {\n    const val = await value\n    return val\n})\n\n\n\nconst restockBarItem = createSlice({\n    name: \"restockBarItem\",\n    initialState: {\n        itemParams: {\n            stock: \"\",\n            branchId: \"\",\n            itemId: \"\",\n            name: \"\",\n            type: \"\",\n            quantity: \"\"\n        },\n        restockModalOpen: false\n    },\n    reducers: {\n        setRestockModalOpen: (state, actions) => {\n            state.restockModalOpen = actions.payload\n        }\n    },\n    extraReducers: builder => builder\n        .addCase(setParamsAsync.fulfilled, (state, action) => {\n            state.itemParams = action.payload\n        })\n})\n\nexport const { setRestockModalOpen } = restockBarItem.actions\n\nexport default restockBarItem.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const setQueryAsync = createAsyncThunk('glocation/setQuery', async (value = \"\") => {\n    const val = await value\n    return val\n})\n\n\nconst gLocation = createSlice({\n    name: 'glocation',\n    initialState: {\n        query: \"\"\n    },\n    extraReducers: builder => builder\n        .addCase(setQueryAsync.fulfilled, (state, action) => {\n            state.query = action.payload\n        })\n})\n\n\n\nexport default gLocation.reducer","import { configureStore } from \"@reduxjs/toolkit\";\nimport auth from \"./slicers/authSlice\";\nimport inquiry from \"./slicers/inquiry\";\nimport cusAutoFill from \"./slicers/cusAutoFill\";\nimport branch from \"./slicers/branchSlice\";\nimport searchEmployee from \"./slicers/employeeslice\"\nimport beverage from \"./slicers/beverage\";\nimport barItem from './slicers/addItemModalSlice'\nimport restockBarItem from './slicers/restockItem'\nimport gLocation from \"./slicers/gLocation\";\n\nexport default configureStore({\n    reducer: {\n        auth: auth,\n        inquiry: inquiry,\n        cusAutoFill: cusAutoFill,\n        branch: branch,\n        searchEmployee: searchEmployee,\n        beverage: beverage,\n        barItem: barItem,\n        restockBarItem: restockBarItem,\n        gLocation: gLocation,\n    },\n})","import axios from 'axios';\n\n\nconst api = axios.create({\n    baseURL: 'https://lakderana.as.r.appspot.com/api'\n})\n\nexport default api","import React from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport api from \"../../api/api\";\nimport { useNavigate } from \"react-router\";\nimport { useEffect, useState } from \"react\";\n\nconst AuthProvider = ({ children }) => {\n    const navigate = useNavigate()\n\n    const data = window.localStorage.getItem(\"@user\") || null\n    const userData = data ? JSON.parse(data) : null\n\n\n    const signIn = async (values) => {\n        try {\n            const response = await api.post(\"/auth/login/\", values)\n            const status = response.data.data.status\n            if (status === 1) {\n                const userData = JSON.stringify(response.data.data)\n                console.log(userData)\n                await window.localStorage.setItem(\"@user\", userData)\n                navigate(\"/protected/CustomerHandling\")\n            }\n        } catch (error) {\n\n        }\n    }\n\n    const signUp = async (values) => {\n        try {\n            const response = await api.post(\"/auth/new/\", values)\n            console.log(response)\n            navigate(\"/protected/CustomerHandling\")\n\n        } catch (error) {\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n        }\n\n    }\n\n    const signUpOwner = async (values, credentials) => {\n        try {\n            const response = await api.post(\"/auth/new/\", values)\n            const empId = response.data.data.id\n            credentials.employeeId = empId\n            const empCredentialsRes = await api.post(\"/auth/newCreds/\", credentials)\n            const credentialsRes = empCredentialsRes.data.data\n            const userData = JSON.stringify(credentialsRes)\n            console.log(userData)\n            await window.localStorage.setItem(\"@user\", userData)\n            console.log(credentialsRes)\n            navigate(\"/protected/CustomerHandling\")\n\n        } catch (error) {\n            console.log(error);\n            // console.log(error);\n            // console.log(error.response.headers);\n        }\n\n    }\n\n    const getOwner = async () => {\n        try {\n            const response = await api.get(\"/auth/owner/\")\n            return await response.data.data.bool\n        } catch (error) {\n            console.log(error.response.data);\n        }\n    }\n\n\n    const value = { signUp, getOwner, signUpOwner, signIn, userData }\n    return <AuthContext.Provider value={value} >\n        {children}\n    </AuthContext.Provider>\n}\n\nexport default AuthProvider","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\n\nconst CustomerHandling = () => {\n\n\n    return (\n        <Outlet />\n    )\n}\n\nexport default CustomerHandling","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\nconst PaymentAndServices = () => {\n\n    return (\n\n        <Outlet />\n    )\n\n}\n\nexport default PaymentAndServices","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\nconst Bar = () => {\n\n    return (\n        <Outlet />\n    )\n}\n\nexport default Bar","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\nconst AttendanceDashBoard = () => {\n\n    return (\n        <Outlet />\n    )\n}\n\nexport default AttendanceDashBoard","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\nconst Employee = () => {\n\n    return (\n        <Outlet />\n    )\n}\n\nexport default Employee","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\nconst ManageBranches = () => {\n\n    return (\n        <Outlet />\n    )\n}\n\nexport default ManageBranches","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\nconst ManageEmployee = () => {\n\n    return (\n        <Outlet />\n    )\n}\n\nexport default ManageEmployee","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\nconst ManageRooms = () => {\n\n    return (\n        <Outlet />\n    )\n}\n\nexport default ManageRooms","import React from \"react\";\nimport { Outlet } from 'react-router';\n\n\nconst Statistics = () => {\n\n    return (\n        <Outlet />\n    )\n}\n\nexport default Statistics","import { Box, Typography } from \"@mui/material\";\nimport { ResponsiveContainer } from 'recharts';\nimport { useState } from \"react\";\n\n\n\nconst GraphContainer = ({ children, components, title, style, values }) => {\n\n\n\n    return (\n        <Box sx={{ width: 3 / 7, height: '80rem', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', border: '1px  solid lightgrey', margin: '0 2rem 10rem', ...style }}>\n            <Typography component=\"h2\" variant=\"h4\" >{title}</Typography>\n            <ResponsiveContainer width=\"90%\" height=\"75%\"  >\n                {children}\n            </ResponsiveContainer>\n            {components}\n        </Box>\n    )\n}\n\nexport default GraphContainer","export const checkRange = (from, to, setHelper) => {\n    const dateFrom = new Date(from)\n    const dateTo = new Date(to)\n    if (dateFrom instanceof Date && dateTo instanceof Date) {\n        if (dateTo < dateFrom) {\n            setHelper(\"Invalid Range - Showing All Data\")\n\n            return false\n        } else if (dateTo >= dateFrom) {\n            setHelper(\"Range Valid - Showing Filtered Data\")\n\n            return true\n        } else {\n            setHelper(\"Invalid Range- Showing All Data\")\n\n            return false\n        }\n\n    } else {\n        setHelper(\"Invalid Date\")\n\n        return false\n    }\n}","import { useState, useEffect } from \"react\";\nimport api from \"../../api/api\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport { useSelector } from \"react-redux\";\nimport GraphContainer from \"./graphContainer\";\nimport { Box, TextField, Typography, IconButton } from '@mui/material'\nimport { checkRange } from '../../helpers/checkRange'\nimport { CSVLink } from 'react-csv';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\n\nconst DailyCustomerRegistrations = () => {\n    const branchId = useSelector(state => state.branch.branchId)\n    const [customers, setCustomers] = useState([])\n    const [records, setRecords] = useState([])\n    const [dateFrom, setDateFrom] = useState(\"\")\n    const [dateTo, setDateTo] = useState(\"\")\n    const [helper, setHelper] = useState(\"\")\n\n    const getCustomers = async () => {\n        const URL = `/customer/all/`\n        try {\n            const response = await api.get(URL, {\n                params: {\n                    branchId: branchId\n                }\n            })\n            const data = await response.data\n            if (data.status === 1) {\n                const rows = data.data.rows\n                setCustomers(rows)\n            } else {\n                setCustomers([])\n            }\n        } catch (error) {\n            const err = error.response.data\n            const msg = err.message\n            setCustomers([])\n\n        }\n    }\n\n    const dailyRegistrationsCalculate = (from = \"\", to = \"\") => {\n        if (customers) {\n            const dates = customers.map(customer => new Date(customer.dateRegistered).toISOString().split(\"T\")[0])\n            const setOfDates = [...new Set(dates)]\n            if (from && to && checkRange(from, to, setHelper)) {\n                const fromDate = new Date(from)\n                const toDate = new Date(to)\n                const filteredDates = setOfDates.filter(date => fromDate <= new Date(date) && toDate >= new Date(date))\n                const noOfRegistrationsDaily = filteredDates.map(date => ({ date, number: dates.filter(item => item === date).length }))\n                setRecords(noOfRegistrationsDaily)\n                setTimeout(() => setHelper(\"\"), 2000)\n            } else {\n                const noOfRegistrationsDaily = setOfDates.map(date => ({ date, number: dates.filter(item => item === date).length }))\n                setRecords(noOfRegistrationsDaily)\n                setTimeout(() => setHelper(\"\"), 2000)\n            }\n        } else {\n            setRecords([])\n            setTimeout(() => setHelper(\"\"), 2000)\n        }\n    }\n\n    useEffect(() => {\n        if (dateFrom && dateTo) {\n            dailyRegistrationsCalculate(dateFrom, dateTo)\n        } else {\n            dailyRegistrationsCalculate()\n        }\n    }, [dateFrom, dateTo])\n\n    useEffect(() => {\n        dailyRegistrationsCalculate()\n    }, [customers])\n\n    useEffect(() => {\n        getCustomers()\n    }, [branchId])\n\n    return (\n\n        <GraphContainer\n            title=\"Daily Customer Registrations\"\n            style={{ padding: '1rem' }}\n            components={\n                <Box>\n                    <Box>\n                        <TextField\n                            type=\"date\"\n                            label=\"From\"\n                            onChange={(e, val) => {\n                                if (e.target.value === \"\") {\n                                    setDateTo(e.target.value)\n                                    setDateFrom(e.target.value)\n                                }\n                                setDateFrom(e.target.value)\n                            }}\n                            value={dateFrom}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        <TextField\n                            type=\"date\"\n                            onChange={(e, val) => setDateTo(e.target.value)}\n                            label=\"To\"\n                            value={dateTo}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        {records && <IconButton><CSVLink data={records}  ><FileDownloadOutlinedIcon fontSize=\"large\" sx={{ margin: '1rem', fontSize: 40 }} /> </CSVLink></IconButton>}\n\n                    </Box>\n                    <Typography component=\"h4\" variant=\"body1\" sx={{ margin: '1rem', minHeight: '2rem' }}>{helper}</Typography>\n                </Box>\n            }\n        >\n            <BarChart\n                width={500}\n                height={300}\n                data={records}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n            >\n                {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"number\" fill=\"#8884d8\" />\n            </BarChart>\n        </GraphContainer>\n    )\n}\n\nexport default DailyCustomerRegistrations","import { useState, useEffect } from \"react\";\nimport api from \"../../api/api\";\nimport { Tooltip, Legend, PieChart, Pie, Cell, } from 'recharts';\nimport { useSelector } from \"react-redux\";\nimport GraphContainer from './graphContainer'\nimport { CSVLink } from 'react-csv';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\nimport { Box, TextField, Typography, IconButton } from '@mui/material'\n\nconst data2 = [\n    { name: 'Group A', value: 400 },\n    { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 },\n];\n\nconst COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, startAngle, endAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\" style={{ fontSize: 40 }} >\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nconst CustomerInquiryStats = () => {\n    const branchId = useSelector(state => state.branch.branchId)\n    const [customers, setCustomers] = useState([])\n    const [pieData, setpieData] = useState([])\n    const [records, setRecords] = useState([])\n    const [helper, setHelper] = useState(\"\")\n\n\n\n    const getInquiries = async () => {\n        try {\n            const response = await api.get(`/customer/inquiry/`, {\n                params: {\n                    branchId: branchId,\n                }\n            })\n            const data = response.data.data.rows\n            const message = response.data.message\n            setHelper(message)\n\n            setCustomers(data)\n        } catch (error) {\n            const errorData = error.response.data\n            const message = errorData.message\n            setHelper(message)\n            setCustomers([])\n        }\n    }\n\n    const calculatePie = () => {\n        if (customers) {\n            const pie = customers.map(customer => customer.status)\n            const setOfPie = [...new Set(pie)]\n            const records = setOfPie.map(element => ({ name: element, value: pie.filter(item => item === element).length }))\n            setpieData(records)\n        } else {\n            setpieData([\n                {\n                    name: \"Open\",\n                    value: 0\n                },\n                {\n                    name: \"Close\",\n                    value: 0\n                },\n                {\n                    name: \"Processing\",\n                    value: 0\n                },\n            ])\n        }\n    }\n\n\n\n    useEffect(() => {\n        calculatePie()\n    }, [customers])\n\n    useEffect(() => {\n        getInquiries()\n    }, [branchId])\n\n\n    return (\n        <GraphContainer\n            title=\"Customer Inquiry Statistitcs\"\n            style={{ padding: '1rem' }}\n            components={\n                <Box>\n                    <Box>\n                        {pieData && <IconButton sx={{ transform: 'translateX(50%)' }} ><CSVLink data={pieData}  ><FileDownloadOutlinedIcon fontSize=\"large\" sx={{ margin: '1rem', fontSize: 40 }} /> </CSVLink></IconButton>}\n                    </Box>\n                    <Typography component=\"h4\" variant=\"body1\" sx={{ margin: '1rem', minHeight: '2rem' }}>{helper}</Typography>\n                </Box>\n            }\n        >\n            <PieChart width={400} height={400}>\n                <Pie\n                    data={pieData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={renderCustomizedLabel}\n                    outerRadius={400}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                >\n                    {pieData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n            </PieChart>\n        </GraphContainer>\n    )\n}\n\nexport default CustomerInquiryStats","import React, { useState, useEffect } from \"react\";\nimport { Button, Autocomplete, TextField, Box, Divider, Checkbox, FormControlLabel, Radio, RadioGroup, FormLabel, Typography } from \"@mui/material\";\nimport _TextField from \"./auth/textField\";\nimport api from \"../api/api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setBranch, setBranchName } from \"../redux/slicers/branchSlice\";\n\n\n\n\n\nconst BranchField = ({ errors, helpers, onChange, showBranchName, sx, container }) => {\n    const dispatch = useDispatch()\n    const [isOwner, setOwner] = useState(false)\n    const [branches, setBranches] = useState([])\n    const [isBranch, setisBranch] = useState(false)\n    const [selectBranch, setSelectBranch] = useState({ id: \"\", branchName: \"\" })\n    const branchId = useSelector(state => state.branch.branchId)\n    const showName = typeof showBranchName === 'boolean' ? showBranchName : true\n\n    useEffect(async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const data = await JSON.parse(user)\n        const empStatus = await data.empStatus\n        const branchId = await data.branchId\n\n        if (empStatus === 'Owner') {\n            setOwner(true)\n            const branchResponse = await api.get(\"/branch/getAll\")\n            const data = await branchResponse.data.data\n            const branches = await data.map(branch => ({ id: branch.id.toString(), name: branch.branchName.toString() }))\n            setBranches(branches)\n            dispatch(setBranch(\"\"))\n        } else {\n            dispatch(setBranch(branchId))\n        }\n    }, [])\n\n\n    return (\n        <Box sx={container}>\n            {\n                isOwner &&\n                <Autocomplete\n                    disablePortal\n                    options={branches.map(branch => branch.id.toString())}\n                    renderInput={(params) => <TextField {...params} label=\"Branch\" />}\n                    name=\"branch\"\n                    onChange={(e, val) => {\n                        if (val) {\n                            const int = Number(val)\n                            dispatch(setBranch(int))\n\n                            const branchName = branches.filter(branch => branch.id === val)[0].name\n                            setSelectBranch({ id: val, branchName: branchName })\n                            dispatch(setBranchName(branchName))\n                            setisBranch(true)\n                        }\n                    }}\n                    value={selectBranch.id}\n                    sx={sx}\n                    onInputChange={(e, val) => {\n                        dispatch(setBranch(val))\n                        dispatch(setBranchName(\"\"))\n                        setSelectBranch({ id: \"\", branchName: \"\" })\n                    }\n\n                    }\n                />\n            }\n            {\n                showName &&\n                <_TextField\n                    label=\"Branch Name\"\n                    shrink={true}\n                    required\n                    type='text'\n                    shrink={true}\n                    disabled={true}\n                    default={selectBranch.branchName}\n                    value={selectBranch.branchName}\n                    sx={sx}\n                />\n            }\n            {errors && <Typography sx={{ color: 'red' }}>{helpers}</Typography>}\n            {\n                !isOwner &&\n                <_TextField\n                    label=\"Branch Id\"\n                    shrink={true}\n                    required\n                    type='number'\n                    value={branchId}\n                    shrink={true}\n                    name=\"branch\"\n                    disabled={true}\n                    error={errors}\n                    helperText={helpers}\n                    onChange={onChange}\n                    value={branchId}\n                    sx={sx}\n                />\n            }\n        </Box>\n    )\n}\n\nexport default BranchField","import React from \"react\";\nimport { Box, Divider } from \"@mui/material\";\nimport DailyCustomerRegistrations from \"../../components/stats/dailyCusRegistrations\";\nimport CustomerInquiryStats from \"../../components/stats/inquiryStats\";\nimport BranchField from \"../../components/branchField\";\n\n\n\n\nconst CustomerFrontBoard = () => {\n\n\n    return (\n        <Box>\n            <BranchField sx={{ margin: '1rem' }} container={{ display: 'flex' }} />\n            <Box sx={{ display: 'flex', margin: '1rem', height: '80vh', justifyContent: 'space-evenly' }}>\n\n                <DailyCustomerRegistrations />\n                <Divider orientation=\"vertical\" flexItem />\n                <CustomerInquiryStats />\n\n            </Box>\n        </Box>\n    )\n}\n\nexport default CustomerFrontBoard","import { BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport GraphContainer from \"./graphContainer\";\nimport { useSelector } from 'react-redux';\nimport { Box, Typography, TextField, IconButton } from '@mui/material'\nimport { useState, useEffect } from 'react';\nimport { checkRange } from '../../helpers/checkRange'\nimport { CSVLink } from 'react-csv';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\n\nconst DailyTotalReservations = ({ data }) => {\n    const branchName = useSelector(state => state.branch.branchName)\n    const [dateFrom, setDateFrom] = useState(\"\")\n    const [dateTo, setDateTo] = useState(\"\")\n    const [helper, setHelper] = useState(\"\")\n    const [allData, setData] = useState([])\n    const [filtered, setFiltered] = useState([])\n\n\n    const handleData = (from = \"\", to = \"\") => {\n        if (allData) {\n            const setOfDates = [...new Set(allData.map(data => data.date))]\n            if (from && to && checkRange(from, to, setHelper)) {\n                const fromDate = new Date(from)\n                const toDate = new Date(to)\n                const filteredDates = setOfDates.filter(date => fromDate <= new Date(date) && toDate >= new Date(date))\n                const reservationsDaily = filteredDates.map(date => allData.find(item => item.date === date))\n                setFiltered(reservationsDaily)\n                setTimeout(() => setHelper(\"\"), 2000)\n            } else {\n                setFiltered(allData)\n                setTimeout(() => setHelper(\"\"), 2000)\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (dateFrom && dateTo) {\n            handleData(dateFrom, dateTo)\n        } else {\n            handleData()\n        }\n    }, [dateFrom, dateTo, allData])\n\n    useEffect(() => {\n        setData(data)\n    }, [data])\n\n    return (\n\n        <GraphContainer\n            title={\"Daily Total Reservations\" + `${branchName ? ` - ${branchName}` : \"\"}`}\n            style={{ padding: '1rem' }}\n            components={\n                <Box>\n                    <Box>\n                        <TextField\n                            type=\"date\"\n                            label=\"From\"\n                            onChange={(e, val) => {\n                                if (e.target.value === \"\") {\n                                    setDateTo(e.target.value)\n                                    setDateFrom(e.target.value)\n                                }\n                                setDateFrom(e.target.value)\n                            }}\n                            value={dateFrom}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        <TextField\n                            type=\"date\"\n                            onChange={(e, val) => setDateTo(e.target.value)}\n                            label=\"To\"\n                            value={dateTo}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        {filtered && <IconButton><CSVLink data={filtered}  ><FileDownloadOutlinedIcon fontSize=\"large\" sx={{ margin: '1rem', fontSize: 40 }} /> </CSVLink></IconButton>}\n                    </Box>\n                    <Typography component=\"h4\" variant=\"body1\" sx={{ margin: '1rem', minHeight: '2rem' }}>{helper}</Typography>\n                </Box>\n            }\n\n        >\n            <BarChart\n                width={500}\n                height={300}\n                data={filtered}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n            >\n                {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"totalNumberOfReservations\" fill=\"#8884d8\" />\n            </BarChart>\n        </GraphContainer>\n    )\n}\n\nexport default DailyTotalReservations","import { LineChart, Legend, Line, XAxis, YAxis, Tooltip } from 'recharts';\nimport GraphContainer from \"./graphContainer\";\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react'\nimport { Box, Typography, TextField, IconButton } from '@mui/material'\nimport { checkRange } from '../../helpers/checkRange'\nimport { CSVLink } from 'react-csv';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\nconst randomColor = require('randomcolor')\n\nconst ReservationTypeStats = ({ data }) => {\n    const branchName = useSelector(state => state.branch.branchName)\n    const [initialData, setInitialData] = useState([])\n    const [lines, setLines] = useState([])\n    const [dateFrom, setDateFrom] = useState(\"\")\n    const [dateTo, setDateTo] = useState(\"\")\n    const [helper, setHelper] = useState(\"\")\n    const [filtered, setFiltered] = useState([])\n\n\n    useEffect(() => {\n        const filterData = data ? data.map(item => ({ date: item.date, ...item.reservationsByType })) : { date: \"\", other: \"\" }\n        const allLines = data ? [...new Set(data.map(item => Object.keys(item.reservationsByType)).flat())] : []\n        setInitialData(filterData)\n        setLines(allLines)\n    }, [data])\n\n    const handleData = (from = \"\", to = \"\") => {\n        if (initialData) {\n            const setOfDates = [...new Set(initialData.map(data => data.date))]\n            if (from && to && checkRange(from, to, setHelper)) {\n                const fromDate = new Date(from)\n                const toDate = new Date(to)\n                const filteredDates = setOfDates.filter(date => fromDate <= new Date(date) && toDate >= new Date(date))\n                const filteredData = filteredDates.map(date => initialData.find(item => item.date === date))\n                const filteredLines = data ? [...new Set(data.filter(item => fromDate <= new Date(item.date) && toDate >= new Date(item.date)).map(item => Object.keys(item.reservationsByType)).flat())] : []\n                setFiltered(filteredData)\n                setLines(filteredLines)\n                setTimeout(() => setHelper(\"\"), 2000)\n            } else {\n                setFiltered(initialData)\n                const allLines = data ? [...new Set(data.map(item => Object.keys(item.reservationsByType)).flat())] : []\n                setLines(allLines)\n                setTimeout(() => setHelper(\"\"), 2000)\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (dateFrom && dateTo) {\n            handleData(dateFrom, dateTo)\n        } else {\n            handleData()\n        }\n    }, [dateFrom, dateTo, initialData])\n\n    //console.log(initialData)\n    return (\n\n        <GraphContainer\n            title={\"Daily Reservations By Type Of Room \" + `${branchName ? ` - ${branchName}` : \"\"}`}\n            style={{ padding: '1rem' }}\n            components={\n                <Box\n\n                >\n                    <Box\n                    >\n                        <TextField\n                            type=\"date\"\n                            label=\"From\"\n                            onChange={(e, val) => {\n                                if (e.target.value === \"\") {\n                                    setDateTo(e.target.value)\n                                    setDateFrom(e.target.value)\n                                }\n                                setDateFrom(e.target.value)\n                            }}\n                            value={dateFrom}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        <TextField\n                            type=\"date\"\n                            onChange={(e, val) => setDateTo(e.target.value)}\n                            label=\"To\"\n                            value={dateTo}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        {filtered && <IconButton><CSVLink data={filtered}  ><FileDownloadOutlinedIcon fontSize=\"large\" sx={{ margin: '1rem', fontSize: 40 }} /> </CSVLink></IconButton>}\n                    </Box>\n                    <Typography component=\"h4\" variant=\"body1\" sx={{ margin: '1rem', minHeight: '2rem' }}>{helper}</Typography>\n                </Box>\n            }\n        >\n            <LineChart width={730} height={250} data={filtered}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n\n            >\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend height={5} margin={{ bottom: 0 }} align=\"right\" verticalAlign=\"bottom\" />\n                {\n                    lines.map((line, i) => <Line type=\"monotone\" dataKey={line} stroke={randomColor({\n                        luminosity: 'dark',\n                        format: 'rgb',\n                        alpha: 1 // e.g. 'rgba(9, 1, 107, 0.5)',\n                    })} />)\n                }\n            </LineChart>\n        </GraphContainer>\n    )\n}\n\nexport default ReservationTypeStats","import { useState, useEffect } from \"react\";\nimport { Box, Divider } from \"@mui/material\";\nimport DailyTotalReservations from \"../../components/stats/dailyTotalReservatons\";\nimport ReservationTypeStats from \"../../components/stats/reservationTypeStats\";\nimport BranchField from \"../../components/branchField\";\nimport api from \"../../api/api\";\nimport { useSelector } from \"react-redux\";\n\n\n\nconst PaymentsFrontBoard = () => {\n    const [data, setData] = useState([])\n    const [helper, setHelper] = useState(\"\")\n    const branchId = useSelector(state => state.branch.branchId)\n    const [totalReservation, setTotalReservations] = useState([])\n    const [statsByType, setStatsByType] = useState([])\n\n    const getReservation = async () => {\n        try {\n            const response = await api.get(\"/stats/getReservation/\", {\n                params: {\n                    branchId: branchId\n                }\n            })\n            const data = await response.data\n            const message = await data.message\n            setHelper(message)\n            const rows = data.data.rows\n            setData(rows)\n            setTimeout(() => setHelper(\"\"), 2000)\n        } catch (error) {\n            const err = error.response.data\n            if (err) {\n                const message = err.message\n                setHelper(message)\n                setData([])\n                setTimeout(() => setHelper(\"\"), 2000)\n\n            }\n\n        }\n    }\n\n    const handleData = () => {\n        if (branchId && data.length > 0) {\n            const subData = data[0].data\n            const totalReservationsDaily = subData.map((item, i) => ({\n                date: item.date,\n                totalNumberOfReservations: item.totalNumberOfReservations,\n            }))\n            const reservationsByTypeDaily = subData.map((item, i) => ({\n                date: item.date,\n                reservationsByType: item.reservationsByType\n            }))\n            setTotalReservations(totalReservationsDaily)\n            setStatsByType(reservationsByTypeDaily)\n        } else if (data.length > 0) {\n            const subData = data.map(elem => elem.data).flat()\n            const setOfDates = [...new Set(subData.map(row => row.date))]\n            const totalReservationsDaily = setOfDates.map((item, i) => ({\n                date: item,\n                totalNumberOfReservations: subData.filter(row => row.date === item).map(item => item.totalNumberOfReservations).reduce((value, item) => value += item),\n            }))\n            const reservationsByTypeDaily = setOfDates.map((item, i) => ({\n                date: item,\n                reservationsByType: subData.filter(row => row.date === item)\n                    .map((item, i, arr) => {\n\n                        return item.reservationsByType\n                    })\n                    .reduce((value, item, i, arr) => {\n                        const keys = Object.keys(item)\n                        keys.forEach(element => {\n                            value[element] = value[element] ? value[element] + item[element] : item[element]\n                        });\n                        return value\n                    }\n                        , {\n                            deluxe: 0,\n                            normal: 0,\n                        }\n                    ),\n            }))\n            setTotalReservations(totalReservationsDaily)\n            setStatsByType(reservationsByTypeDaily)\n        }\n        //console.log(subData)\n    }\n\n    useEffect(() => {\n        getReservation()\n    }, [branchId])\n\n    useEffect(() => {\n        if (data) {\n            handleData()\n        }\n    }, [data])\n\n\n    return (\n        <Box>\n            <BranchField sx={{ margin: '1rem' }} container={{ display: 'flex' }} />\n            <Box sx={{ display: 'flex', margin: '1rem', height: '80vh', justifyContent: 'space-evenly' }}>\n\n                <DailyTotalReservations data={totalReservation} />\n                <Divider orientation=\"vertical\" flexItem />\n                <ReservationTypeStats data={statsByType} />\n            </Box>\n        </Box>\n    )\n}\n\nexport default PaymentsFrontBoard","import { BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport GraphContainer from \"./graphContainer\";\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { Box, TextField, Typography, IconButton } from '@mui/material'\nimport { checkRange } from '../../helpers/checkRange'\nimport { CSVLink } from 'react-csv';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\n\nconst DailyBarSalesTotal = ({ data }) => {\n    const branchName = useSelector(state => state.branch.branchName)\n    const [dateFrom, setDateFrom] = useState(\"\")\n    const [dateTo, setDateTo] = useState(\"\")\n    const [helper, setHelper] = useState(\"\")\n    const [allData, setData] = useState([])\n    const [filtered, setFiltered] = useState([])\n\n    const handleData = (from = \"\", to = \"\") => {\n        if (allData) {\n            const setOfDates = [...new Set(allData.map(data => data.date))]\n            if (from && to && checkRange(from, to, setHelper)) {\n                const fromDate = new Date(from)\n                const toDate = new Date(to)\n                const filteredDates = setOfDates.filter(date => fromDate <= new Date(date) && toDate >= new Date(date))\n                const salesDaily = filteredDates.map(date => allData.find(item => item.date === date))\n                setFiltered(salesDaily)\n                setTimeout(() => setHelper(\"\"), 2000)\n            } else {\n                setFiltered(allData)\n                setTimeout(() => setHelper(\"\"), 2000)\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        if (dateFrom && dateTo) {\n            handleData(dateFrom, dateTo)\n        } else {\n            handleData()\n        }\n    }, [dateFrom, dateTo, allData])\n\n    useEffect(() => {\n        setData(data)\n    }, [data])\n\n    console.log(data)\n    return (\n        <GraphContainer\n            title={\"Daily Bar Sales\" + `${branchName ? ` - ${branchName}` : \"\"}`}\n            style={{ padding: '1rem' }}\n            components={\n                <Box>\n                    <Box>\n                        <TextField\n                            type=\"date\"\n                            label=\"From\"\n                            onChange={(e, val) => {\n                                if (e.target.value === \"\") {\n                                    setDateTo(e.target.value)\n                                    setDateFrom(e.target.value)\n                                }\n                                setDateFrom(e.target.value)\n                            }}\n                            value={dateFrom}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        <TextField\n                            type=\"date\"\n                            onChange={(e, val) => setDateTo(e.target.value)}\n                            label=\"To\"\n                            value={dateTo}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        {filtered && <IconButton><CSVLink data={filtered}  ><FileDownloadOutlinedIcon fontSize=\"large\" sx={{ margin: '1rem', fontSize: 40 }} /> </CSVLink></IconButton>}\n\n                    </Box>\n                    <Typography component=\"h4\" variant=\"body1\" sx={{ margin: '1rem', minHeight: '2rem' }}>{helper}</Typography>\n                </Box>\n            }\n        >\n            <BarChart\n                width={500}\n                height={300}\n                data={filtered}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n            >\n                {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"totalSales\" fill=\"#8884d8\" />\n            </BarChart>\n        </GraphContainer>\n    )\n}\n\nexport default DailyBarSalesTotal","import { LineChart, Legend, Line, XAxis, YAxis, Tooltip } from 'recharts';\nimport GraphContainer from \"./graphContainer\";\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Box, TextField, Typography, IconButton } from '@mui/material'\nimport { checkRange } from '../../helpers/checkRange'\nimport { CSVLink } from 'react-csv';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\nconst randomColor = require('randomcolor')\n\nconst DailyBarSalesByType = ({ data }) => {\n    const branchName = useSelector(state => state.branch.branchName)\n    const [initialData, setInitialData] = useState([])\n    const [initialLines, setInitialLines] = useState([])\n    const [lines, setLines] = useState([])\n    const [filteredData, setFiltered] = useState([])\n    const [dateFrom, setDateFrom] = useState(\"\")\n    const [dateTo, setDateTo] = useState(\"\")\n    const [helper, setHelper] = useState(\"\")\n\n    useEffect(() => {\n        const filterData = data ? data.map(item => ({ date: item.date, ...item.salesByType })) : { date: \"\", other: \"\" }\n        const lines = data ? [...new Set(data.map(item => Object.keys(item.salesByType)).flat())] : []\n        //console.log(\"data\", data)\n        setInitialData(filterData)\n        setFiltered(filterData)\n        setInitialLines(lines)\n        setLines(lines)\n    }, [data])\n\n    const handleData = (from = \"\", to = \"\") => {\n        if (initialData) {\n            const setOfDates = [...new Set(initialData.map(data => data.date))]\n            if (from && to && checkRange(from, to, setHelper)) {\n                const fromDate = new Date(from)\n                const toDate = new Date(to)\n                const filteredDates = setOfDates.filter(date => fromDate <= new Date(date) && toDate >= new Date(date))\n                const filteredData = filteredDates.map(date => initialData.find(item => item.date === date))\n                const filteredLines = data ? [...new Set(data.filter(item => fromDate <= new Date(item.date) && toDate >= new Date(item.date)).map(item => Object.keys(item.salesByType)).flat())] : []\n                console.log(filteredLines)\n                setFiltered(filteredData)\n                setLines(filteredLines)\n                setTimeout(() => setHelper(\"\"), 2000)\n            } else {\n                setFiltered(initialData)\n                setLines(initialLines)\n                setTimeout(() => setHelper(\"\"), 2000)\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        if (dateFrom && dateTo) {\n            handleData(dateFrom, dateTo)\n        } else {\n            handleData()\n        }\n    }, [dateFrom, dateTo, initialData])\n\n\n    return (\n\n        <GraphContainer\n            title={\"Daily Sales By Beverage Type \" + `${branchName ? ` - ${branchName}` : \"\"}`}\n            style={{ padding: '1rem' }}\n            components={\n                <Box>\n                    <Box>\n                        <TextField\n                            type=\"date\"\n                            label=\"From\"\n                            onChange={(e, val) => {\n                                if (e.target.value === \"\") {\n                                    setDateTo(e.target.value)\n                                    setDateFrom(e.target.value)\n                                }\n                                setDateFrom(e.target.value)\n                            }}\n                            value={dateFrom}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        <TextField\n                            type=\"date\"\n                            onChange={(e, val) => setDateTo(e.target.value)}\n                            label=\"To\"\n                            value={dateTo}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            sx={{ margin: '1rem' }}\n                        />\n                        {filteredData && <IconButton><CSVLink data={filteredData}  ><FileDownloadOutlinedIcon fontSize=\"large\" sx={{ margin: '1rem', fontSize: 40 }} /> </CSVLink></IconButton>}\n\n                    </Box>\n                    <Typography component=\"h4\" variant=\"body1\" sx={{ margin: '1rem', minHeight: '2rem' }}>{helper}</Typography>\n                </Box>\n            }\n        >\n            <LineChart width={730} height={250} data={filteredData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                <Legend height={5} margin={{ bottom: 0 }} align=\"right\" verticalAlign=\"bottom\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                {\n                    lines.map((line, i) => <Line type=\"monotone\" dataKey={line} stroke={randomColor({\n                        luminosity: 'dark',\n                        format: 'rgb',\n                        alpha: 1 // e.g. 'rgba(9, 1, 107, 0.5)',\n                    })} />)\n                }\n            </LineChart>\n        </GraphContainer>\n    )\n}\n\nexport default DailyBarSalesByType","import { useState, useEffect } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ZAxis, Legend } from 'recharts';\nimport GraphContainer from \"./graphContainer\";\nimport { useSelector } from 'react-redux';\nimport { Box, TextField, IconButton } from '@mui/material'\nimport { CSVLink } from 'react-csv';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\nconst randomColor = require('randomcolor')\n\n\n\nconst DailyBarSalesByDrink = ({ data }) => {\n    const branchName = useSelector(state => state.branch.branchName)\n    const [date, setDate] = useState(\"\")\n    const [chart, setChart] = useState([])\n\n\n    const handleData = (date) => {\n        if (date) {\n            const filter = data.filter(item => item.date === date).map(item => item.salesByDrink).map(element => {\n                const keys = Object.keys(element)\n                keys.forEach(key => {\n                    element[key] = element[key].map(item => ({ ...item, type: key }))\n                })\n                return Object.values(element)\n            }).flat(2)\n                .map(item => ({ x: Number(item.quantity.replace(\"L\", \"\").trim()), y: item.sales, z: item.drink, p: item.type }))\n\n            const alcs = filter.map(item => item.p).map(item => ({\n                type: item,\n                items: filter.filter(obj => obj.p === item)\n            })).reduce((value, current) => {\n                const findIndex = value.findIndex(item => item.type === current.type)\n                if (findIndex >= 0) {\n                    value[findIndex].items = [...value[findIndex].items, ...current.items]\n                    return value\n                } else {\n                    return [...value, current]\n                }\n            }, [])\n            console.log(alcs)\n            setChart(alcs)\n        }\n    }\n\n    useEffect(() => {\n        handleData(date)\n    }, [date])\n\n    useEffect(() => {\n        const date = new Date().toISOString().split(\"T\")[0].trim()\n        setDate(date)\n    }, [])\n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            return (\n                <div className=\"custom-tooltip\">\n                    <p >{payload[0].payload.z}</p>\n                    <p >{`${payload[1].name} : ${payload[1].value}`}</p>\n                    <p >{`${payload[0].name} : ${payload[0].value}L`}</p>\n                </div>\n            );\n        }\n\n        return null;\n    };\n\n    //console.log(data)\n    return (\n        <GraphContainer\n            title={\"Daily Sales By Beverage \" + `${branchName ? ` - ${branchName}` : \"\"}`}\n            components={\n                <Box sx={{ display: 'flex', alignContent: 'center', justifyContent: 'center' }}>\n                    <TextField\n                        type=\"date\"\n                        onChange={(e, val) => setDate(e.target.value)}\n                        value={date}\n                        sx={{ margin: '1rem' }}\n                    />\n                    {chart.length > 0 && <IconButton><CSVLink data={chart}  ><FileDownloadOutlinedIcon fontSize=\"large\" sx={{ margin: '1rem', fontSize: 40 }} /> </CSVLink></IconButton>}\n\n                </Box>\n            }\n            values={date}\n        >\n            <ScatterChart\n                width={500}\n                height={500}\n                margin={{\n                    top: 20,\n                    right: 20,\n                    bottom: 20,\n                    left: 20,\n                }}\n            >\n                <XAxis type=\"number\" dataKey=\"x\" name=\"quantity\" unit=\"L\" />\n                <YAxis type=\"number\" dataKey=\"y\" name=\"sales\" />\n                <YAxis type=\"text\" dataKey=\"z\" name=\"drink\" />\n                <Tooltip cursor={{ strokeDasharray: '3 3' }} payload={chart} content={<CustomTooltip />} />\n                {\n                    chart.map(scatter => <Scatter name={scatter.type} data={scatter.items} fill={randomColor({\n                        luminosity: 'dark',\n                        format: 'rgb',\n                        alpha: 1 // e.g. 'rgba(9, 1, 107, 0.5)',\n                    })} />)\n                }\n                {/* <Scatter name=\"A school\" data={chart} fill=\"#8884d8\" /> */}\n                <Legend height={5} margin={{ bottom: 0 }} align=\"right\" verticalAlign=\"bottom\" />\n            </ScatterChart>\n        </GraphContainer>\n    )\n}\n\nexport default DailyBarSalesByDrink","import { useState, useEffect } from \"react\";\nimport { Box, Divider } from \"@mui/material\";\nimport BranchField from \"../../components/branchField\";\nimport api from \"../../api/api\";\nimport { useSelector } from \"react-redux\";\nimport DailyBarSalesTotal from \"../../components/stats/dailyBarTotalSales\";\nimport DailyBarSalesByType from \"../../components/stats/barSalesByType\";\nimport DailyBarSalesByDrink from \"../../components/stats/barSalesByDrink\";\n\n\nconst BarFrontBoard = () => {\n    const [data, setData] = useState([])\n    const [helper, setHelper] = useState(\"\")\n    const branchId = useSelector(state => state.branch.branchId)\n    const [totalSales, setTotalSales] = useState([])\n    const [salesByType, setSalesByType] = useState([])\n    const [salesByDrink, setSalesByDrink] = useState([])\n\n\n    const getBar = async () => {\n        try {\n            const response = await api.get(\"/stats/getBarStats/\", {\n                params: {\n                    branchId: branchId\n                }\n            })\n            const data = await response.data\n            const message = await data.message\n            setHelper(message)\n            const rows = data.data.rows\n            setData(rows)\n            setTimeout(() => setHelper(\"\"), 2000)\n        } catch (error) {\n            console.log(error)\n            const err = error.response ? error.response.data : null\n            if (err) {\n                const message = err.message\n                setHelper(message)\n                setData([])\n                setTimeout(() => setHelper(\"\"), 2000)\n\n            }\n\n        }\n    }\n\n    const handleData = () => {\n        if (data.length > 0) {\n            const subData = data.map(elem => elem.data).flat()\n            const setOfDates = [...new Set(subData.map(row => row.date))]\n            const totalSalesDaily = setOfDates.map((item, i) => {\n                return {\n                    date: item,\n                    totalSales: subData.filter(row => row.date === item).map(item => item.totalNumberOfSales).reduce((val, item) => val += item),\n                }\n            })\n            const salesByType = setOfDates.map((item, i) => {\n                return {\n                    date: item,\n                    salesByType: subData.filter(row => row.date === item).map((item, i, arr) => item.salesByType)\n                        // .flat()\n                        .reduce((value, item, i, arr) => {\n                            const keys = Object.keys(item)\n                            // console.log(arr)\n                            // console.log(value, i)\n                            keys.forEach(element => {\n                                value[element] = value[element] ? value[element] + item[element] : item[element]\n                            });\n                            // console.log(value, i)\n                            return value\n                        }, {\n                            Alcohol: 0\n                        })\n                }\n            })\n            const salesByDrink = setOfDates.map((item, i) => ({\n                date: item,\n                salesByDrink: subData.filter(row => row.date === item)\n                    .map((item, i, arr) => {\n                        return item.salesByDrink\n                    }).filter(item => item.length > 0 ? item : null)\n                    .flat()\n                    .reduce((value, piece, index, array) => {\n                        const type = piece.type\n                        if (value.hasOwnProperty(type)) {\n                            piece.items.forEach(drink => {\n                                const beverage = drink.drink\n                                const quantity = drink.quantity\n                                const sales = drink.sales\n                                const findIndex = value[type].findIndex(itm => itm.drink == beverage && itm.quantity == quantity)\n                                if (findIndex >= 0) {\n                                    let found = value[type][findIndex]\n                                    found.sales += sales\n                                    value[type] = [...value[type].slice(0, findIndex), found, ...value[type].slice(findIndex + 1)]\n\n                                } else {\n                                    value[type] = [...value[type], drink]\n                                }\n                            });\n                            return value\n\n                        } else {\n                            value[type] = piece.items\n                            return value\n                        }\n                    }, {})\n            }))\n            if (totalSalesDaily) setTotalSales(totalSalesDaily)\n            if (salesByType) setSalesByType(salesByType)\n            if (salesByDrink) setSalesByDrink(salesByDrink)\n        } else {\n            setTotalSales([])\n            setSalesByType([])\n            setSalesByDrink([])\n        }\n    }\n\n    useEffect(() => {\n        getBar()\n    }, [branchId])\n\n    useEffect(() => {\n        if (data) {\n            handleData()\n        }\n    }, [data, branchId])\n\n    // console.log(salesByType)\n    //console.log(salesByDrink)\n    // console.log(totalSales)\n    // console.log(data)\n    return (\n        <Box>\n            <BranchField sx={{ margin: '1rem' }} container={{ display: 'flex' }} />\n            <Box sx={{ display: 'flex', margin: '1rem', flexWrap: 'wrap', justifyContent: 'center' }}>\n                <DailyBarSalesTotal data={totalSales} />\n                <DailyBarSalesByType data={salesByType} />\n                <DailyBarSalesByDrink data={salesByDrink} />\n                <Divider orientation=\"vertical\" flexItem />\n\n                {/* <ReservationTypeStats data={statsByType} /> */}\n            </Box>\n        </Box>\n    )\n}\n\nexport default BarFrontBoard","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setbranchIdAsync, setcValuesAsync } from \"../redux/slicers/cusAutoFill\";\nimport { Autocomplete, TextField, Typography } from \"@mui/material\";\nimport _TextField from \"./auth/textField\";\nimport api from \"../api/api\";\n\n\nconst CustomerAutoFill = ({ errors, helpers, onchanges, identity, mobileNo }) => {\n    const [isName, setIsName] = useState(false)\n    const [customers, setCustomers] = useState([])\n    const [initialCustomers, setInititalCustomers] = useState([])\n    const [nameInput, setNameInput] = useState(\"\")\n    const [idInput, setIdInput] = useState(\"\")\n    const [cName, setCName] = useState(\"\")\n    const [cId, setCId] = useState(\"\")\n    const [mobile, setMobile] = useState(\"\")\n    const [identityId, setIdentityId] = useState(\"\")\n    const dispatch = useDispatch()\n    const branch = useSelector(state => state.cusAutoFill.branchId)\n    const selectedCus = useSelector(state => state.cusAutoFill.cValues)\n    const cusIdentity = selectedCus.identityId\n    const cusMobile = selectedCus.mobileNo\n\n\n\n    useEffect(async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const branchId = await JSON.parse(user).branchId\n        const customersObject = await api.get(`/customer/all/`, {\n            params: {\n                branchId: branchId\n            }\n        })\n        const customerData = await customersObject.data.data.rows\n        const combo = customerData.map(cus => ({ id: cus.id, name: cus.name, identityId: cus.identityId, mobileNo: cus.mobileNo, branchId: cus.branchId }))\n        await dispatch(setbranchIdAsync(branchId))\n        setCustomers(combo)\n        setInititalCustomers(combo)\n    }, [])\n\n    useEffect(() => {\n        if ((cName !== \"\" || cName !== null) && nameInput !== \"\") {\n            const customerVals = customers.filter(element => element.name == cName)\n            setNameInput(cName)\n            setCustomers(customerVals)\n            setIdInput(\"\")\n            setIsName(true)\n        } else if (cName === \"\" || cName == null) {\n            setCustomers(initialCustomers)\n            setIdInput(\"\")\n            setCId(\"\")\n            setIsName(false)\n            setCName(\"\")\n        }\n    }, [cName, nameInput])\n\n    useMemo(() => {\n        const customer = customers.find(cus => cus.name === cName && cus.id === cId)\n        const cVals = {\n            cName: cName || \"\",\n            cId: cId || \"\",\n            mobileNo: mobile || customer?.mobileNo,\n            identityId: identityId || customer?.identityId,\n        }\n        dispatch(setcValuesAsync(cVals))\n        if (cName !== \"\" && cId !== \"\" && cName !== null && cId !== null) {\n            if (customer) {\n                setIdentityId(customer.identityId)\n                setMobile(customer.mobileNo)\n            }\n        }\n    }, [cName, cId, mobile, identityId])\n\n    return (\n        <>\n            <Autocomplete\n                name=\"name\"\n                value={cName}\n                onChange={(event, newValue) => {\n                    setCName(newValue)\n                    onchanges.name()\n                }}\n                inputValue={nameInput}\n                onInputChange={(event, newInputValue) => {\n                    setNameInput(newInputValue)\n                    setCId(\"\")\n                    setIdentityId(\"\")\n                    setMobile(\"\")\n                }}\n                options={customers.map(customer => customer.name)}\n                renderInput={(params) => <TextField {...params} label=\"Enter Customer Name\" type=\"text\" />}\n                autoSelect\n                clearOnBlur\n                sx={{ width: 1, margin: '1rem 0 ' }}\n            />\n            {errors.name && <Typography component=\"p\" textAlign=\"center\" variant=\"p\" color=\"red\">\n                {helpers.name}\n            </Typography>}\n            {isName && <Autocomplete\n                name=\"id\"\n                value={cId}\n                onChange={(event, newValue) => {\n                    setCId(newValue)\n                    onchanges.id()\n                }}\n                inputValue={idInput}\n                onInputChange={(event, newInputValue) => {\n                    setIdInput(newInputValue)\n                    setIdentityId(\"\")\n                    setMobile(\"\")\n                }}\n                options={customers.map(customer => customer.id)}\n                renderInput={(params) => <TextField {...params} label=\"Enter Customer ID\" type=\"number\" />}\n                autoSelect\n                clearOnBlur\n                sx={{ width: 1, margin: '1rem 0 ' }}\n            />\n            }\n            {errors.id && <Typography component=\"p\" textAlign=\"center\" variant=\"p\" color=\"red\">\n                {helpers.id}\n            </Typography>}\n            {identity && <Autocomplete\n                name=\"identity\"\n                value={cusIdentity}\n                options={[cusIdentity]}\n                renderInput={(params) => <TextField {...params} label=\"Identity ID\" type=\"text\" />}\n                disableClearable\n                defaultValue={cusIdentity}\n                clearOnBlur\n                sx={{ width: 1, margin: '1rem 0 ' }}\n            />}\n\n            {mobileNo && <Autocomplete\n                name=\"mobile\"\n                value={cusMobile}\n                options={[cusMobile]}\n                renderInput={(params) => <TextField {...params} label=\"Mobile No\" type=\"number\" />}\n                disableClearable\n                defaultValue={cusMobile}\n                clearOnBlur\n                sx={{ width: 1, margin: '1rem 0 ' }}\n            />}\n            <_TextField\n                label=\"Branch Id\"\n                disabled={true}\n                type=\"text\"\n                value={branch}\n                name=\"branch\"\n                shrink={true}\n            />\n        </>\n    )\n}\n\nexport default CustomerAutoFill","import React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Box, Fade, Modal, Backdrop, Autocomplete, TextField } from \"@mui/material\";\nimport { Formik, useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport api from '../../../api/api'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setModalOpen, setReload } from \"../../../redux/slicers/inquiry\";\nimport CustomerAutoFill from '../../../components/customerAutoFill'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 800,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    borderRadius: '1rem',\n    boxShadow: 24,\n    p: 4,\n};\n\n\nconst AddInquiry = ({ index, value, width }) => {\n    const modalOpen = useSelector(state => state.inquiry.modalOpen)\n    const customerAutoFill = useSelector(state => state.cusAutoFill.cValues)\n    const cusName = customerAutoFill.cName\n    const cusId = customerAutoFill.cId\n    const dispatch = useDispatch()\n\n    const customerInquirySchema = Yup.object({\n        cName: Yup.string('Enter Your Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        cId: Yup.string('Enter Customer Id')\n            .min(1, \"Too Short\")\n            .required(\"Enter A Customer Id\"),\n        title: Yup.string('Specify Inquiry Title').min(10, 'Too Short!'),\n        description: Yup.string('Specify A Small Description About The Inquiry').min(10, 'Too Short!'),\n        status: Yup.string('Select Status').default(\"OPEN\")\n    })\n    const formik = useFormik({\n        initialValues: {\n            cName: \"\",\n            cId: \"\",\n            title: \"\",\n            description: \"\",\n            status: \"\"\n        },\n        validationSchema: customerInquirySchema,\n        onSubmit: val => handleInquiry(formik.values)\n    })\n\n    useEffect(() => {\n        formik.setFieldValue('cName', cusName)\n    }, [cusName])\n\n    useEffect(() => {\n        formik.setFieldValue('cId', cusId)\n    }, [cusId])\n\n    const handleClose = () => {\n        dispatch(setModalOpen(false))\n        formik.resetForm()\n    };\n\n    const handleInquiry = async (values) => {\n        try {\n            const req = {\n                name: values.cName,\n                title: values.title,\n                description: values.description,\n                status: values.status\n            }\n\n            const response = await api.put(`/customer/inquire/${values.cId}`, req)\n            const data = await response.data.data\n            dispatch(setReload(true))\n            handleClose()\n        } catch (error) {\n            console.log(error.response.data)\n        }\n    }\n    const helps = {\n        cName: formik.touched.cName && formik.errors.cName,\n        cId: formik.touched.cId && formik.errors.cId,\n    }\n\n    const errs = {\n        cName: formik.touched.cName && Boolean(formik.errors.cName),\n        id: formik.touched.cId && Boolean(formik.errors.cId),\n    }\n\n    const onChanges = {\n        name: () => formik.setFieldValue('cName', cusName),\n        id: () => formik.setFieldValue('cId', cusId)\n    }\n    console.log(cusName, cusId)\n    if (index !== value) return null\n    return (\n        <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            open={modalOpen}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            onClose={(obj, reason) => reason === \"backdropClick\" ? null : handleClose()}\n        >\n            <Fade in={modalOpen}>\n                <Box sx={style}>\n                    <Typography component=\"h1\" textAlign=\"center\" variant=\"h4\">\n                        Add Inquiry\n                    </Typography>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            formik.handleSubmit()\n\n                        }}\n                        style={{\n                            display: 'flex',\n                            width: width,\n                            minHeight: '25rem',\n                            margin: '5% auto ',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'space-evenly'\n                        }}\n                    >\n                        <CustomerAutoFill\n                            errors={errs}\n                            helpers={helps}\n                            onchanges={onChanges}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Title\"\n                            pHolder=\"Enter Inquiry Title\"\n                            required\n                            type=\"text\"\n                            error={formik.touched.title && Boolean(formik.errors.title)}\n                            helper={formik.touched.title && formik.errors.title}\n                            value={formik.values.title}\n                            onChange={formik.handleChange}\n                            name=\"title\"\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Description\"\n                            pHolder=\"Describe Inquiry\"\n                            required\n                            type=\"text\"\n                            error={formik.touched.description && Boolean(formik.errors.description)}\n                            helper={formik.touched.description && formik.errors.description}\n                            value={formik.values.description}\n                            onChange={formik.handleChange}\n                            name=\"description\"\n                            multiline={true}\n                            rows={4}\n                        />\n                        <Autocomplete\n                            error={formik.touched.status && Boolean(formik.errors.status)}\n                            helper={formik.touched.status && formik.errors.status}\n                            name=\"status\"\n                            value={formik.values.status}\n                            onChange={(event, newValue) => {\n                                formik.setFieldValue('status', newValue)\n                            }}\n                            options={[\"Open\", \"Close\", \"Processing\"]}\n                            renderInput={(params) => <TextField {...params} label=\"Select Inquiry Status\" type=\"text\" />}\n                            autoSelect\n                            clearOnBlur\n                            sx={{ width: 1, margin: '1rem 0 ' }}\n                            defaultValue=\"Open\"\n\n                        />\n                        <Button variant=\"contained\" fullWidth sx={{ margin: '1rem 0 0' }} type='submit'  >Add Inquiry</Button>\n                        <Button variant=\"contained\" fullWidth sx={{ margin: '1rem 0 0' }} type='button' color=\"error\" onClick={handleClose}>Close</Button>\n                    </form>\n                </Box>\n            </Fade>\n        </Modal>\n    )\n}\n\nexport default AddInquiry","import React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Box, Fade, Modal, Backdrop, Autocomplete, TextField } from \"@mui/material\";\nimport { Formik, useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport api from '../../../api/api'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setStatusModal, setReload } from \"../../../redux/slicers/inquiry\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 800,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    borderRadius: '1rem',\n    boxShadow: 24,\n    p: 4,\n};\n\n\nconst InsertStatus = ({ index, value, width, row },) => {\n    const statusModalOpen = useSelector(state => state.inquiry.statusModal)\n    const dispatch = useDispatch()\n    const [branchId, setBranchId] = useState(\"\")\n    const { id, cId, description, name, title } = row\n    let status = row.status\n    const [isStatusChanged, setStatusChanged] = useState(false)\n\n    const customerStatusSchema = Yup.object({\n        cName: Yup.string('Enter Your Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        cId: Yup.string('Enter Customer Id')\n            .min(1, \"Too Short\")\n            .required(\"Enter A Customer Id\"),\n        title: Yup.string('Specify Inquiry Title').min(10, 'Too Short!'),\n        description: Yup.string('Specify A Small Description About The Inquiry').min(10, 'Too Short!'),\n        status: Yup.string('Select Status').default(\"Open\")\n    })\n    const formik = useFormik({\n        initialValues: {\n            cName: name,\n            cId: cId,\n            title: title,\n            description: description,\n            status: status\n        },\n        validationSchema: customerStatusSchema,\n        onSubmit: val => handleInquiryStatus(formik.values)\n    })\n\n    const handleClose = () => {\n        dispatch(setStatusModal(false))\n        formik.resetForm()\n    };\n\n\n    useEffect(async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const branchId = await JSON.parse(user).branchId\n        setBranchId(branchId)\n    }, [])\n\n    useEffect(() => {\n        if (status !== formik.values.status) {\n            setStatusChanged(true)\n        } else {\n            setStatusChanged(false)\n        }\n    }, [formik.values.status])\n\n    const handleInquiryStatus = async (values) => {\n        try {\n            const req = {\n                status: values.status\n            }\n\n            const response = await api.put(`/customer/${cId}/${id}`, req)\n            status = values.status\n            handleClose()\n            dispatch(setReload(true))\n            status = values.status\n            formik.setFieldValue('status', status)\n            status = formik.values.status\n            setStatusChanged(false)\n        } catch (error) {\n            console.log(error.response.data)\n        }\n    }\n    console.log(formik.values.status)\n    if (index !== value) return null\n    return (\n        <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            open={statusModalOpen}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            onClose={(obj, reason) => reason === \"backdropClick\" ? null : handleClose()}\n        >\n            <Fade in={statusModalOpen}>\n                <Box sx={style}>\n                    <Typography component=\"h1\" textAlign=\"center\" variant=\"h4\">\n                        Change Inquiry Status\n                    </Typography>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            if (formik.values.status !== status) {\n                                formik.handleSubmit()\n                            }\n\n                        }}\n                        style={{\n                            display: 'flex',\n                            width: width,\n                            minHeight: '25rem',\n                            margin: '5% auto ',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'space-evenly'\n                        }}\n                    >\n                        <_TextField\n                            disabled={true}\n                            sx={{ padding: '5px' }}\n                            label=\"Customer Name\"\n                            type=\"text\"\n                            value={name}\n                            name=\"cName\"\n                        />\n                        <_TextField\n                            disabled={true}\n                            sx={{ padding: '5px' }}\n                            label=\"Customer Id\"\n                            type=\"text\"\n                            value={cId}\n                            name=\"cId\"\n                        />\n                        <_TextField\n                            disabled={true}\n                            sx={{ padding: '5px' }}\n                            label=\"Title\"\n                            type=\"text\"\n                            value={title}\n                            name=\"title\"\n                        />\n                        <_TextField\n                            disabled={true}\n                            sx={{ padding: '5px' }}\n                            label=\"Description\"\n                            type=\"text\"\n                            value={description}\n                            name=\"description\"\n                            multiline={true}\n                            rows={4}\n                        />\n                        <Autocomplete\n                            error={formik.touched.status && Boolean(formik.errors.status)}\n                            helper={formik.touched.status && formik.errors.status}\n                            name=\"status\"\n                            value={formik.values.status}\n                            onChange={(event, newValue) => {\n                                formik.setFieldValue('status', newValue)\n                            }}\n                            options={[\"Open\", \"Close\", \"Processing\"]}\n                            renderInput={(params) => <TextField {...params} label=\"Select Inquiry Status\" type=\"text\" />}\n                            autoSelect\n                            clearOnBlur\n                            sx={{ width: 1, margin: '1rem 0 ' }}\n\n                        />\n                        {isStatusChanged && <Button variant=\"contained\" fullWidth sx={{ margin: '1rem 0 0' }} type='submit'  >Change Status</Button>}\n                        <Button variant=\"contained\" fullWidth sx={{ margin: '1rem 0 0' }} type='button' color=\"error\" onClick={handleClose}>Close</Button>\n                    </form>\n                </Box>\n            </Fade>\n        </Modal>\n    )\n}\n\nexport default InsertStatus","import React, { useState, useEffect } from \"react\";\nimport _TextField from \"../../../components/auth/textField\"\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Button, Typography, TextField, Modal, Fade, Backdrop, Box } from \"@mui/material\";\nimport api from '../../../api/api'\nimport useAuth from \"../../../hooks/useAuth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setModalOpen, setReload, setStatusModal } from \"../../../redux/slicers/inquiry\";\nimport AddInquiry from \"./addInquiry\";\nimport InsertStatus from \"./insert\";\n\nconst columns = [\n    { field: 'id', headerName: 'ID', width: 120 },\n    { field: 'cId', headerName: 'Customer Id', width: 200 },\n    { field: 'name', headerName: 'Name', width: 250 },\n    { field: 'mobile', headerName: 'Mobile No', width: 200 },\n    {\n        field: 'identity',\n        headerName: 'Identity/Social Security No',\n        width: 250,\n    },\n    {\n        field: 'title',\n        headerName: 'Title',\n        sortable: false,\n        width: 350,\n    },\n    {\n        field: 'status',\n        headerName: 'Status',\n        sortable: false,\n        width: 300,\n    },\n];\n\n\n\nconst CustomerInquiry = () => {\n    const [selected, setSelected] = useState([])\n    const [allRows, setAllRows] = useState([])\n    const [query, setQuery] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [branchId, setBranchId] = useState(\"\")\n    const [selectedRow, setSelectedRow] = useState(null)\n    const auth = useAuth()\n    const dispatch = useDispatch()\n    const reload = useSelector(state => state.inquiry.reload)\n    const statusModalOpen = useSelector(state => state.inquiry.statusModal)\n\n\n    const handleOpen = () => dispatch(setModalOpen(true));\n\n    const handleOpenStatus = () => dispatch(setStatusModal(true))\n\n\n    useEffect(async () => {\n        const branchId = await JSON.parse(auth.userData).branchId\n        setBranchId(branchId)\n    }, [])\n\n    const getList = async () => {\n        try {\n            if (reload) {\n                const response = await api.get(`/customer/inquiry/`, {\n                    params: {\n                        branchId: branchId,\n                        query: query\n                    }\n                })\n                const data = response.data.data.rows\n                const rows = data.map(row => ({\n                    id: row.id,\n                    cId: row.customerId,\n                    name: row.name,\n                    mobile: row.mobileNo,\n                    identity: row.identityId,\n                    title: row.title,\n                    description: row.description,\n                    status: row.status\n                }))\n                setAllRows(rows)\n                dispatch(setReload(false))\n            }\n        } catch (error) {\n            dispatch(setReload(true))\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('focusin', () => dispatch(setReload(true)))\n\n        return () => {\n            window.removeEventListener('focusin', () => dispatch(setReload(true)))\n        }\n    }, [])\n    useEffect(async () => {\n        await getList()\n    }, [branchId, query, reload])\n\n    const handleRowclick = (row) => {\n        if (selected.length === 0) {\n            setSelectedRow(row)\n        } else {\n            setSelectedRow(null)\n        }\n    }\n\n    useEffect(() => {\n        if (selected.length > 0) {\n            const description = allRows.find(row => row.id === selected[0]).description || \"Not Available\"\n            setDescription(description)\n        }\n    }, [selected])\n    return (\n        <>\n            <TextField\n                label=\"Search Customer\"\n                name=\"customer\"\n                placeholder=\"Search For Customers By Name\"\n                type=\"search\"\n                // onChange={props.onChange}\n                error={false}\n\n                // helper={}\n                margin='dense'\n                sx={{\n                    padding: 2\n                }}\n                variant=\"standard\"\n                focused={true}\n                onChange={(e, val) => {\n                    setQuery(e.target.value)\n                    dispatch(setReload(true))\n                }}\n                fullWidth\n            />\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: 400, width: '70%' }}>\n                    <DataGrid\n                        rows={allRows}\n                        columns={columns}\n                        pageSize={5}\n                        rowsPerPageOptions={[5]}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true\n                        }\n                        onRowClick={({ row }) => handleRowclick(row)}\n                    />\n                </div>\n                <div style={{ width: '30%', margin: '10px' }}>\n                    <Typography variant=\"h4\" gutterBottom component=\"div\" paragraph align='center'>\n                        Description\n                    </Typography>\n                    <Typography variant=\"h5\" gutterBottom component=\"div\" paragraph align='center'>\n                        {description}\n                    </Typography>\n                </div>\n\n            </div>\n\n            <div style={{ width: '100%', display: \"flex\", justifyContent: 'flex-start', alignItems: 'center', height: '4rem', marginLeft: '1rem' }}>\n                <Button variant=\"contained\" color=\"primary\" type=\"button\"\n                    onClick={handleOpen} size=\"large\"\n                    sx={{ marginRight: 1 }} >Add Inquiry</Button>\n\n                {selectedRow && <Button variant=\"contained\" color=\"warning\" type='submit'\n                    onClick={handleOpenStatus} size=\"large\"\n                    sx={{ marginRight: 1 }}\n                >Change Status</Button>}\n            </div>\n\n            <AddInquiry />\n            {selectedRow && <InsertStatus row={{ ...selectedRow }} />}\n\n        </>\n    )\n}\n\nexport default CustomerInquiry","import React from \"react\";\nimport _TextField from \"./auth/textField\";\n\n\n\nconst CustomerRegistrationFields = ({ errors, helpers, values, onChanges }) => {\n\n    return (\n        <>\n            <_TextField\n                label=\"Name\"\n                pHolder=\"Name\"\n                required\n                type=\"text\"\n                error={errors.name}\n                helper={helpers.name}\n                value={values.name}\n                onChange={onChanges}\n                name=\"name\"\n            />\n            <_TextField\n                label=\"Mobile Number\"\n                pHolder=\"947XXXXXXXX / Foreign Mobile Number\"\n                required\n                type='number'\n                error={errors.mobile}\n                helper={helpers.mobile}\n                value={values.mobile}\n                onChange={onChanges}\n                shrink={true}\n                name=\"mobile\"\n            />\n            <_TextField\n                label=\"ID/Passport No\"\n                pHolder=\"XXXXXXXXXV / XXXXXXXXXX / NXXXXXXX\"\n                required\n                type=\"text\"\n                error={errors.identity}\n                helper={helpers.identity}\n                value={values.identity}\n                onChange={onChanges}\n                name=\"identity\"\n            />\n        </>\n    )\n}\n\nexport default CustomerRegistrationFields","import React, { useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport api from '../../../api/api'\nimport CustomerRegistrationFields from \"../../../components/customerRegistrationFields\";\nimport { Typography } from '@mui/material'\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\nconst CustomerRegistration = ({ index, value, width }) => {\n    const [helper, setHelper] = useState(\"\")\n\n    const customerRegisterSchema = Yup.object({\n        name: Yup.string('Enter Your Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        mobile: Yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n        identity: Yup.string('Enter An NIC ID Or Passport ID')\n            .min(7, \"Too Short\")\n            .required(\"Enter An NIC ID Or Passport ID\"),\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n            mobile: \"\",\n            identity: \"\"\n        },\n        validationSchema: customerRegisterSchema,\n        onSubmit: val => handleRegister(formik.values)\n    })\n\n    const handleRegister = async (values) => {\n        try {\n            const req = {\n                name: values.name,\n                mobileNo: values.mobile,\n                identityId: values.identity,\n                branchId: 56\n            }\n\n            const response = await api.post(\"/customer/register/\", req)\n            setHelper(response.data.message)\n            formik.resetForm()\n        } catch (error) {\n            if (error.response.data) {\n                setHelper(error.response.data.message)\n            }\n        }\n\n        setTimeout(() => setHelper(\"\"), 3000)\n    }\n    const helps = {\n        name: formik.touched.name && formik.errors.name,\n        mobile: formik.touched.mobile && formik.errors.mobile,\n        identity: formik.touched.identity && formik.errors.identity,\n    }\n\n    const errs = {\n        name: formik.touched.name && Boolean(formik.errors.name),\n        mobile: formik.touched.mobile && Boolean(formik.errors.mobile),\n        identity: formik.touched.identity && Boolean(formik.errors.identity),\n    }\n\n    const vals = {\n        name: formik.values.name,\n        mobile: formik.values.mobile,\n        identity: formik.values.identity\n    }\n\n\n    if (index !== value) return null\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault()\n                formik.handleSubmit()\n            }}\n            style={{\n                display: 'flex',\n                width: width,\n                minHeight: '20rem',\n                margin: '10% auto',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'space-evenly'\n            }}\n        >\n            <CustomerRegistrationFields\n                helpers={helps}\n                errors={errs}\n                values={vals}\n                onChanges={formik.handleChange}\n            />\n            <Typography component=\"h4\" variant=\"body1\">{helper}</Typography>\n            <Button variant=\"contained\" fullWidth type='submit' >Register Customer</Button>\n        </form>\n    )\n}\n\nexport default CustomerRegistration","import React, { useState, useEffect } from \"react\";\nimport _TextField from \"../../../components/auth/textField\"\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Button, Typography, Modal, Box } from \"@mui/material\";\nimport api from \"../../../api/api\";\nimport { CSVDownload, CSVLink } from \"react-csv\";\n\n\n// {\n//     \"id\": 22,\n//     \"branchId\": 56,\n//     \"roomId\": 22,\n//     \"customerId\": 11,\n//     \"checkIn\": \"2022-01-02T18:30:00.000Z\",\n//     \"checkOut\": \"2022-01-05T18:30:00.000Z\",\n//     \"pricePerNight\": 20000,\n//     \"noOfAdults\": 3,\n//     \"noOfChildren\": 3,\n//     \"Total\": 60000,\n//     \"lengthOfStay\": 3,\n//     \"name\": \"asdasfadgda\",\n//     \"mobileNo\": \"78482344848448\",\n//     \"identityId\": \"a48asda4gasgsd\",\n//     \"roomNo\": 234,\n//     \"isBooked\": 1,\n//     \"roomTypeId\": 9\n//   }\nconst columns = [\n    { field: 'name', headerName: 'Name', align: \"center\", width: 200 },\n    { field: 'mobileNo', headerName: 'Mobile Number', align: \"center\", width: 200 },\n    { field: 'identityId', headerName: 'Identity(Passport/NIC)', align: \"center\", width: 150 },\n    { field: 'roomNo', headerName: 'Room Number', type: 'number', align: \"center\", width: 100 },\n    { field: 'id', headerName: 'ID', align: \"center\", width: 100 },\n    { field: 'branchId', headerName: 'Branch ID', align: \"center\", width: 100 },\n    { field: 'roomId', headerName: 'Room ID', align: \"center\", width: 100 },\n    { field: 'customerId', headerName: 'Customer ID', align: \"center\", width: 150 },\n    {\n        field: 'checkIn',\n        headerName: 'Check-In Date',\n        width: 150,\n        valueGetter: (params) => {\n            const row = params.row\n            return new Date(row.checkIn).toLocaleDateString()\n        }\n    },\n    {\n        field: 'checkOut',\n        headerName: 'Check-Out Date',\n        width: 150,\n        valueGetter: (params) => {\n            const row = params.row\n            return new Date(row.checkOut).toLocaleDateString()\n        }\n    },\n    {\n        field: 'checkIn',\n        headerName: 'Checked In Date',\n        align: \"center\", width: 200,\n\n    },\n    {\n        field: 'checkOut',\n        headerName: 'Check Out Date',\n        align: \"center\", width: 200,\n\n    },\n    {\n        field: 'noOfAdults',\n        headerName: 'Number Of Adults',\n        type: 'date',\n        align: \"center\", width: 150,\n    },\n    {\n        field: 'noOfChildren',\n        headerName: 'Number Of Children',\n        type: 'number',\n        align: \"center\", width: 200,\n    },\n    { field: 'pricePerNight', headerName: 'Price Per Night', align: \"center\", width: 150 },\n    { field: 'Total', headerName: 'Total Price', align: \"center\", width: 150 },\n    {\n        field: 'lengthOfStay',\n        headerName: 'Length Of Stay(Days)',\n        type: 'number',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'isBooked',\n        headerName: 'Booked(bool)',\n        align: \"center\", width: 0,\n        hide: true\n    },\n    {\n        field: 'status',\n        headerName: 'Status',\n        width: 150,\n        valueGetter: (params) => {\n            const row = params.row\n            return row.isBooked === 1 ? \"In\" : \"Out\"\n        }\n    },\n];\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst InHotelCustomers = () => {\n    const [selected, setSelected] = useState([])\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [branchId, setBranchId] = useState(\"\")\n    const [allCustomers, setAllCustomers] = useState([])\n    const [helper, setHelper] = useState(\"\")\n    const [nameQuery, setNameQuery] = useState(\"\")\n    const [roomNoQuery, setRoomNoQuery] = useState(\"\")\n\n\n    useEffect(() => {\n        const user = window.localStorage.getItem(\"@user\")\n        const data = JSON.parse(user)\n        const branchId = data.branchId\n        setBranchId(branchId)\n    }, [])\n\n    useEffect(() => {\n        getCustomers()\n    }, [branchId])\n\n\n    const getCustomers = async (name = \"\", roomNo = \"\") => {\n        if (branchId) {\n            try {\n                const response = await api.get(\"/manage/room/getBooked/\", {\n                    params: {\n                        branchId: branchId,\n                        name: name,\n                        roomNo: roomNo\n                    }\n                })\n                const data = await response.data\n                const message = data.message\n                const rows = data.data.data\n                const isSuccess = data.data.isSuccess\n                if (isSuccess) {\n                    setAllCustomers(rows)\n                    setHelper(message)\n                    setTimeout(() => setHelper(\"\"), 2000)\n                } else {\n                    setAllCustomers([])\n                    setHelper(message)\n                    setTimeout(() => setHelper(\"\"), 2000)\n                }\n            } catch (error) {\n                if (error.response) {\n                    const data = error.response.data\n                    const message = data.message\n                    setAllCustomers([])\n                    setHelper(message)\n                } else {\n                    setAllCustomers([])\n                    setHelper(\"Something Went Wrong\")\n                }\n                setTimeout(() => setHelper(\"\"), 2000)\n            }\n        }\n    }\n\n    useEffect(() => {\n        getCustomers(nameQuery, roomNoQuery)\n    }, [nameQuery, roomNoQuery])\n\n\n\n    return (\n        <>\n            <Box sx={{ display: 'flex' }}>\n                <_TextField\n                    label=\"Search By Customer Name\"\n                    name=\"customer\"\n                    pHolder=\"Search For Customers By Name\"\n                    type=\"search\"\n                    onChange={(e) => setNameQuery(e.target.value)}\n                    value={nameQuery}\n                    error={false}\n                    // helper={}\n                    margin='dense'\n                    sx={{\n                        padding: 2\n                    }}\n                    variant=\"standard\"\n                    focused={true}\n                />\n                <_TextField\n                    label=\"Search By Room No\"\n                    name=\"roomNo\"\n                    pHolder=\"Search For Customers By Name\"\n                    type=\"search\"\n                    onChange={(e) => setRoomNoQuery(e.target.value)}\n                    error={false}\n                    // helper={}\n                    margin='dense'\n                    sx={{\n                        padding: 2\n                    }}\n                    variant=\"standard\"\n                    focused={true}\n                    value={roomNoQuery}\n                />\n            </Box>\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: '70vh', width: '100%' }}>\n                    <DataGrid\n                        rows={allCustomers}\n                        columns={columns}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        autoPageSize\n                    />\n                </div>\n\n            </div>\n\n            <div style={{ width: '100%', display: \"flex\", justifyContent: 'flex-start', alignItems: 'center', height: '4rem', marginLeft: '1rem' }}>\n                <Button variant=\"contained\" color=\"primary\" type='submit' size=\"large\" sx={{ marginRight: 1 }} disabled={selected.length > 0 ? false : true} onClick={handleOpen}>Check Out Customer</Button>\n                {allCustomers &&\n                    <Button\n                        variant=\"contained\" color=\"primary\" type='button' size=\"large\" sx={{ marginRight: 1 }} disabled={allCustomers.length > 0 ? false : true}><CSVLink data={allCustomers} style={{ textDecoration: 'none', color: 'white' }} >Download Table</CSVLink></Button>}\n            </div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Are You Sure ?\n                    </Typography>\n                    <div style={{ width: '100%', display: 'flex', justifyContent: 'space-evenly' }} >\n                        <Button variant=\"contained\" color=\"primary\" type='submit' size=\"large\" sx={{ marginRight: 1 }} >Yes</Button>\n                        <Button variant=\"contained\" color=\"primary\" type='submit' size=\"large\" sx={{ marginRight: 1 }} >No</Button>\n                    </div>\n                </Box>\n            </Modal>\n        </>\n    )\n}\n\nexport default InHotelCustomers","import { Box } from \"@mui/material\";\nimport CustomerRegistrationFields from \"./customerRegistrationFields\"\nimport CustomerAutoFill from \"./customerAutoFill\"\n\n\nconst CustomerDetailsSection = ({ errors, helpers, onchanges, values, width, newCus, oldCus }) => {\n    return (\n        <Box sx={{ width: width }}>\n            {newCus && <CustomerRegistrationFields\n                helpers={helpers.helps}\n                errors={errors.errs}\n                values={values}\n                onChanges={onchanges.handleChange}\n            />\n            }\n            {oldCus && <CustomerAutoFill mobileNo={true} identity={true}\n                errors={errors.errsAutoFill}\n                helpers={helpers.helpsAutoFill}\n                onchanges={onchanges.onChangesAutoFill}\n            />}\n        </Box>\n    )\n}\n\nexport default CustomerDetailsSection","\nconst helpsAutoFill = (formik) => ({\n    name: formik.touched.name && formik.errors.name,\n    id: formik.touched.id && formik.errors.id,\n})\n\nconst errsAutoFill = (formik) => ({\n    name: formik.touched.name && Boolean(formik.errors.name),\n    id: formik.touched.id && Boolean(formik.errors.id),\n})\n\nconst onChangesAutoFill = (formik, values) => ({\n    name: () => formik.setFieldValue('name', values.cusName),\n    id: () => formik.setFieldValue('id', values.cusId)\n})\n\nconst helps = (formik) => ({\n    name: formik.touched.name && formik.errors.name,\n    mobile: formik.touched.mobile && formik.errors.mobile,\n    identity: formik.touched.identity && formik.errors.identity,\n})\n\nconst errs = (formik) => ({\n    name: formik.touched.name && Boolean(formik.errors.name),\n    mobile: formik.touched.mobile && Boolean(formik.errors.mobile),\n    identity: formik.touched.identity && Boolean(formik.errors.identity),\n})\n\nconst vals = (formik) => ({\n    name: formik.values.name,\n    mobile: formik.values.mobile,\n    identity: formik.values.identity\n})\n\nexport { helps, helpsAutoFill, errs, errsAutoFill, onChangesAutoFill, vals }","import React, { useEffect, useState } from \"react\";\nimport { Button, Typography, Box, Divider, Switch, FormControlLabel, Autocomplete, TextField } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport CustomerDetailsSection from \"../../../components/customerDetailsSections\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { helps, helpsAutoFill, errs, errsAutoFill, vals, onChangesAutoFill } from '../../../helpers/customerDetailsProps'\nimport { setcValuesAsync } from \"../../../redux/slicers/cusAutoFill\";\nimport { setBranch } from \"../../../redux/slicers/branchSlice\"\nimport api from '../../../api/api'\nimport BranchField from \"../../../components/branchField\";\nimport { load } from \"dotenv\";\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\n\nconst ReserveRoom = ({ index, value }) => {\n    const [newCus, setnewCus] = useState(true);\n    const [food, setFood] = useState({\n        breakfast: false,\n        lunch: false,\n        dinner: false\n    });\n    const [loadedData, setLoadedData] = useState([])\n    const [types, setTypes] = useState([])\n    const [numbers, setNumbers] = useState([])\n    const [adults, setAdults] = useState([])\n    const [childs, setChilds] = useState([])\n    const customerAutoFill = useSelector(state => state.cusAutoFill.cValues)\n    const cusName = customerAutoFill.cName\n    const cusId = customerAutoFill.cId\n    const mobileNo = customerAutoFill.mobileNo\n    const identityId = customerAutoFill.identityId\n    const branchId = useSelector(state => state.branch.branchId)\n    const [helper, setHelper] = useState(\"\")\n    const [buyNow, setBuyNow] = useState(false)\n    const dispatch = useDispatch()\n\n\n    const handleFood = (breakfast = food.breakfast, lunch = food.lunch, dinner = food.dinner) => {\n        setFood({ breakfast, lunch, dinner })\n    }\n\n    const reserveRoomSchema = Yup.object({\n        name: Yup.string('Enter Your Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        mobile: Yup.number('Enter A Mobile Phone Number')\n            .test('len', 'Enter A Value With 9 Or More Digits', (val) => val && val.toString().length >= 9)\n            .required(\"Date Of Birth Required\"),\n        identity: Yup.string('Enter An NIC ID Or Passport ID')\n            .min(7, \"Too Short\")\n            .required(\"Enter An NIC ID Or Passport ID\"),\n        dateIn: Yup.date('Specify Check In Date').required('Check In Date Missing'),\n        dateOut: Yup.date('Specify Check Out Date')\n            .when('dateIn', (dateIn, Schema) => {\n                let endDate = new Date(dateIn)\n                const day = endDate.getDate() + 1\n                endDate.setDate(day)\n                return (dateIn && Schema.min(endDate))\n            })\n            .required('Check Out Date Missing'),\n        minAdults: Yup.number('Specify Minimum Number Of Adults')\n            .min(1, \"Enter A  Number\")\n            .max(8, \"Too Crowded\"),\n        minChildren: Yup.number('Specify Minimum Number Of Children')\n            .min(1, \"Enter A  Number\")\n            .max(5, \"Too Crowded\"),\n        pricePerNight: Yup.number('Price Per Night Missing')\n            .min(1, \"Enter A  Valid Value\").required('Price Per Night Missing'),\n        total: Yup.number('Total Cost Missing')\n            .min(1, \"Enter A  Valid Value\").required('Total Cost Missing'),\n        nights: Yup.number('Specify Length Of Stay')\n            .min(1, \"Enter A  Valid Value\").max(30, \"Maximum Number Of Nights is 30\").required('length Of Stay Missing'),\n        roomNo: Yup.number('Enter A Room Number')\n            .max(1000, \"Room Number Seems Too Long\")\n            .required(\"Room Number Is Required\"),\n        roomType: Yup.string('Select Or Specify A Room Type')\n            .min(4, \"Too Short\")\n            .required(\"Room Type Is Required\"),\n        beds: Yup.number('Enter A Number').min(0, \"Enter A Valid Number\").max(3, \"Enter A Realistic Number\").default(1),\n        branchId: Yup.string('Select A Branch Id')\n            .min(1, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n            mobile: \"\",\n            identity: \"\",\n            dateIn: \"\",\n            dateOut: \"\",\n            minAdults: \"\",\n            minChildren: \"\",\n            pricePerNight: \"\",\n            nights: \"\",\n            roomType: \"\",\n            roomNo: \"\",\n            beds: \"\",\n            total: \"\",\n            branchId: \"\"\n\n        },\n        validationSchema: reserveRoomSchema,\n        onSubmit: val => handleSubmit(val)\n    })\n\n    const clearFields = () => {\n        formik.setFieldValue('roomType', \"\")\n        formik.setFieldValue('roomNo', \"\")\n        formik.setFieldValue('minAdults', \"\")\n        formik.setFieldValue('minChildren', \"\")\n        formik.setFieldValue('pricePerNight', \"\")\n        formik.setFieldValue('beds', \"\")\n        formik.setFieldValue('nights', \"\")\n        formik.setFieldValue('total', \"\")\n    }\n\n    const handleCustomers = () => {\n        if (!newCus) {\n            formik.setFieldValue('name', cusName)\n            formik.setFieldValue('mobile', mobileNo)\n            formik.setFieldValue('identity', identityId)\n        }\n    }\n\n    useEffect(() => {\n        handleCustomers()\n    }, [customerAutoFill])\n\n    const getRooms = async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const userParsed = await JSON.parse(user)\n        const employeeId = await userParsed.employeeId\n        try {\n            console.log(branchId)\n            const response = await api.get(\"/manage/room/getFilter/\", {\n                params: {\n                    branchId: branchId,\n                    employeeId: employeeId\n                }\n            })\n            const message = await response.data.message\n            const data = await response.data.data\n            const isRoom = await data.isRoom\n            const rows = data.rows\n            const filter = rows.filter(room => room.isBooked === 0)\n            if (isRoom) {\n                setLoadedData(filter)\n            } else {\n                setLoadedData([])\n                clearFields()\n            }\n            setHelper(message)\n        } catch (error) {\n            const response = error.response.data\n            const message = response.message\n            const data = response.data\n            const isRoom = data.isRoom\n            setLoadedData([])\n            clearFields()\n            setHelper(message)\n        }\n        setTimeout(() => setHelper(\"\"), 2000)\n    }\n\n    useEffect(() => {\n        getRooms()\n    }, [branchId])\n\n    useEffect(() => {\n        if (branchId) {\n            formik.setFieldValue('branchId', branchId)\n        }\n    }, [branchId])\n\n    useEffect(() => {\n        if (loadedData) {\n            const types = loadedData.map((room) => room.type)\n            const set = [...new Set(types)]\n            setTypes(set)\n        }\n    }, [loadedData])\n\n    useEffect(() => {\n        const checkIn = new Date(formik.values.dateIn)\n        const checkOut = new Date(formik.values.dateOut)\n        if (checkIn instanceof Date && checkOut instanceof Date) {\n            const inMonth = checkIn.getMonth()\n            const inYear = checkIn.getFullYear()\n            const inDays = checkIn.getDate()\n            const outMonth = checkOut.getMonth()\n            const outYear = checkOut.getFullYear()\n            const outDays = checkOut.getDate()\n            const diffYear = outYear - inYear\n            const diffMonth = outMonth - inMonth\n            const diffDays = outDays - inDays\n            console.log(diffYear, diffMonth, diffDays)\n            const TotalDays = diffDays + (diffMonth * 30) + (diffYear * 365)\n            formik.setFieldValue('nights', TotalDays)\n            if (formik.values.pricePerNight) {\n                const totalPrice = formik.values.pricePerNight * TotalDays\n                formik.setFieldValue('total', totalPrice)\n            }\n        } else {\n            formik.setFieldValue('nights', \"\")\n            formik.setFieldValue('total', \"\")\n        }\n\n    }, [formik.values.dateIn, formik.values.dateOut])\n\n\n    const handleSwitch = () => {\n        formik.setFieldValue('name', \"\")\n        formik.setFieldValue('mobile', \"\")\n        formik.setFieldValue('identity', \"\")\n        setnewCus(!newCus)\n    }\n\n    useEffect(() => {\n        if (Boolean(formik.errors)) {\n            const meta = formik.getFieldMeta()\n            const keys = Object.keys(meta.error)\n            for (let i = 0; i < keys.length; i++) {\n                setHelper(formik.errors[keys[i]])\n                setTimeout(() => setHelper(\"\"), 1500)\n            }\n        }\n\n    }, [formik.errors])\n\n    useEffect(() => {\n        if (formik.isValid) {\n            setHelper(\"All Fields Are Now Valid\")\n            setBuyNow(true)\n            setTimeout(() => setHelper(\"\"), 4000)\n        } else {\n            setBuyNow(false)\n        }\n\n    }, [formik.isValid])\n\n    useEffect(() => {\n        const roomType = formik.values.roomType\n        if (types && roomType) {\n            const numbers = loadedData.filter(room => room.type === roomType).map(room => room.roomNo)\n            console.log(numbers)\n            const set = [... new Set(numbers)]\n            setNumbers(set)\n        }\n    }, [types, formik.values.roomType])\n\n    useEffect(() => {\n        const roomNo = formik.values.roomNo\n        const roomType = formik.values.roomType\n        if (numbers && roomNo && roomType) {\n            if (loadedData) {\n                const numbers = loadedData.filter(room => room.type === roomType && room.roomNo === roomNo)[0]\n                const adult = numbers.minAdults\n                const childs = numbers.minChildren\n                const cost = numbers.pricePerNight\n                const beds = numbers.beds\n                const totalPrice = formik.values.nights * cost\n                formik.setFieldValue('total', totalPrice)\n                formik.setFieldValue('minAdults', adult)\n                formik.setFieldValue('minChildren', childs)\n                formik.setFieldValue('pricePerNight', cost)\n                formik.setFieldValue('beds', beds)\n                setTimeout(() => setHelper(\"\"), 1000)\n            } else {\n                formik.setFieldValue('total', \"\")\n                formik.setFieldValue('minAdults', \"\")\n                formik.setFieldValue('minChildren', \"\")\n                formik.setFieldValue('pricePerNight', \"\")\n                formik.setFieldValue('beds', \"\")\n                setTimeout(() => setHelper(\"\"), 1000)\n            }\n        }\n    }, [numbers, formik.values.roomNo])\n\n    const handleRoomNoInput = (e, val) => {\n        if (val === \"\") {\n            formik.setFieldValue('roomNo', \"\")\n            formik.setFieldValue('minAdults', \"\")\n            formik.setFieldValue('minChildren', \"\")\n            formik.setFieldValue('pricePerNight', \"\")\n            formik.setFieldValue('beds', \"\")\n        }\n    }\n\n    const handleRoomTypeInput = (e, val) => {\n        if (val === \"\") {\n            clearFields()\n        }\n    }\n    const handleSubmit = async (val) => {\n        const submitData = {\n            name: val.name,\n            mobileNo: val.mobile,\n            identityId: val.identity,\n            dateIn: val.dateIn,\n            dateOut: val.dateOut,\n            minAdults: val.minAdults,\n            minChildren: val.minChildren,\n            pricePerNight: val.pricePerNight,\n            nights: val.nights,\n            roomType: val.roomType,\n            roomNo: val.roomNo,\n            beds: val.beds,\n            total: val.total,\n            branchId: val.branchId\n\n        }\n        try {\n            const response = await api.post(\"/manage/room/reserve/\", submitData)\n            const data = await response.data\n            const message = data.message\n            console.log(data.data)\n            setHelper(message)\n            dispatch(setcValuesAsync())\n            dispatch(setBranch())\n            formik.resetForm()\n            await getRooms()\n        } catch (error) {\n            const data = error.response.data\n            const message = data.message\n            console.log(data.data)\n            setHelper(message)\n        }\n    }\n\n\n\n    if (index !== value) return null\n    return (\n        <form\n            onSubmit={formik.handleSubmit}\n            style={{\n                display: 'flex',\n                width: '100%',\n                margin: '2rem auto',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                minHeight: '50vh'\n            }}\n        >\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', margin: '2rem auto', width: '100%', }}>\n                <Typography variant=\"h4\" component=\"h3\" sx={{ transform: 'translateX(-100%)' }}>Customer Details</Typography>\n                <Typography variant=\"h4\" component=\"h3\" sx={{ transform: 'translateX(-50%)' }}>Room</Typography>\n\n            </Box>\n            <FormControlLabel\n                control={<Switch\n                    checked={newCus}\n                    onChange={handleSwitch}\n                />}\n                label=\"New Customer\"\n                labelPlacement=\"start\"\n                sx={{ alignSelf: 'flex-start', marginLeft: '5rem', justifySelf: 'center' }}\n            />\n\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', width: '90%' }}>\n                <CustomerDetailsSection\n                    helpers={{ helps: helps(formik), helpsAutoFill: helpsAutoFill(formik) }}\n                    errors={{ errs: errs(formik), errsAutoFill: errsAutoFill(formik) }}\n                    onchanges={{ onChangesAutoFill: onChangesAutoFill(formik, { cusName, cusId }), handleChange: formik.handleChange }}\n                    values={vals(formik)}\n                    width={1 / 3}\n                    newCus={newCus ? true : false}\n                    oldCus={!newCus ? true : false}\n                />\n                <Divider orientation=\"vertical\" flexItem variant=\"fullWidth\" sx={{ alignContent: 'space-evenly', margin: '0 5rem' }} />\n                <Box sx={{ width: 2 / 3, display: 'flex', flexDirection: 'column' }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                        <_TextField\n                            id=\"date\"\n                            label=\"Check In Date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            name=\"dateIn\"\n                            shrink={true}\n                            sx={{ width: 2 / 5 }}\n                            error={formik.touched.dateIn && Boolean(formik.errors.dateIn)}\n                            helper={formik.touched.dateIn && formik.errors.dateIn}\n                            value={formik.values.dateIn}\n                            onChange={formik.handleChange}\n                        />\n                        <_TextField\n                            id=\"date\"\n                            label=\"Chech Out Date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            name=\"dateOut\"\n                            shrink={true}\n                            sx={{ width: 2 / 5 }}\n                            error={formik.touched.dateOut && Boolean(formik.errors.dateOut)}\n                            helper={formik.touched.dateOut && formik.errors.dateOut}\n                            value={formik.values.dateOut}\n                            onChange={formik.handleChange}\n                        />\n                    </Box>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                        <BranchField sx={{ width: '18rem', margin: '1rem' }} container={{ display: 'flex' }} />\n                        <Autocomplete\n                            disablePortal\n                            options={types}\n                            renderInput={(params) => <TextField {...params} label=\"Room Type\" />}\n                            sx={{ width: '18rem', margin: '1rem' }}\n                            disabled={branchId && formik.values.dateIn && formik.values.dateOut ? false : true}\n                            onChange={(e, val) => formik.setFieldValue('roomType', val)}\n                            value={formik.values.roomType}\n                            onInputChange={handleRoomTypeInput}\n                        />\n                        <Autocomplete\n                            disablePortal\n                            options={numbers}\n                            renderInput={(params) => <TextField {...params} label=\"Room Number\" />}\n                            sx={{ width: '18rem', margin: '1rem' }}\n                            disabled={formik.values.roomType ? false : true}\n                            onChange={(e, val) => formik.setFieldValue('roomNo', val)}\n                            value={formik.values.roomNo}\n                            onInputChange={handleRoomNoInput}\n                        />\n                        <_TextField\n                            label=\"Number Of Beds\"\n                            pHolder=\"1\"\n                            required\n                            type='number'\n                            error={formik.touched.beds && Boolean(formik.errors.beds)}\n                            helper={formik.touched.beds && formik.errors.beds}\n                            shrink={true}\n                            value={formik.values.beds}\n                            onChange={formik.handleChange}\n                            name=\"beds\"\n                            sx={{ width: '18rem' }}\n                            disabled={true}\n                        />\n                    </Box>\n\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <_TextField\n                            label=\"Number Of Adults\"\n                            pHolder=\"1\"\n                            required\n                            type='number'\n                            error={formik.touched.minAdults && Boolean(formik.errors.minAdults)}\n                            helper={formik.touched.minAdults && formik.errors.minAdults}\n                            shrink={true}\n                            value={formik.values.minAdults}\n                            onChange={formik.handleChange}\n                            name=\"noAdults\"\n                            sx={{ width: 2 / 5 }}\n                            disabled={true}\n                        />\n                        <_TextField\n                            label=\"Number Of Childrens\"\n                            pHolder=\"0\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.minChildren && Boolean(formik.errors.minChildren)}\n                            helper={formik.touched.minChildren && formik.errors.minChildren}\n                            value={formik.values.minChildren}\n                            onChange={formik.handleChange}\n                            name=\"noChilds\"\n                            sx={{ width: 2 / 5 }}\n                            disabled={true}\n                        />\n                    </Box>\n                    <_TextField\n                        label=\"Length Of Stay(Nights)\"\n                        pHolder=\"1\"\n                        required\n                        type=\"number\"\n                        error={formik.touched.nights && Boolean(formik.errors.nights)}\n                        helper={formik.touched.nights && formik.errors.nights}\n                        value={formik.values.nights}\n                        onChange={formik.handleChange}\n                        name=\"nights\"\n                        disabled={true}\n                    />\n                    {/* <Box>\n                        <Box sx={{ display: 'flex' }}>\n                            <Box>\n\n                                <FormControlLabel\n                                    control={<Switch\n                                        checked={food.breakfast}\n                                        onChange={() => handleFood(!food.breakfast, food.lunch, food.dinner)}\n                                    />}\n                                    label=\"Breakfast\"\n                                    labelPlacement=\"start\"\n                                    sx={{ alignSelf: 'flex-start', marginLeft: '5rem', justifySelf: 'center' }}\n                                />\n                                <TextField\n                                    defaultValue={1}\n                                    disabled={!food.breakfast}\n                                    label=\"No.\"\n                                    size=\"small\"\n                                    type=\"number\"\n                                    min={1}\n\n                                />\n                            </Box>\n                            <Box>\n\n                                <FormControlLabel\n                                    control={<Switch\n                                        checked={food.lunch}\n                                        onChange={() => handleFood(food.breakfast, !food.lunch, food.dinner)}\n                                    />}\n                                    label=\"Lunch\"\n                                    labelPlacement=\"start\"\n                                    sx={{ alignSelf: 'flex-start', marginLeft: '5rem', justifySelf: 'center' }}\n                                />\n                                <TextField\n                                    defaultValue={1}\n                                    disabled={!food.lunch}\n                                    label=\"No.\"\n                                    size=\"small\"\n                                    type=\"number\"\n                                    min={1}\n\n                                />\n                            </Box>\n                            <Box>\n\n                                <FormControlLabel\n                                    control={<Switch\n                                        checked={food.dinner}\n                                        onChange={() => handleFood(food.breakfast, food.lunch, !food.dinner)}\n                                    />}\n                                    label=\"Dinner\"\n                                    labelPlacement=\"start\"\n                                    sx={{ alignSelf: 'flex-start', marginLeft: '5rem', justifySelf: 'center' }}\n                                />\n                                <TextField\n                                    defaultValue={1}\n                                    disabled={!food.dinner}\n                                    label=\"No.\"\n                                    size=\"small\"\n                                    type=\"number\"\n                                    min={1}\n\n                                />\n                            </Box>\n                        </Box>\n                    </Box> */}\n                    <_TextField\n                        label=\"Cost\"\n                        required\n                        shrink={true}\n                        type=\"number\"\n                        error={formik.touched.pricePerNight && Boolean(formik.errors.pricePerNight)}\n                        helper={formik.touched.pricePerNight && formik.errors.pricePerNight}\n                        value={formik.values.pricePerNight}\n                        onChange={formik.handleChange}\n                        name=\"cost\"\n                        disabled={true}\n                    />\n                    <_TextField\n                        label=\"Total\"\n                        required\n                        shrink={true}\n                        type=\"number\"\n                        error={formik.touched.total && Boolean(formik.errors.total)}\n                        helper={formik.touched.total && formik.errors.total}\n                        value={formik.values.total}\n                        onChange={formik.handleChange}\n                        name=\"total\"\n                        disabled={true}\n                    />\n                    <Box sx={{ height: '2rem', marginTop: '1rem', width: 1 }}>\n                        <Typography component=\"h4\" variant=\"body1\" textAlign=\"center\" >{helper}</Typography>\n                    </Box>\n                </Box>\n            </Box>\n            <Button variant=\"contained\" type='submit' sx={{ alignSelf: 'flex-end', right: '5%', top: '1rem' }} disabled={buyNow ? false : true} >Book Room</Button>\n        </form >\n    )\n}\n\nexport default ReserveRoom","import React, { useState } from \"react\";\nimport { Button, Box, Divider, Switch, FormControlLabel, Autocomplete, TextField, Typography } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport CustomerDetailsSection from '../../../components/customerDetailsSections'\nimport ConstructionIcon from '@mui/icons-material/Construction';\nimport { useSelector } from 'react-redux'\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\n\nconst Services = ({ index, value }) => {\n    const [newCus, setnewCus] = useState(true);\n    const [food, setFood] = useState({\n        breakfast: false,\n        lunch: false,\n        dinner: false\n    });\n    const cVals = useSelector(state => state.cusAutoFill.cValues)\n    const cusName = cVals.cusName\n    const cusId = cVals.cusId\n\n    const handleFood = (breakfast = food.breakfast, lunch = food.lunch, dinner = food.dinner) => {\n        setFood({ breakfast, lunch, dinner })\n    }\n\n    const customerRegisterSchema = Yup.object({\n        name: Yup.string('Enter Your Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        mobile: Yup.number('Enter A Mobile Phone Number')\n            .min(9, \"Enter A Valid Mobile Number\")\n            .max(15, \"Enter A Valid Mobile Number\")\n            .required(\"Date Of Birth Required\"),\n        id: Yup.string('Enter An NIC ID Or Passport ID')\n            .min(7, \"Too Short\")\n            .required(\"Enter An NIC ID Or Passport ID\"),\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n            mobile: \"\",\n            id: \"\"\n        },\n        validationSchema: customerRegisterSchema,\n        onSubmit: val => console.log(val)\n    })\n\n    const helpsAutoFill = {\n        name: formik.touched.name && formik.errors.name,\n        id: formik.touched.id && formik.errors.id,\n    }\n\n    const errsAutoFill = {\n        name: formik.touched.name && Boolean(formik.errors.name),\n        id: formik.touched.id && Boolean(formik.errors.id),\n    }\n\n    const onChangesAutoFill = {\n        name: () => formik.setFieldValue('name', cusName),\n        id: () => formik.setFieldValue('id', cusId)\n    }\n\n\n    if (index !== value) return null\n    return (\n        <form\n            onSubmit={(e) => e.preventDefault()}\n        >\n            <Box sx={{ display: 'flex', width: 1, justifyContent: 'space-evenly', alignItems: 'center', backgroundColor: '#081627', color: 'white' }}>\n                <ConstructionIcon sx={{ fontSize: 100 }} />\n                <Typography component=\"h2\" variant=\"h2\" >Some Work To Be Done</Typography>\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    width: '100%',\n                    margin: '2rem auto',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    minHeight: '50vh'\n                }}>\n                <FormControlLabel\n                    control={<Switch\n                        checked={newCus}\n                        onChange={() => setnewCus(!newCus)}\n                    />}\n                    label=\"In-Hotel Customer\"\n                    labelPlacement=\"start\"\n                    sx={{ alignSelf: 'flex-start', marginLeft: '5rem', justifySelf: 'center' }}\n                />\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', width: '90%' }}>\n                    {newCus &&\n                        <>\n                            <CustomerDetailsSection\n                                helpers={{ helpsAutoFill }}\n                                errors={{ errsAutoFill }}\n                                onchanges={{ onChangesAutoFill }}\n                                width={1 / 3}\n                                newCus={false}\n                                oldCus={newCus}\n                            />\n                            <Divider orientation=\"vertical\" flexItem variant=\"fullWidth\" sx={{ alignContent: 'space-evenly', margin: '0 5rem' }} />\n                        </>\n                    }\n                    <Box sx={{ width: 2 / 3, display: 'flex', flexDirection: 'column' }}>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <Autocomplete\n                                disablePortal\n                                options={[\"Swimming\", \"Snooker\", \"Night Club\"]}\n                                renderInput={(params) => <TextField {...params} label=\"Services\" />}\n                                sx={{ width: 2 / 5 }}\n                            />\n                            <Autocomplete\n                                disablePortal\n                                options={[123, 464, 765]}\n                                renderInput={(params) => <TextField {...params} label=\"Branch\" />}\n                                sx={{ width: 2 / 5 }}\n                                disabled\n                            />\n                        </Box>\n\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <_TextField\n                                label=\"Number Of People\"\n                                pHolder=\"1\"\n                                required\n                                type='number'\n                                error={formik.touched.mobile && Boolean(formik.errors.mobile)}\n                                helper={formik.touched.mobile && formik.errors.mobile}\n                                shrink={true}\n                                value={formik.values.mobile}\n                                onChange={formik.handleChange}\n                                name=\"noAdults\"\n                                initialValues={1}\n                            />\n                        </Box>\n                        <_TextField\n                            label=\"Cost\"\n                            required\n                            shrink={true}\n                            type=\"number\"\n                            error={formik.touched.id && Boolean(formik.errors.id)}\n                            helper={formik.touched.id && formik.errors.id}\n                            value={formik.values.id}\n                            onChange={formik.handleChange}\n                            name=\"cost\"\n                            disabled\n                        />\n                    </Box>\n                </Box>\n            </Box>\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', width: 1, height: '5rem', alignItems: 'center' }}>\n                <Button variant=\"contained\" type='submit' sx={{ marginRight: '2rem' }}>Pay Now</Button>\n                <Button variant=\"contained\" type='submit' sx={{ marginRight: '2rem' }}>Add To Bill</Button>\n            </Box>\n        </form >\n    )\n}\n\nexport default Services","import { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport api from \"../api/api\";\nimport { TextField, Autocomplete, Box } from \"@mui/material\";\nimport { setNameAsync, setPriceAsync, setQuantityAsync, setTypeAsync, setStockAsync } from '../redux/slicers/beverage'\nimport { setCostAsync } from \"../redux/slicers/addItemModalSlice\";\n\n\n\nconst BeverageField = ({ sx, container, isName, isPrice, isQuantity, isCost, branchId, isStock }) => {\n    const beverage = useSelector(state => state.beverage)\n    const dispatch = useDispatch()\n    const [beverages, setBeverages] = useState([])\n    const [helper, setHelper] = useState(\"\")\n    const [filter, setFilter] = useState([])\n    const [selectType, setSelectType] = useState(\"\")\n    const [selectName, setSelectName] = useState(\"\")\n    const [selectQuantity, setSelectQuantity] = useState(\"\")\n    const [selectCost, setSelectCost] = useState(\"\")\n    const name = beverage.name\n    const type = beverage.type\n    const quantity = beverage.quantity\n    const price = beverage.price\n    const cost = beverage.cost\n    const stock = beverage.stock\n\n    const showName = isName ? isName : true\n    const showPrice = isPrice ? isPrice : true\n    const showCost = isCost ? isCost : true\n    const showStock = isStock ? isStock : true\n    const showQuantity = isQuantity ? isQuantity : true\n\n    const handleType = (val) => {\n        if (val) {\n            const type = val\n            dispatch(setTypeAsync(type))\n            const filter = beverages.filter(drink => drink.type === type)\n            const names = filter.map(row => row.name)\n            setFilter(filter)\n            setSelectName([...new Set(names)])\n        }\n    }\n\n    const handleName = (val) => {\n\n        if (val) {\n            const name = val\n            dispatch(setNameAsync(name))\n            const filtered = filter.filter(drink => drink.name === name && drink.type === type)\n            setFilter(filtered)\n            const quantity = filtered.map(row => row.quantity)\n            setSelectQuantity([...new Set(quantity)])\n            //selectQuantity.current = [...new Set(quantity)]\n        }\n    }\n\n    const handleQuantity = (val) => {\n        if (val && filter.length > 0) {\n            const quantity = val\n            dispatch(setQuantityAsync(quantity))\n            const filtered = filter.filter(drink => drink.quantity === quantity && drink.name === name && drink.type === type)\n            const cost = filtered.map(row => row.cost)\n            setSelectCost([...new Set(cost)])\n            //selectCost.current = [...new Set(cost)]\n            //const price = filtered[0].price\n        }\n    }\n\n    const handleCost = (val) => {\n        if (val && filter.length > 0) {\n            const cost = val\n            dispatch(setCostAsync(cost))\n            const filtered = filter.filter(drink => drink.cost === cost && drink.quantity === quantity && drink.name === name && drink.type === type)\n            const price = filtered[0].price\n            const stock = filtered[0].stock\n            dispatch(setPriceAsync(price))\n            dispatch(setStockAsync(stock))\n        }\n    }\n\n    const handleTypeInput = (e, val) => {\n        if (val) {\n            dispatch(setNameAsync())\n            dispatch(setQuantityAsync())\n            dispatch(setPriceAsync())\n            dispatch(setCostAsync())\n        } else {\n            dispatch(setNameAsync())\n            dispatch(setPriceAsync())\n            dispatch(setQuantityAsync())\n            dispatch(setCostAsync())\n            dispatch(setTypeAsync())\n            const names = beverages.map(row => row.name)\n            setSelectName([...new Set(names)])\n            //selectName.current = [...new Set(names)]\n        }\n    }\n\n    const handleNameInput = (e, val) => {\n        if (val) {\n            dispatch(setQuantityAsync())\n            dispatch(setPriceAsync())\n            dispatch(setCostAsync())\n        } else {\n            dispatch(setNameAsync())\n            dispatch(setPriceAsync())\n            dispatch(setQuantityAsync())\n            dispatch(setCostAsync())\n            const filtered = beverages.filter(drink => drink.type === type)\n            const quantity = filtered.map(row => row.quantity)\n            setSelectQuantity([...new Set(quantity)])\n            setFilter(filtered)\n        }\n    }\n\n    const handleQuantityInput = (e, val) => {\n        if (val) {\n            dispatch(setPriceAsync())\n            dispatch(setCostAsync())\n        } else {\n            dispatch(setPriceAsync())\n            dispatch(setQuantityAsync())\n            dispatch(setCostAsync())\n            const filtered = beverages.filter(drink => drink.type === type && drink.name === name)\n            const cost = filtered.map(row => row.cost)\n            setSelectCost(...new Set(cost))\n            setFilter(filtered)\n        }\n    }\n\n    const handleCostInput = (e, val) => {\n        if (val) {\n            dispatch(setPriceAsync())\n            dispatch(setStockAsync())\n        } else {\n            dispatch(setPriceAsync())\n            dispatch(setCostAsync())\n            dispatch(setStockAsync())\n            const filtered = beverages.filter(drink => drink.type === type && drink.name === name && drink.quantity === quantity)\n            setFilter(filtered)\n        }\n    }\n\n    const getAllBeverages = async () => {\n        try {\n            const response = await api.get(\"/bar/getStock/\", {\n                params: {\n                    branchId\n                }\n            })\n            const data = await response.data.data\n            const message = await response.data.message\n            const isAvailable = await data.isAvailable\n            const rows = data.data\n            if (isAvailable && rows) {\n                setBeverages(rows)\n                setFilter(rows)\n                setSelectType([...new Set(rows.map(row => row.type))])\n                //selectType.current = [...new Set(rows.map(row => row.type))]\n            }\n            setHelper(message)\n        } catch (error) {\n            const data = await error.response.data\n            const message = data.message\n            if (message) {\n                setHelper(message)\n            }\n        }\n    }\n\n    useEffect(async () => {\n        const prevname = name\n        const prevtype = type\n        const prevquantity = quantity\n        const prevcost = cost\n        await getAllBeverages()\n        await handleType(prevtype)\n        await handleName(prevname)\n        await handleQuantity(prevquantity)\n        await handleCost(prevcost)\n\n    }, [stock])\n\n    useEffect(() => {\n        getAllBeverages()\n    }, [branchId])\n\n\n    return (\n        <Box sx={container}>\n            <Autocomplete\n                disablePortal\n                options={selectType || []}\n                renderInput={(params) => <TextField {...params} label=\"Search / Select Beverage Type\" />}\n                onChange={(e, val) => handleType(val)}\n                onInputChange={handleTypeInput}\n                sx={sx}\n                disabled={branchId ? false : true}\n                value={type}\n            />\n            {showName && <Autocomplete\n                disablePortal\n                options={selectName || []}\n                renderInput={(params) => <TextField {...params} label=\"Search / Select Beverage Name\" />}\n                sx={sx}\n                onChange={(e, val) => handleName(val)}\n                onInputChange={handleNameInput}\n                disabled={type ? false : true}\n                value={name}\n            />}\n            {showQuantity && <Autocomplete\n                disablePortal\n                options={selectQuantity || []}\n                renderInput={(params) => <TextField {...params} label=\"Quantity\" />}\n                sx={sx}\n                onChange={(e, val) => handleQuantity(val)}\n                onInputChange={handleQuantityInput}\n                disabled={name ? false : true}\n                value={quantity}\n            />}\n            {showCost && <Autocomplete\n                disablePortal\n                options={selectCost || []}\n                renderInput={(params) => <TextField {...params} label=\"Cost\" />}\n                sx={sx}\n                onChange={(e, val) => handleCost(val)}\n                onInputChange={handleCostInput}\n                disabled={quantity ? false : true}\n                value={cost}\n            />}\n            {showPrice && <TextField\n                label=\"Price\"\n                value={price}\n                sx={sx}\n\n                disabled\n            />}\n            {showStock && <TextField\n                label=\"Available Units\"\n                value={stock}\n                sx={sx}\n\n                disabled\n            />}\n        </Box>\n    )\n}\n\n\nexport default BeverageField","import React, { useState, useEffect, useMemo } from \"react\";\nimport { Button, Typography, Box, Divider, Switch, FormControlLabel, Autocomplete, TextField } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport { DataGrid } from '@mui/x-data-grid';\nimport CustomerDetailsSection from \"../../../components/customerDetailsSections\";\nimport { helps, helpsAutoFill, errs, errsAutoFill, vals, onChangesAutoFill } from '../../../helpers/customerDetailsProps'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport BeverageField from \"../../../components/beveragesField\";\nimport cusAutoFill from \"../../../redux/slicers/cusAutoFill\";\nimport api from \"../../../api/api\";\nimport { clearFieldsAsync, setNameAsync, setCostAsync, setPriceAsync, setQuantityAsync, setStockAsync, setTypeAsync } from \"../../../redux/slicers/beverage\";\n\nconst columns = [\n    { field: 'id', headerName: 'ID', align: \"center\", width: 100 },\n    { field: 'type', headerName: 'Type', align: \"center\", width: 200 },\n    { field: 'name', headerName: 'Drink', align: \"center\", width: 200 },\n    { field: 'quantity', headerName: 'Quantity', type: 'number', align: \"center\", width: 100 },\n    { field: 'units', headerName: 'Units', type: 'number', align: \"center\", width: 100 },\n    {\n        field: 'price',\n        headerName: 'Total Price',\n        type: 'number',\n        align: \"center\", width: 250,\n    },\n];\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\n\nconst FrontDesk = ({ index, value }) => {\n    const [newCus, setnewCus] = useState(true);\n    const [cart, setCart] = useState([]);\n    const [selected, setSelected] = useState([])\n    const [total, setTotal] = useState(0);\n    const customerAutoFill = useSelector(state => state.cusAutoFill.cValues)\n    const cusName = customerAutoFill.cName\n    const cusIdentity = customerAutoFill.identityId\n    const cusId = cusAutoFill.cId\n    const mobileNo = customerAutoFill.mobileNo\n    const beverage = useSelector(state => state.beverage)\n    const type = beverage.type\n    const name = beverage.name\n    const stock = beverage.stock\n    const cost = beverage.cost\n    const quantity = beverage.quantity\n    const price = beverage.price\n    const [branchId, setBranchId] = useState(\"\")\n    const [units, setUnits] = useState(0)\n    const [enablePayNow, setEnablePayNow] = useState(false)\n    const [enableAddToBill, setEnableAddToBill] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [helper, setHelper] = useState(\"\")\n    const [whichSubmit, setWhichSubmit] = useState(\"\")\n    const dispatch = useDispatch()\n\n\n    useEffect(async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const data = await JSON.parse(user)\n        const branchId = await data.branchId\n        setBranchId(branchId)\n    }, [])\n\n    const barPaymentSchema = Yup.object({\n        name: Yup.string('Enter Your Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        mobile: Yup.number('Enter A Mobile Phone Number')\n            .required(\"mobile no Required\"),\n        identity: Yup.string('Enter An NIC ID Or Passport ID')\n            .min(7, \"Too Short\")\n            .required(\"Enter An NIC ID Or Passport ID\"),\n        purchase: Yup.array().of(Yup.object().shape({\n            type: Yup.string().required(),\n            name: Yup.string().required(),\n            units: Yup.number().required(),\n            quantity: Yup.string().required(),\n            price: Yup.number().required(),\n            cost: Yup.number().required()\n        }))\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n            mobile: \"\",\n            identity: \"\",\n            purchase: [\n                {\n                    type: \"\",\n                    name: \"\",\n                    units: 0,\n                    quantity: \"\",\n                    price: \"\",\n                    cost: \"\"\n                }\n            ],\n        },\n        validationSchema: barPaymentSchema,\n        onSubmit: val => handlePay(val)\n    })\n    const handleCart = (itemType = type, itemName = name, itemQuantity = quantity, noOfUnits = units, itemPrice = price, itemCost = cost) => {\n        if (itemType && itemName && itemQuantity && noOfUnits && itemPrice && itemCost) {\n            const pricePerUnit = itemPrice\n\n            const isAvailableId = cart.some(item => item.type === itemType && item.name === itemName && item.quantity === itemQuantity)\n            let amount\n            let expense\n\n            if (isAvailableId) {\n                // console.log(typeof isAvailableId)\n                let arr = cart\n                let object = arr.find(item => item.type === type && item.name === name && item.quantity === itemQuantity)\n                let index = arr.findIndex(item => item === object)\n                let number = Number(object.units) + Number(units)\n                if (number < stock) {\n                    object.units = number\n                    object.price = Number((units * pricePerUnit).toFixed(2))\n                    amount = Number((pricePerUnit * object.units).toFixed(2))\n                    object.cost = Number((itemCost * object.units).toFixed(2))\n                    setTotal(prev => prev + amount)\n                } else {\n                    const intialTotal = total\n                    const reduce = Number((object.units * pricePerUnit).toFixed(2))\n                    object.units = stock\n                    object.price = Number((object.units * pricePerUnit).toFixed(2))\n                    amount = Number((pricePerUnit * object.units).toFixed(2))\n                    object.cost = Number((itemCost * object.units).toFixed(2))\n                    const reducedAmount = intialTotal - reduce + amount\n                    setTotal(reducedAmount)\n                }\n                let arr1 = [...arr.slice(0, index), object, ...arr.slice(index + 1, arr.length)]\n                setCart(arr1)\n                dispatch(setTypeAsync())\n                dispatch(setNameAsync())\n                dispatch(setQuantityAsync())\n                dispatch(setPriceAsync())\n                dispatch(setCostAsync())\n            } else {\n                amount = Number((pricePerUnit * units).toFixed(2))\n                expense = Number((itemCost * units).toFixed(2))\n                setCart(prev => [...prev, { id: prev.length, type: itemType, name: itemName, quantity: itemQuantity, units: noOfUnits, cost: expense, price: amount }])\n                setTotal(prev => prev + amount)\n                dispatch(setTypeAsync())\n                dispatch(setNameAsync())\n                dispatch(setQuantityAsync())\n                dispatch(setPriceAsync())\n                dispatch(setCostAsync())\n            }\n\n            setUnits(0)\n        }\n    }\n\n    useMemo(() => {\n        if (cart.length > 0) {\n            formik.setFieldValue('purchase', cart)\n        } else {\n            formik.setFieldValue('purchase', [\n                {\n                    type: \"\",\n                    drink: \"\",\n                    units: 0,\n                    quantity: \"\",\n                    price: \"\",\n                    cost: \"\"\n                }\n            ])\n        }\n    }, [cart])\n\n    useMemo(() => {\n        if (formik.isValid) {\n            setEnablePayNow(true)\n            setEnableAddToBill(true)\n        } else {\n            setEnablePayNow(false)\n            setEnableAddToBill(false)\n        }\n    }, [formik.isValid])\n\n    const handleCustomers = () => {\n        if (!newCus) {\n            const isValues = !Object.values(customerAutoFill).some(value => value === \"\")\n            formik.setFieldValue('name', cusName)\n            formik.setFieldValue('mobile', mobileNo)\n            formik.setFieldValue('identity', cusIdentity)\n        }\n    }\n\n    useMemo(() => {\n        handleCustomers()\n    }, [customerAutoFill])\n\n    const handlePay = async (val) => {\n        const body = {\n            name: val.name,\n            mobileNo: val.mobile,\n            identityId: val.identity,\n            purchase: val.purchase,\n            branchId: branchId,\n            total: total\n        }\n        const typeOfPay = whichSubmit\n        setWhichSubmit(\"\")\n        // setLoading(true)\n        if (typeOfPay === \"Pay Now\") {\n            setEnableAddToBill(false)\n            try {\n                const response = await api.post(\"/bar/payNow/\", body)\n                const data = await response.data\n                const message = await data.message\n                const res = await data.data\n                const isSuccess = await data.isSuccess\n                setHelper(message)\n            } catch (error) {\n                const data = error.response.data\n                const message = data.message\n                const res = data.data\n                setHelper(message)\n            }\n\n            setTotal(0)\n            setCart([])\n            setLoading(false)\n        }\n        // else if (typeOfPay === \"Add To Bill\") {\n        //     setEnablePayNow(false)\n        // }\n\n    }\n\n    if (index !== value) return null\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault()\n                formik.handleSubmit()\n            }\n            }\n            style={{\n                display: 'flex',\n                width: '100%',\n                margin: '2rem auto',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                minHeight: '50vh'\n            }}\n        >\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', margin: '2rem auto', width: '100%', }}>\n                <Typography variant=\"h4\" component=\"h3\" sx={{ transform: 'translateX(-100%)' }}>Customer Details</Typography>\n                <Typography variant=\"h4\" component=\"h3\" sx={{ transform: 'translateX(-50%)' }}>Bar</Typography>\n\n            </Box>\n            <FormControlLabel\n                control={<Switch\n                    checked={newCus}\n                    onChange={() => setnewCus(!newCus)}\n                />}\n                label=\"New Customer\"\n                labelPlacement=\"start\"\n                sx={{ alignSelf: 'flex-start', marginLeft: '5rem', justifySelf: 'center' }}\n            />\n\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', width: '90%' }}>\n                <CustomerDetailsSection\n                    helpers={{ helps: helps(formik), helpsAutoFill: helpsAutoFill(formik) }}\n                    errors={{ errs: errs(formik), errsAutoFill: errsAutoFill(formik) }}\n                    onchanges={{ onChangesAutoFill: onChangesAutoFill(formik, { cusName, cusId }), handleChange: formik.handleChange }}\n                    values={vals(formik)}\n                    width={1 / 3}\n                    newCus={newCus ? true : false}\n                    oldCus={!newCus ? true : false}\n                />\n                <Divider orientation=\"vertical\" flexItem variant=\"fullWidth\" sx={{ alignContent: 'space-evenly', margin: '0 5rem' }} />\n                <Box sx={{ width: 2 / 3, display: 'flex', flexDirection: 'column' }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <BeverageField\n                            container={{ display: 'flex' }}\n                            sx={{ margin: '1rem', width: '10rem' }}\n                            branchId={branchId}\n                        />\n                        <_TextField\n                            label=\"Units\"\n                            pHolder=\"1\"\n                            required\n                            type='number'\n                            shrink={true}\n                            name=\"units\"\n                            sx={{ width: '10rem' }}\n                            margin=\"none\"\n                            // error={formik.touched.purchase.units && Boolean(formik.errors.purchase.units)}\n                            // helper={formik.touched.purchase.units && formik.errors.purchase.units}\n                            value={units}\n                            onChange={(e) => e.target.value <= stock ? setUnits(e.target.value) : null}\n                        />\n                    </Box>\n                    <Button variant=\"contained\" type=\"button\" onClick={() => handleCart()}>Add To Cart</Button>\n                    <Box sx={{ minHeight: 400, width: '100%' }}>\n                        <DataGrid\n                            rows={cart}\n                            columns={columns}\n                            pageSize={5}\n                            rowsPerPageOptions={[5]}\n                            checkboxSelection\n                            disableColumnFilter\n                            onSelectionModelChange={(...e) => setSelected(e[0])}\n                            isRowSelectable={(item) => selected.length > 1 ? false : true}\n\n                        />\n                    </Box>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', width: 1 }}>\n                        <Typography variant=\"h4\" component=\"h3\" sx={{ width: 1 / 2 }}>{`Total : ${total}`}</Typography>\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', width: 1, height: '5rem', alignItems: 'center' }}>\n\n                            <Button variant=\"contained\" type='submit' sx={{ marginRight: '2rem' }} onClick={() => setWhichSubmit(\"Pay Now\")} disabled={loading && enablePayNow ? true : enablePayNow ? false : true} >{loading && enablePayNow ? \"Loading\" : \"Pay Now\"}</Button>\n                            {/* <Button variant=\"contained\" type='submit' sx={{ marginRight: '2rem' }} onClick={() => setWhichSubmit(\"Add To Bill\")} disabled={loading && enableAddToBill ? true : enableAddToBill ? false : true} >{loading && enableAddToBill ? \"Loading\" : \"Add To Bill\"}</Button> */}\n                        </Box>\n                    </Box>\n                </Box>\n\n\n            </Box>\n\n        </form >\n    )\n}\n\nexport default FrontDesk","import React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Box, Fade, Modal, Backdrop, Autocomplete, TextField } from \"@mui/material\";\nimport { Formik, useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../auth/textField'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setModalOpen } from '../../redux/slicers/addItemModalSlice'\nimport api from \"../../api/api\";\nimport BranchField from '../branchField'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 800,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    borderRadius: '1rem',\n    boxShadow: 24,\n    p: 4,\n};\n\n\nconst BarAddItem = ({ index, value, width }) => {\n    const dispatch = useDispatch()\n    const branchId = useSelector(state => state.branch.branchId)\n    const open = useSelector(state => state.barItem.modalOpen)\n    const [submitLoading, setSubmitLoading] = useState(false)\n    const [helper, setHelper] = useState(\"\")\n\n    const addBarItemSchema = Yup.object({\n        name: Yup.string('Enter Beverage Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        type: Yup.string('Enter Beverage Type')\n            .oneOf([\"Alcohol\", \"Soda\", \"Other\"], \"Invalid Type\")\n            .min(1, \"Too Short\")\n            .required(\"Enter A Beverage Type\"),\n        quantity: Yup.number('Specify quantity').min(0.25, \"It's too low\").required('Required Value'),\n        price: Yup.number('Specify Price').min(50, \"It's too low\").required('Required Value'),\n        cost: Yup.number('Specify Cost').min(50, \"It's too low\").required('Required Value'),\n        stock: Yup.number('Specify The Number Of Units').required('Required Value'),\n        branchId: Yup.number(\"Specify Branch Id\").required('Required Value')\n    })\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n            type: \"\",\n            quantity: \"\",\n            price: \"\",\n            stock: \"\",\n            branchId: \"\",\n            cost: \"\"\n        },\n        validationSchema: addBarItemSchema,\n        onSubmit: val => handleItemAddition(formik.values)\n    })\n\n    useEffect(() => {\n        formik.setFieldValue('branchId', branchId)\n    }, [branchId])\n\n    const handleClose = () => {\n        dispatch(setModalOpen(false))\n        formik.resetForm()\n    };\n\n    const searchDrinks = async (values) => {\n        try {\n            setSubmitLoading(true)\n            const response = await api.get(\"/bar/getStock/\", {\n                params: values\n            })\n            const isAvailable = await response.data.data.isAvailable\n            setSubmitLoading(false)\n            if (isAvailable) {\n                setHelper(\"Beverage Type Available, Continue Adding Item\")\n            } else {\n                setHelper(\"Beverage Type Not Available, New Type Will Be Added\")\n            }\n        } catch (error) {\n            setHelper(\"Something Went Wrong\")\n            alert(error)\n        }\n        setTimeout(() => setHelper(\"\"), 4000)\n    }\n\n    useEffect(() => {\n        const isError = Object.values(formik.errors).some(error => error !== \"\")\n        const isEmpty = Object.values(formik.values).some(value => value === \"\")\n        if (!isError && !isEmpty) {\n            searchDrinks(formik.values)\n        }\n    }, [formik.values])\n\n    const handleItemAddition = async (values) => {\n        setSubmitLoading(true)\n        values.quantity = values.quantity + \"L\"\n        try {\n            const response = await api.post(\"/bar/createDrink/\", values)\n            const data = await response.data\n            const message = await data.message\n            const isAvailable = await data.data.isAvailable\n            console.log(\"isAvailable\", isAvailable)\n            setHelper(message)\n            setSubmitLoading(false)\n        } catch (error) {\n            const data = error.response.data\n            const message = data.message\n            setHelper(message)\n            console.log(\"isAvailable\", data.data.isAvailable)\n            setSubmitLoading(false)\n        }\n        setTimeout(() => setHelper(\"\"), 4000)\n    }\n\n    if (index !== value) return null\n    return (\n        <Modal\n            open={open}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            onClose={(obj, reason) => reason === \"backdropClick\" ? null : handleClose()}\n        >\n            <Fade in={open}>\n                <Box sx={style}>\n                    <Typography component=\"h1\" textAlign=\"center\" variant=\"h4\">\n                        Add Bar Item\n                    </Typography>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            formik.handleSubmit()\n\n                        }}\n                        style={{\n                            display: 'flex',\n                            width: width,\n                            minHeight: '25rem',\n                            margin: '5% auto ',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'space-evenly'\n                        }}\n                    >\n                        <BranchField container={{ display: 'flex' }} sx={{ margin: '1rem', width: '20rem' }} />\n                        <Autocomplete\n                            error={formik.touched.type && Boolean(formik.errors.type)}\n                            helper={formik.touched.type && formik.errors.type}\n                            name=\"type\"\n                            value={formik.values.type}\n                            onChange={(event, newValue) => {\n                                formik.setFieldValue('type', newValue)\n                            }}\n                            options={[\"Alcohol\", \"Soda\", \"Other\"]}\n                            renderInput={(params) => <TextField {...params} label=\"Type Of Beverage\" type=\"text\" />}\n                            autoSelect\n                            clearOnBlur\n                            sx={{ width: 1, margin: '1rem 0 ' }}\n                            defaultValue=\"Alcohol\"\n                            disabled={branchId ? false : true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Name\"\n                            pHolder=\"Beverage Name\"\n                            required\n                            type=\"text\"\n                            error={formik.touched.name && Boolean(formik.errors.name)}\n                            helper={formik.touched.name && formik.errors.name}\n                            value={formik.values.name}\n                            onChange={formik.handleChange}\n                            name=\"name\"\n                            disabled={formik.values.type ? false : true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Quantity (L)\"\n                            pHolder=\"1\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.quantity && Boolean(formik.errors.quantity)}\n                            helper={formik.touched.quantity && formik.errors.quantity}\n                            value={formik.values.quantity}\n                            onChange={formik.handleChange}\n                            name=\"quantity\"\n                            disabled={formik.values.name ? false : true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Cost (Rs)\"\n                            pHolder=\"1\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.cost && Boolean(formik.errors.cost)}\n                            helper={formik.touched.cost && formik.errors.cost}\n                            value={formik.values.cost}\n                            onChange={formik.handleChange}\n                            name=\"cost\"\n                            disabled={formik.values.quantity ? false : true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Price (Rs)\"\n                            pHolder=\"1\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.price && Boolean(formik.errors.price)}\n                            helper={formik.touched.price && formik.errors.price}\n                            value={formik.values.price}\n                            onChange={formik.handleChange}\n                            name=\"price\"\n                            disabled={formik.values.quantity ? false : true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"No. Of Units\"\n                            pHolder=\"1\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.stock && Boolean(formik.errors.stock)}\n                            helper={formik.touched.stock && formik.errors.stock}\n                            value={formik.values.stock}\n                            onChange={formik.handleChange}\n                            name=\"stock\"\n                            disabled={formik.values.price ? false : true}\n                        />\n                        <Typography component=\"h4\" variant=\"body2\" >{helper}</Typography>\n                        <Button variant=\"contained\" fullWidth sx={{ margin: '1rem 0 0' }} type='submit' disabled={submitLoading ? true : false}>{submitLoading ? \"Loading\" : \"Add Item\"}</Button>\n                        <Button variant=\"contained\" fullWidth sx={{ margin: '1rem 0 0' }} type='button' color=\"error\" onClick={handleClose}>Close</Button>\n                    </form>\n                </Box>\n            </Fade>\n        </Modal>\n    )\n}\n\nexport default BarAddItem","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Typography, Box, Fade, Modal, Backdrop, Autocomplete, TextField } from \"@mui/material\";\nimport { Formik, useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../auth/textField'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setRestockModalOpen, setParamsAsync } from '../../redux/slicers/restockItem'\nimport api from \"../../api/api\";\nimport BranchField from '../branchField'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 800,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    borderRadius: '1rem',\n    boxShadow: 24,\n    p: 4,\n};\n\n\nconst RestockItem = ({ index, value, width }) => {\n    const dispatch = useDispatch()\n    const restockBarItem = useSelector(state => state.restockBarItem)\n    const open = restockBarItem.restockModalOpen\n    const params = restockBarItem.itemParams\n    const isParams = !Object.values(params).some(param => param === \"\")\n    const [submitLoading, setSubmitLoading] = useState(false)\n    const initialCost = useRef(null)\n    const [helper, setHelper] = useState(\"\")\n\n    const addBarItemSchema = Yup.object({\n        itemId: Yup.number(\"Specify Branch Id\").required('Required Value'),\n        stock: Yup.number('Specify The Number Of Units').min(0, 'Invalid Value').required('Required Value'),\n        branchId: Yup.number(\"Specify Branch Id\").required('Required Value')\n    })\n    const formik = useFormik({\n        initialValues: {\n            itemId: \"\",\n            stock: \"\",\n            branchId: \"\",\n        },\n        validationSchema: addBarItemSchema,\n        onSubmit: val => handleItemAddition(formik.values)\n    })\n\n\n    const setFields = () => {\n        if (isParams) {\n            formik.setFieldValue('itemId', params.itemId)\n            formik.setFieldValue('stock', params.stock)\n            formik.setFieldValue('branchId', params.branchId)\n\n            initialCost.current = params.stock\n        }\n    }\n\n    const handleClose = () => {\n        dispatch(setRestockModalOpen(false))\n    };\n\n\n    const handleItemAddition = async (values) => {\n        setSubmitLoading(true)\n        try {\n            const response = await api.put(\"/bar/restockItem/\", values)\n            const data = await response.data\n            const message = await data.message\n            const isSuccess = await data.data.isSuccess\n            console.log(\"isSuccess\", isSuccess)\n            setHelper(message)\n            setSubmitLoading(false)\n            if (isSuccess) {\n                const values = {\n                    ...params,\n                    stock: formik.values.stock\n                }\n                dispatch(setParamsAsync(values))\n            }\n        } catch (error) {\n            const data = error.response.data\n            const message = data.message\n            setHelper(message)\n            console.log(\"isSuccess\", data.data.isSuccess)\n            setSubmitLoading(false)\n        }\n        setTimeout(() => setHelper(\"\"), 4000)\n    }\n\n    if (index !== value) return null\n    return (\n        <Modal\n            open={open && isParams}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            onClose={(obj, reason) => reason === \"backdropClick\" ? null : handleClose()}\n\n        >\n            <Fade in={open} onEnter={setFields}>\n                <Box sx={style}>\n                    <Typography component=\"h1\" textAlign=\"center\" variant=\"h4\">\n                        Restock Bar Item\n                    </Typography>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            formik.handleSubmit()\n\n                        }}\n                        style={{\n                            display: 'flex',\n                            width: width,\n                            minHeight: '25rem',\n                            margin: '5% auto ',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'space-evenly'\n                        }}\n                    >\n\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Item Id\"\n                            required\n                            type=\"number\"\n                            value={params.itemId}\n                            name=\"itemId\"\n                            disabled={true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Branch Id\"\n                            required\n                            type=\"number\"\n                            value={params.branchId}\n                            name=\"branchId\"\n                            disabled={true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Beverage Type\"\n                            required\n                            type=\"text\"\n                            value={params.type}\n                            disabled={true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Beverage Name\"\n                            required\n                            type=\"text\"\n                            value={params.name}\n                            disabled={true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"Quantity\"\n                            required\n                            type=\"text\"\n                            value={params.quantity}\n                            disabled={true}\n                        />\n                        <_TextField\n                            sx={{ padding: '5px' }}\n                            label=\"No Of Units\"\n                            pHolder=\"1\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.stock && Boolean(formik.errors.stock)}\n                            helper={formik.touched.stock && formik.errors.stock}\n                            value={formik.values.stock}\n                            onChange={formik.handleChange}\n                            name=\"stock\"\n                        />\n                        <Typography component=\"h4\" variant=\"body2\" >{helper}</Typography>\n                        <Button variant=\"contained\" fullWidth sx={{ margin: '1rem 0 0' }} type='submit' disabled={submitLoading ? true : formik.values.stock === params.stock ? true : false}>{submitLoading ? \"Loading\" : \"Restock\"}</Button>\n                        <Button variant=\"contained\" fullWidth sx={{ margin: '1rem 0 0' }} type='button' color=\"error\" onClick={handleClose}>Close</Button>\n                    </form>\n                </Box>\n            </Fade>\n        </Modal>\n    )\n}\n\nexport default RestockItem","import React, { useState, useEffect } from \"react\";\nimport _TextField from \"../../../components/auth/textField\";\nimport { DataGrid, } from '@mui/x-data-grid';\nimport { Button, Typography, Modal, Box, TextField, Autocomplete } from \"@mui/material\";\nimport api from \"../../../api/api\";\nimport BranchField from \"../../../components/branchField\";\nimport BeverageField from \"../../../components/beveragesField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport BarAddItem from \"../../../components/bar/addItemModal\";\nimport RestockItem from \"../../../components/bar/restockModal\";\nimport { setModalOpen } from \"../../../redux/slicers/addItemModalSlice\";\nimport { setRestockModalOpen, setParamsAsync } from \"../../../redux/slicers/restockItem\";\nimport { CSVLink } from \"react-csv\";\n\nconst columns = [\n\n    { field: 'id', headerName: 'Item ID', align: \"center\", width: 100 },\n    { field: 'beverageId', headerName: 'Beverage Id', align: \"center\", width: 200 },\n    { field: 'branchId', headerName: 'Branch Id', align: \"center\", width: 100 },\n    { field: 'name', headerName: 'Name', align: \"center\", width: 200 },\n    { field: 'type', headerName: 'Type', align: \"center\", width: 200 },\n    {\n        field: 'quantity',\n        headerName: 'Quantity',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'stock',\n        headerName: 'In-Stock',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'cost',\n        headerName: 'Cost Per Unit',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'price',\n        headerName: 'Price Per Unit',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'isAvailable',\n        headerName: 'Availabiltiy',\n        align: \"center\", width: 100,\n    },\n    // {\n    //     field: 'stockAvailability',\n    //     headerName: 'Status',\n    //     width: 250,\n    //     valueGetter: (params) =>\n    //         `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''\n    //         }`,\n    // },\n];\n\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst Inventory = () => {\n    const [selected, setSelected] = useState([])\n    const [inventory, setInventory] = useState([])\n    const dispatch = useDispatch()\n    const beverage = useSelector(state => state.beverage)\n    const branchId = useSelector(state => state.branch.branchId)\n    const restockBarItem = useSelector(state => state.restockBarItem)\n    const reStockedStock = restockBarItem.itemParams.stock\n    const reStockedBranch = restockBarItem.itemParams.branchId\n    const name = beverage.name\n    const type = beverage.type\n    const price = beverage.price\n    const quantity = beverage.quantity\n    const cost = beverage.cost\n\n\n    const getItems = async (branchId) => {\n        try {\n            const response = await api.get(\"/bar/getStock/\", {\n                params: {\n                    branchId: branchId || \"\",\n                    name: name || \"\",\n                    type: type || \"\",\n                    price: price || \"\",\n                    quantity: quantity || \"\",\n                    cost: cost || \"\"\n                }\n            })\n            const data = await response.data\n            const message = await data.message\n            const isAvailable = data.data.isAvailable\n            if (isAvailable) {\n                const rows = await data.data.data\n                const filter = rows.map(row => ({ id: row.barItemId, ...row }))\n                setInventory(filter)\n            } else {\n                setInventory([])\n            }\n        } catch (error) {\n            const data = await error.response.data.data\n            const isAvailable = data.isAvailable\n            if (!isAvailable) {\n                setInventory([])\n            }\n        }\n    }\n\n    const handleOpenAddItem = () => dispatch(setModalOpen(true))\n\n    const handleOpenRestock = () => dispatch(setRestockModalOpen(true))\n\n    const handleRow = ({ beverageId, stock, branchId, name, type, quantity }) => {\n        const params = { stock, branchId, itemId: beverageId, name, type, quantity }\n        dispatch(setParamsAsync(params))\n    }\n\n    useEffect(() => {\n        if (branchId) {\n            getItems(branchId)\n        }\n    }, [name, type, price, quantity])\n\n    useEffect(async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const userData = await JSON.parse(user)\n        const empStatus = await userData.empStatus\n        if (branchId || empStatus === \"Owner\") {\n            getItems(branchId)\n        }\n    }, [branchId])\n\n    useEffect(() => {\n        if (reStockedBranch && reStockedStock) {\n            getItems(reStockedBranch)\n        }\n    }, [reStockedBranch, reStockedStock])\n\n    useEffect(async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const data = JSON.parse(user)\n        const defaultBranchId = data.branchId\n        getItems(defaultBranchId)\n    }, [])\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center' }}>\n                <BranchField container={{ display: 'flex' }} sx={{ margin: '1rem' }} />\n                <BeverageField container={{ display: 'flex' }} sx={{ margin: '1rem' }} sx={{ width: '15rem', margin: '1rem' }}\n                    branchId={branchId}\n                />\n            </Box>\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: '70vh', width: '100%' }}>\n                    <DataGrid\n                        rows={inventory}\n                        columns={columns}\n                        pageSize={5}\n                        rowsPerPageOptions={[5]}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        onRowClick={({ row }) => handleRow(row)}\n                    />\n                </div>\n\n            </div>\n\n            <div style={{ width: '100%', display: \"flex\", justifyContent: 'flex-start', alignItems: 'center', height: '4rem', marginLeft: '1rem' }}>\n                <Button variant=\"contained\" color=\"primary\" type='submit' size=\"large\" sx={{ marginRight: 1 }} onClick={handleOpenAddItem}>Add Item</Button>\n                {selected.length > 0 && <Button variant=\"contained\" color=\"primary\" type='submit' size=\"large\" sx={{ marginRight: 1 }} onClick={handleOpenRestock}>Restock Item</Button>}\n                {inventory &&\n                    <Button\n                        variant=\"contained\" color=\"primary\" type='button' size=\"large\" sx={{ marginRight: 1 }} disabled={inventory.length > 0 ? false : true}><CSVLink data={inventory} style={{ textDecoration: 'none', color: 'white' }} >Download Table</CSVLink></Button>}\n            </div>\n            <BarAddItem />\n            <RestockItem />\n        </>\n    )\n}\n\nexport default Inventory","import React, { useState, useEffect } from \"react\";\nimport { DataGrid, } from '@mui/x-data-grid';\nimport { Button, Box, Typography } from \"@mui/material\";\nimport _TextField from \"../../../components/auth/textField\";\nimport QrReader from 'react-qr-scanner'\nimport api from '../../../api/api'\n\n\nconst columns = [\n\n    { field: 'id', headerName: 'ID', align: \"center\", width: 100 },\n    { field: 'branchId', headerName: 'Branch ID', align: \"center\", width: 100 },\n    { field: 'firstName', headerName: 'First Name', align: \"center\", width: 200 },\n    { field: 'lastName', headerName: 'Last Name', type: 'number', align: \"center\", width: 200 },\n    {\n        field: 'fullName',\n        headerName: 'Full name',\n        sortable: false,\n        width: 300,\n        valueGetter: (params) =>\n            `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''\n            }`\n        ,\n\n\n    },\n    {\n        field: 'email',\n        headerName: 'Email',\n        align: \"center\", width: 300\n    },\n    {\n        field: 'userName',\n        headerName: 'User Name',\n        align: \"center\", width: 200\n    },\n    {\n        field: 'status',\n        headerName: 'Status',\n        align: \"center\", width: 200\n    },\n];\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst Attendance = () => {\n    const [selected, setSelected] = useState([])\n    const [delay, setDelay] = useState(100)\n    const [openQr, setQrDiv] = useState(false)\n    const [attendance, setAttendance] = useState([])\n    const [allEmployees, setAllEmployees] = useState([])\n    const [startMark, setStartMark] = useState(false)\n    const [helper, setHelper] = useState(\"\")\n    const [marked, setMarked] = useState(\"\")\n    const [branchId, setBranchId] = useState(\"\")\n    const [confirm, setConfirm] = useState(false)\n\n    const handleMark = async () => {\n        if (confirm) {\n            const ids = attendance.map(emp => emp.id)\n            if (ids) {\n                try {\n                    const body = {\n                        attendance: ids,\n                        branchId: branchId\n                    }\n                    const response = await api.post(\"/hr/attendance/mark/\", body)\n                    const isSuccess = response.data.data.isSuccess\n                    if (isSuccess) {\n                        setStartMark(false)\n                        setConfirm(false)\n                        setAttendance([])\n                        setHelper(\"\")\n                        checkAttendance()\n                    }\n                    // console.log(response.data.data)\n                } catch (error) {\n                    //console.log(error.response.data.data)\n                    const isNotSuccess = error.response.data.data.isSuccess\n                    if (!isNotSuccess) {\n                        checkAttendance()\n                    }\n                }\n                setConfirm(false)\n            }\n        } else {\n            setConfirm(true)\n        }\n    }\n\n    const handleOpen = () => {\n        setStartMark(true)\n    }\n    const handleScan = id => {\n        if (id) {\n            if (id.text) {\n                const findOne = allEmployees.find(employee => id.text == employee.id)\n                if (!attendance.includes(findOne)) {\n                    console.log(findOne)\n                    setAttendance(prev => [...prev, findOne])\n                }\n            }\n        }\n    }\n    const handleError = err => {\n        alert(err)\n    }\n\n    const getEmployees = async () => {\n        try {\n            const response = await api.get(\"/manage/employee/searchEmployee/\", {\n                params: {\n                    branchId: branchId\n                }\n            })\n            const data = await response.data.data\n            const isAvailable = data.isAvailable\n            if (isAvailable) {\n                setAllEmployees(data.rows)\n            } else {\n                setAllEmployees([])\n            }\n        } catch (error) {\n            const data = error.response.data.data\n            const isAvailable = data.isAvailable\n            if (isAvailable === false) {\n                setAllEmployees([])\n            }\n        }\n    }\n\n    const checkAttendance = async () => {\n        try {\n            const date = new Date().toISOString().split(\"T\")[0]\n            const response = await api.get(\"/hr/attendance/get/\", {\n                params: {\n                    branchId: branchId,\n                    date: date\n                }\n            })\n            const data = await response.data\n            const isSuccess = await data.data.isSuccess\n            const message = await data.message\n            if (typeof isSuccess === \"boolean\") {\n                setMarked(isSuccess)\n            }\n            setHelper(message)\n        } catch (error) {\n            const errData = error.response.data\n            const isSuccess = errData.data.isSuccess\n            const msg = errData.message\n            setHelper(msg)\n            if (typeof isSuccess === \"boolean\") {\n                setMarked(isSuccess)\n            }\n        }\n    }\n\n    useEffect(async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const branchId = await JSON.parse(user).branchId\n        setBranchId(branchId)\n\n    }, [])\n\n    useEffect(() => {\n        if (branchId) {\n            getEmployees()\n            checkAttendance()\n        }\n    }, [branchId])\n\n    console.log(allEmployees)\n    return (\n        <>\n            <div style={{ display: 'flex', backgroundColor: !startMark ? '#081627' : null }}>\n                <div style={{ height: '80vh', width: !startMark ? '100%' : '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                    {!startMark && <Button variant=\"contained\" color=\"secondary\" type='submit' size=\"large\" sx={{ margin: '2rem', height: '10rem', width: '90%', justifySelf: 'center', fontSize: 50 }} onClick={handleOpen}>\n                        Mark Attendance For Today\n                    </Button>}\n                    {startMark && !marked && <DataGrid\n                        rows={attendance}\n                        columns={columns}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        sx={{ width: 1 }}\n                        autoPageSize\n\n                    />}\n                    {\n                        startMark && marked && <Typography component=\"h4\" variant=\"h5\" >{helper}</Typography>\n                    }\n\n                </div>\n                {openQr && <Box sx={{ display: 'flex', flexDirection: 'column', width: '50rem', height: '40rem', justifyContent: 'center', alignItems: 'center', alignContent: 'center' }}>\n                    <Box sx={{ width: '45rem', height: '35rem', marginBottom: '2rem' }}>\n                        {openQr && <QrReader\n                            delay={delay}\n                            style={{\n                                height: \"35rem\",\n                                width: \"45rem\"\n                            }}\n                            onError={handleError}\n                            onScan={handleScan}\n                            facingMode=\"user\"\n                        />}\n                    </Box>\n                    {\n                        startMark && !marked && <Typography component=\"h4\" variant=\"h5\" >{helper}</Typography>\n                    }\n                </Box>}\n            </div>\n\n            <div style={{ width: '100%', display: \"flex\", justifyContent: 'flex-start', alignItems: 'center', height: '4rem', marginLeft: '1rem' }}>\n                {!marked && startMark && <Button variant=\"contained\" color={confirm ? \"warning\" : \"primary\"} type='button' size=\"large\" sx={{ marginRight: 1 }} onClick={() => handleMark()}>{confirm ? \"Confirm Complete Attendance\" : \"Complete Attendance\"}</Button>}\n                {confirm && <Button variant=\"contained\" color=\"error\" type='button' size=\"large\" sx={{ marginRight: 1 }} onClick={() => setConfirm(false)}>Cancel</Button>}\n                {startMark && !marked && <Button variant=\"contained\" color=\"primary\" type='submit' size=\"large\" sx={{ marginRight: 1 }} onClick={() => setQrDiv(!openQr)}>{openQr ? \"Close Scanner\" : \"Open Scanner\"}</Button>}\n            </div>\n        </>\n    )\n}\n\nexport default Attendance","import React, { useState, useEffect } from \"react\";\nimport BranchField from '../branchField'\nimport { Box, Autocomplete, TextField } from '@mui/material'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport api from \"../../api/api\";\nimport { setEmpValuesAsync } from \"../../redux/slicers/employeeslice\";\n\nconst SearchEmployee = ({ sx }) => {\n    const branchId = useSelector(state => state.branch.branchId)\n    const [employees, setEmployees] = useState([])\n    const [empName, setName] = useState(\"\")\n    const [empEmail, setEmail] = useState(\"\")\n    const [filteredEmps, setFilteredEmps] = useState([])\n    const dispatch = useDispatch()\n    const empVal = useSelector(state => state.searchEmployee.empValues)\n\n    const getEmployees = async () => {\n        try {\n            const response = await api.get(\"/manage/employee/searchEmployee\", {\n                params: {\n                    branchId: branchId\n                }\n            })\n            const data = await response.data.data\n            const rows = await data.rows\n            if (data.isAvailable) {\n\n                const empValues = rows.map(row => ({\n                    empFName: row.firstName, empLName: row.lastName, empFullName: `${row.firstName}-${row.lastName}`,\n                    email: row.email, status: row.status, branchId: branchId,\n                    empId: row.id,\n                    dob: new Date(row.dob).toLocaleDateString()\n                }))\n\n                setEmployees(empValues)\n            } else {\n                setEmployees([])\n            }\n        } catch (error) {\n            const isAvailable = error.response.data.data.isAvailable\n            if (!isAvailable) {\n                setEmployees([])\n            }\n        }\n    }\n    const handleEmployeeSubmission = () => {\n        if (empEmail && empName) {\n            const Dob = new Date(filteredEmps[0].dob)\n            const employee = {\n                empFName: filteredEmps[0].empFName,\n                empLName: filteredEmps[0].empLName,\n                email: filteredEmps[0].email,\n                status: filteredEmps[0].status,\n                dob: Dob,\n                branchId: filteredEmps[0].branchId,\n                empId: filteredEmps[0].empId\n            }\n            dispatch(setEmpValuesAsync(employee))\n        }\n    }\n    useEffect(() => {\n        handleEmployeeSubmission()\n    }, [empEmail, empName])\n\n    const handleEmpNameChange = (e, val) => {\n        if (val) {\n            setName(val)\n            const filter = employees.filter(employee => employee.empFullName === val)\n            setFilteredEmps(filter)\n            setEmail(\"\")\n            dispatch(setEmpValuesAsync())\n        }\n    }\n\n    const handleEmailChange = (e, val) => {\n        if (val && filteredEmps) {\n            console.log(val)\n            setEmail(val)\n            const doubleFilter = filteredEmps.filter(emp => emp.email === val)\n            setFilteredEmps(doubleFilter)\n        }\n    }\n\n    useEffect(() => {\n        getEmployees()\n        dispatch(setEmpValuesAsync())\n        if (!branchId) {\n            setEmail(\"\")\n            setName(\"\")\n        }\n    }, [branchId])\n\n    return (\n        <Box sx={{ display: 'flex', flexDirection: 'column', width: 1, alignItems: 'center' }}>\n            <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <Autocomplete\n                    disablePortal\n                    options={employees.map(employee => employee.empFullName)}\n                    renderInput={(params) => <TextField {...params} label=\"Employee Name\" />}\n                    name=\"Employee Name\"\n                    onChange={handleEmpNameChange}\n                    value={empName}\n                    onInputChange={() => {\n                        setName(\"\")\n                        setEmail(\"\")\n                        dispatch(setEmpValuesAsync())\n                    }}\n                    disabled={branchId ? false : true}\n                    sx={{ width: '20rem', margin: 'auto 1rem' }}\n                />\n                <Autocomplete\n                    disablePortal\n                    options={filteredEmps.map(employee => employee.email)}\n                    renderInput={(params) => <TextField {...params} label=\"Employee Email\" />}\n                    name=\"Employee Email\"\n                    onChange={handleEmailChange}\n                    value={empEmail}\n                    onInputChange={() => {\n                        setEmail(\"\")\n                        dispatch(setEmpValuesAsync())\n                    }}\n                    disabled={empName ? false : true}\n                    sx={{ width: '25rem', margin: 'auto 1rem' }}\n                />\n\n                <TextField label=\"Employee Status\" value={empEmail && empName ? filteredEmps[0].status : \"\"} disabled sx={{ width: '10rem', margin: 'auto 1rem' }} />\n                <TextField label=\"Employee Date Of Birth\" value={empEmail && empName ? filteredEmps[0].dob : \"\"} disabled sx={{ width: '15rem', margin: 'auto 1rem' }} />\n            </Box>\n        </Box>\n    )\n}\n\n\nexport default SearchEmployee","import React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Box, Divider, Switch, FormControlLabel, Autocomplete, TextField, RadioGroup, FormLabel, FormControl, Radio } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport BranchField from '../../../components/branchField'\nimport SearchEmployee from '../../../components/auth/searchEmployee'\nimport { useSelector } from 'react-redux'\nimport api from '../../../api/api'\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\n\nconst ConfigureSalary = ({ index, value }) => {\n    const employee = useSelector(state => state.searchEmployee.empValues)\n    const empEmail = employee.email\n    const empBranchId = employee.branchId\n    const [isAvailable, setIsAvailable] = useState(false)\n    const [helper, setHelper] = useState(\"\")\n    const [isEmpDetailsChanged, setEmpDetailsChanged] = useState(false)\n    const [employeeDetails, setEmployeeDetails] = useState(null)\n    const empId = employee.empId\n\n    useEffect(() => {\n        if (empEmail && empBranchId) {\n            searchEmployee()\n        } else {\n            setHelper(\"\")\n        }\n\n    }, [empEmail, empBranchId])\n\n    const employeeSalarySchema = Yup.object({\n        empId: Yup.number('Specify A Valid Employee Id')\n            .min(1, 'Invalid Id')\n            .max(1000000, 'Too Long!')\n            .required('Specify An Employee Id'),\n        branchId: Yup.number('Specify A Branch Id')\n            .min(1, \"Enter A Valid Branch Id\")\n            .max(1000000, \"Too Long\")\n            .required(\"Branch Id Required\"),\n        basic: Yup.number('Enter Salary For This Employee')\n            .min(15000, \"Too Low For A Salary\")\n            .required(\"Can't Work Without A Pay Day!\"),\n        travel: Yup.number('Enter Travel Allowance For This Employee')\n            .min(10000, \"Fuel Expenses Are High These Days\")\n            .default(0)\n            .optional(),\n        penaltyPerLeave: Yup.number('Enter A value')\n            .min(0, \"Enter A Valid Value\")\n            .max(10000, \"Too High For A Leave, Please Go Easy On This Employee\")\n            .default(0),\n        noLeavesBonus: Yup.number('Enter A value')\n            .min(0, \"Enter A Valid Value\")\n            .max(100000, \"Employee's Going To Love It,But Dont Go Higher Than This\")\n            .default(10000),\n        vacayPerYear: Yup.number('Enter A Valid Value')\n            .min(7, \"Everybody Want's A Break\")\n            .max(50, \"That's Too Long For A Vacation\")\n            .required(\"Everybody Would Want To Have A Break\"),\n        leavesAllowed: Yup.number('Enter The Number Of Leaves Allowed Per Month')\n            .min(3, \"Invalid Or Too Low\")\n            .max(7, \"That's Too Much, Keep It Less Than A Week\")\n            .required(\"Emergency Leaves Are Necessary\"),\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            \"empId\": \"\",\n            \"branchId\": \"\",\n            \"basic\": 20000,\n            \"travel\": 10000,\n            \"penaltyPerLeave\": 1000,\n            \"noLeavesBonus\": 5000,\n            \"vacayPerYear\": 10,\n            \"leavesAllowed\": 5,\n        },\n        validationSchema: employeeSalarySchema,\n        onSubmit: val => handleSubmit(val)\n    })\n\n    useEffect(() => {\n        formik.setFieldValue('empId', empId)\n        formik.setFieldValue('branchId', empBranchId)\n    }, [empBranchId, empId])\n\n    useEffect(() => {\n        if (employeeDetails) {\n            const employeeInitialValues = Object.values(employeeDetails)\n            const employeeFinalValues = Object.values(formik.values)\n            const isChanged = !employeeFinalValues.every(item => Object.values(employeeInitialValues).includes(item))\n            console.log(isChanged)\n            if (isChanged) {\n                setEmpDetailsChanged(true)\n            } else {\n                setEmpDetailsChanged(false)\n            }\n        }\n\n    }, [formik.values, employeeDetails])\n\n    const searchEmployee = async () => {\n        let isAvailable\n        try {\n            const response = await api.get(\"/hr/salary/search/\", {\n                params: {\n                    email: empEmail,\n                    branchId: empBranchId\n                }\n            })\n            const data = await response.data.data\n            if (data) {\n                isAvailable = data.isAvailable\n                setIsAvailable(isAvailable)\n                if (data.rows) {\n                    formik.setValues(data.rows[0])\n                    setEmployeeDetails(data.rows[0])\n                }\n                console.log(data.rows)\n            }\n        } catch (error) {\n            const res = await error.response.data.data\n            if (res) {\n                isAvailable = res.isAvailable\n                setIsAvailable(isAvailable)\n            }\n        }\n        if (isAvailable) {\n            setHelper(\"Employee Salary Details Available\")\n        }\n        else {\n            setHelper(\"Employee Salary Details Not Available\\nConfigure Salary Details For This Employee\")\n        }\n    }\n\n    const handleSubmit = async (val) => {\n        try {\n            const response = await api.put(\"/hr/salary/addSalary/\", val)\n            const data = await response.data.data\n            console.log(\"success\")\n            console.log(data)\n        } catch (error) {\n            const data = await error.response.data.data\n            console.log(\"error\")\n            console.log(data)\n        }\n    }\n\n    if (index !== value) return null\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault()\n                formik.handleSubmit()\n            }}\n            style={{\n                display: 'flex',\n                width: '100%',\n                margin: '2rem auto',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                minHeight: '60rem'\n            }}\n        >\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', margin: '2rem auto', width: '100%', }}>\n                <Typography variant=\"h4\" component=\"h3\" >Customer Details</Typography>\n            </Box>\n\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', width: '90%' }}>\n                <Box sx={{ width: 2 / 3, display: 'flex', flexDirection: 'column' }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }} >\n                    <BranchField showBranchName={true}\n                    container={{ display: 'flex', flexDirection: 'row' }}\n                    sx={{ width: 1, margin: '1rem' }}\n                />\n                        <SearchEmployee />\n                        <_TextField\n                            label=\"Leaves Without Pay-Cut(Per Month)\"\n                            pHolder=\"1\"\n                            required\n                            type='number'\n                            error={formik.touched.leavesAllowed && Boolean(formik.errors.leavesAllowed)}\n                            helper={formik.touched.leavesAllowed && formik.errors.leavesAllowed}\n                            shrink={true}\n                            value={formik.values.leavesAllowed}\n                            onChange={formik.handleChange}\n                            name=\"leavesAllowed\"\n                            sx={{ width: 2 / 5, margin: \"1rem\" }}\n                            defaultValue={0}\n                        />\n                        <_TextField\n                            label=\"Pay-Cut Deduction Per Leave\"\n                            pHolder=\"0\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.penaltyPerLeave && Boolean(formik.errors.penaltyPerLeave)}\n                            helper={formik.touched.penaltyPerLeave && formik.errors.penaltyPerLeave}\n                            value={formik.values.penaltyPerLeave}\n                            onChange={formik.handleChange}\n                            name=\"penaltyPerLeave\"\n                            sx={{ width: 2 / 5, margin: \"1rem\" }}\n                            defaultValue={1000}\n                        />\n                        <_TextField\n                            label=\"Vacation Per Year(days)\"\n                            pHolder=\"0\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.vacayPerYear && Boolean(formik.errors.vacayPerYear)}\n                            helper={formik.touched.vacayPerYear && formik.errors.vacayPerYear}\n                            value={formik.values.vacayPerYear}\n                            onChange={formik.handleChange}\n                            name=\"vacayPerYear\"\n                            sx={{ width: 2 / 5, margin: \"1rem\" }}\n                            defaultValue={10}\n                        />\n                        <_TextField\n                            label=\"Base Salary\"\n                            pHolder=\"0\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.basic && Boolean(formik.errors.basic)}\n                            helper={formik.touched.basic && formik.errors.basic}\n                            value={formik.values.basic}\n                            onChange={formik.handleChange}\n                            name=\"basic\"\n                            sx={{ width: 2 / 5, margin: \"1rem\" }}\n                            defaultValue={20000}\n                        />\n                        <_TextField\n                            label=\"No Leaves Bonus Per Month\"\n                            pHolder=\"0\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.noLeavesBonus && Boolean(formik.errors.noLeavesBonus)}\n                            helper={formik.touched.noLeavesBonus && formik.errors.noLeavesBonus}\n                            value={formik.values.noLeavesBonus}\n                            onChange={formik.handleChange}\n                            name=\"noLeavesBonus\"\n                            sx={{ width: 2 / 5, margin: \"1rem\" }}\n                            defaultValue={5000}\n                        />\n                        <_TextField\n                            label=\"Travel Allowance\"\n                            pHolder=\"0\"\n                            required\n                            type=\"number\"\n                            error={formik.touched.travel && Boolean(formik.errors.travel)}\n                            helper={formik.touched.travel && formik.errors.travel}\n                            value={formik.values.travel}\n                            onChange={formik.handleChange}\n                            name=\"travel\"\n                            sx={{ width: 2 / 5, margin: \"1rem\" }}\n                            defaultValue={10000}\n                        />\n                        <Typography sx={{ color: !isAvailable ? 'red' : 'green' }} component=\"p\" variant=\"subtitle1\" >\n                            {helper}\n                        </Typography>\n                    </Box>\n                </Box>\n            </Box>\n            <Box>\n                <Button variant=\"contained\" disabled={isAvailable ? true : !isAvailable && empEmail && empBranchId ? false : true} type='submit' sx={{ alignSelf: 'center', top: '1rem', margin: '1rem' }}> Add Salary Details</Button>\n                <Button variant=\"contained\" disabled={empEmail && empBranchId && isEmpDetailsChanged && isAvailable ? false : true} type='submit' sx={{ alignSelf: 'center', top: '1rem', margin: '1rem' }}>{\"Save Settings\"}</Button>\n            </Box>\n\n        </form >\n    )\n}\n\nexport default ConfigureSalary","import React, { useState, useEffect } from \"react\";\nimport _TextField from \"../../components/auth/textField\";\nimport { DataGrid, } from '@mui/x-data-grid';\nimport { Box, TextField, Autocomplete } from \"@mui/material\";\nimport api from \"../../api/api\";\nimport BranchField from \"../../components/branchField\";\nimport { useSelector } from \"react-redux\";\nimport SearchEmployee from \"../../components/auth/searchEmployee\";\n\n\nconst columns = [\n    { field: 'id', headerName: 'ID', align: \"center\", width: 70 },\n    { field: 'branchId', headerName: 'Branch ID', type: 'number', align: \"center\", width: 200 },\n    { field: 'firstName', headerName: 'First Name', align: \"center\", width: 200 },\n    {\n        field: 'lastName',\n        headerName: 'Last Name',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'dob',\n        headerName: 'Date Of Birth',\n        type: 'date',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'email',\n        headerName: 'Email',\n        align: \"center\", width: 300,\n    },\n    {\n        field: 'status',\n        headerName: 'Employee Type',\n        type: 'number',\n        align: \"center\", width: 300,\n    },\n    {\n        field: 'userName',\n        headerName: 'Username',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'basic',\n        headerName: 'Basic Salary',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'travel',\n        headerName: 'Travel Allowance',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'penaltyPerLeave',\n        headerName: 'Pay-Cut Per Leave',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'noLeavesBonus',\n        headerName: 'No Leaves Bonus(Per Month)',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'vacayPerYear',\n        headerName: 'Vacation Per Year(Days)',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'leavesAllowed',\n        headerName: 'Leaves Allowed Per Month',\n        align: \"center\", width: 200,\n    },\n    // {\n    //     field: 'travel',\n    //     headerName: 'Travel Allowance',\n    //     sortable: false,\n    //     width: 200,\n    //     valueGetter: ({ row }) => {\n    //         const value = row.isBooked\n    //         return value == 0 ? \"Open\" : \"Booked\"\n    //     }\n    // },\n];\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst EmployeeDetails = () => {\n    const [selected, setSelected] = useState([])\n    const [employees, setEmployees] = useState([])\n    const [initialEmployees, setInitialEmployees] = useState([])\n    const [firstNameQuery, setfNameQuery] = useState(\"\")\n    const [lastNameQuery, setlNameQuery] = useState(\"\")\n    const [empId, setEmpId] = useState(null)\n    const [isEmp, setIsEmp] = useState(false)\n    const [isSearch, setIsSearch] = useState(false)\n    const branch = useSelector(state => state.branch.branchId)\n    const empVal = useSelector(state => state.searchEmployee.empValues)\n\n    const getRooms = async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const data = await JSON.parse(user)\n        const branchId = data.branchId\n        const employeeId = data.employeeId\n        setEmpId(employeeId)\n        try {\n            const response = await api.get('/manage/employee/searchEmployee/', {\n                params: {\n                    branchId: branchId\n                }\n            })\n            const data = await response.data.data\n            const isAvailable = await data.isAvailable\n            if (isAvailable) {\n                const rows = await data.rows\n                setEmployees(rows)\n                setInitialEmployees(rows)\n            }\n            setIsEmp(isAvailable)\n        } catch (error) {\n            const err = await error.response.data.data\n            const isAvailable = err.isAvailable\n            if (typeof isAvailable === \"boolean\") {\n                //  setIsRoom(isAvailable)\n            }\n        }\n    }\n\n    const searchQuery = async (requestBody) => {\n        if (requestBody) {\n            try {\n                const req = await api.get(\"/manage/employee/searchEmployee/\", {\n                    params: {\n                        ...requestBody\n                    }\n                })\n                const data = await req.data.data\n                const isAvailable = data.isAvailable\n                const rows = data.rows\n                if (isAvailable) {\n                    setEmployees(rows)\n                    setIsEmp(true)\n                } else {\n                    setEmployees([])\n                    setIsEmp(false)\n                }\n                console.log(rows)\n                //setIsRoom(isRoom)\n            } catch (error) {\n                const isAvailable = error.response.data.data.isAvailable\n                // setIsRoom(isRoom)\n                if (!isAvailable) {\n                    setEmployees([])\n                    setIsEmp(false)\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (firstNameQuery !== \"\" || lastNameQuery !== \"\") {\n            setIsSearch(true)\n        } else {\n            setIsSearch(false)\n        }\n\n        if (!(empVal.branchId && empVal.email) && (firstNameQuery == \"\" && lastNameQuery == \"\")) {\n            setEmployees(initialEmployees)\n            setIsEmp(true)\n        }\n\n    }, [firstNameQuery, lastNameQuery, empVal])\n\n    useEffect(() => {\n        if (empVal.branchId && empVal.email) {\n            let data = {\n                firstName: empVal.empFName || \"\",\n                lastName: empVal.empLName || \"\",\n                dob: empVal.dob,\n                empType: empVal.status,\n                dob: empVal.dob,\n                branchId: empVal.branchId,\n            }\n            searchQuery(data)\n        } else if (firstNameQuery !== \"\" || lastNameQuery !== \"\") {\n            let data = {\n                firstName: firstNameQuery || \"\",\n                lastName: lastNameQuery || \"\",\n                branchId: branch,\n            }\n            searchQuery(data)\n        }\n\n    }, [empVal, firstNameQuery, lastNameQuery])\n\n    useEffect(() => {\n        getRooms()\n    }, [])\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', margin: '1rem 2rem', width: 1 }}>\n            <BranchField showBranchName={true}\n                    container={{ display: 'flex', flexDirection: 'row' }}\n                    sx={{ width: '15rem', margin: '1rem' }}\n                />\n                <_TextField\n                    label=\"Search By First Name\"\n                    type='text'\n                    value={firstNameQuery}\n                    onChange={(e) => {\n                        setfNameQuery(e.target.value)\n                        setIsSearch(true)\n                    }}\n                    name=\"roomNo\"\n                    sx={{ width: '20rem', margin: '1rem 2rem' }}\n                    disabled={branch && !Boolean(Object.values(empVal)[0])? false : true}\n                    margin=\"none\"\n                />\n                <_TextField\n                    label=\"Search By Last Name\"\n                    type='text'\n                    value={lastNameQuery}\n                    onChange={(e) => {\n                        setlNameQuery(e.target.value)\n                        setIsSearch(true)\n                    }}\n                    name=\"roomNo\"\n                    sx={{ width: '20rem', margin: '1rem 2rem' }}\n                    disabled={branch && !Boolean(Object.values(empVal)[0])? false : true}\n                    margin=\"none\"\n                />\n                {!isSearch && <SearchEmployee />}\n                \n            </Box>\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: '80vh', width: '100%' }}>\n                    <DataGrid\n                        rows={employees}\n                        columns={columns}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        autoPageSize\n                    />\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default EmployeeDetails","import React, { useState, useEffect } from \"react\";\nimport { Button, Autocomplete, TextField, Box, Divider, Checkbox, FormControlLabel, Radio, RadioGroup, FormLabel, Typography } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport api from '../../../api/api'\nimport BranchField from '../../../components/branchField'\nimport { useSelector } from 'react-redux'\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\n\nconst AddRoom = ({ index, value, width }) => {\n    const [type, setType] = useState(\"\")\n    const [otherValue, setOtherValue] = useState(\"\")\n    const branchId = useSelector(state => state.branch.branchId)\n    const [isRoomType, setRoomType] = useState(false)\n    const [helperText, setHelperText] = useState(\"\")\n    const [isWarning, setWarning] = useState(false)\n\n\n\n    const addRoomSchema = Yup.object({\n        branch: Yup.string('Select A Branch Id')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        roomNo: Yup.number('Enter A Room Number')\n            .max(1000, \"Room Number Seems Too Long\")\n            .required(\"Room Number Is Required\"),\n        roomType: Yup.string('Select Or Specify A Room Type')\n            .min(4, \"Too Short\")\n            .required(\"Room Type Is Required\"),\n        minAdults: Yup.number('Enter A Number').min(1, \"Enter A Valid Number\").max(5, \"Enter A Realistic Number\").default(1),\n        minChildren: Yup.number('Enter A Number').min(0, \"Enter A Valid Number\").max(5, \"Enter A Realistic Number\").default(0),\n        beds: Yup.number('Enter A Number').min(1, \"Enter A Valid Number\").max(3, \"Enter A Realistic Number\").default(1),\n        price: Yup.number('Enter A Number').min(0, 'Enter A Value'),\n\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            branch: \"\",\n            roomNo: \"\",\n            roomType: \"\",\n            minAdults: 1,\n            minChildren: 0,\n            price: \"\",\n            beds: \"\"\n        },\n        validationSchema: addRoomSchema,\n        onSubmit: val => handleSubmit(val)\n    })\n\n    useEffect(() => {\n        formik.setFieldValue('branch', branchId)\n    }, [branchId])\n\n    const checkRoomType = async () => {\n        const branch = formik.values.branch\n        const roomType = formik.values.roomType\n        const minAdults = formik.values.minAdults\n        const minChildren = formik.values.minChildren\n        const price = formik.values.price\n        const beds = formik.values.beds\n        if (branch && roomType && minAdults && minChildren && beds) {\n            const vals = {\n                branch: branch,\n                roomType: roomType,\n                minAdults: minAdults,\n                minChildren: minChildren,\n                price: price,\n                beds: beds\n            }\n            console.log(vals)\n            try {\n                const response = await api.get(\"/manage/room/get/\", {\n                    params: vals\n                })\n                const isType = await response.data.data.isRoomType\n                if (isType) {\n                    setWarning(false)\n                    setHelperText(\"Room Type Is Available\")\n                }\n                setRoomType(true)\n\n            } catch (error) {\n                const err = error.response.data.data\n                const isType = err.isRoomType\n\n                if (!isType) {\n                    setWarning(true)\n                    setHelperText(\"Room Type Is Not Available\\nNew Room Type Will Be Created\")\n                }\n                setRoomType(true)\n                console.log(isType)\n                //console.log(response)\n            }\n        } else {\n            setRoomType(false)\n        }\n    }\n\n    useEffect(() => {\n        checkRoomType()\n    }, [formik.values.price, formik.values.branch, formik.values.roomType, formik.values.minAdults, formik.values.minChildren, formik.values.rooms])\n\n    useEffect(() => {\n        if (!isRoomType) {\n            formik.setFieldValue('roomNo', \"\")\n        }\n    }, [isRoomType])\n\n    const handleOtherRoomType = (e) => {\n        formik.setFieldValue('roomType', e.target.value)\n    }\n\n    const handleRoomType = (e) => {\n        const value = e.target.value\n        setType(e.target.value)\n        if (value !== \"other\") {\n            formik.setFieldValue('roomType', e.target.value)\n        } else {\n            formik.setFieldValue('roomType', \"\")\n        }\n    }\n\n    const handleSubmit = async (val) => {\n        try {\n            // console.log(val)\n            const response = await api.post('/manage/room/create/', val)\n            if (response.data.status == 1) {\n                const message = response.data.message\n                setHelperText(\"Room Creation Success\")\n                setTimeout(() => setHelperText(message), 1000)\n                setTimeout(() => setHelperText(\"\"), 2000)\n                setWarning(false)\n                console.log(formik.values)\n            }\n            console.log(response.data.status)\n            // console.log(val)\n\n        } catch (error) {\n            const message = error.response.data.message\n            setHelperText(\"Room Creation Failed\")\n            setWarning(true)\n            setTimeout(() => setHelperText(message), 1000)\n            setTimeout(() => setHelperText(\"\"), 2000)\n            console.log(error.response.data.status)\n        }\n        //const response = await api.get('/manage/room/get/', val)\n        // const data = await response.data\n    }\n\n\n\n    if (index !== value) return null\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault()\n                formik.handleSubmit()\n            }}\n            style={{\n                display: 'flex',\n                minHeight: '20rem',\n                margin: '10% auto',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width: '100%'\n            }}\n        >\n            <Box sx={{ display: \"flex\", flexDirection: 'row', width: '100%', justifyContent: 'space-evenly' }}>\n                <Box sx={{ width: '50%' }}>\n                    <Box sx={{ margin: '1rem', width: 1, display: 'flex', justifyContent: 'space-evenly' }}>\n                        <FormLabel component=\"div\" sx={{ width: 1, margin: '1rem' }}>Room Type\n                            <RadioGroup\n                                aria-label=\"gender\"\n                                name=\"roomType\"\n                                value={type}\n                                onChange={handleRoomType}\n                                row\n                                sx={{ width: 1, margin: '1rem 0' }}\n                            >\n                                <FormControlLabel value=\"normal\" sx={{ margin: \"0 2rem\" }} control={<Radio />} label=\"Normal\" />\n                                <FormControlLabel value=\"deluxe\" sx={{ margin: \"0 2rem\" }} control={<Radio />} label=\"Deluxe\" />\n                                <FormControlLabel value=\"other\" sx={{ margin: \"0 2rem\" }} control={<Radio />} label=\"Other\" />\n                                {type === \"other\" && <_TextField\n                                    label=\"Type\"\n                                    pHolder=\"normal\"\n                                    required\n                                    type='text'\n                                    shrink={true}\n                                    value={formik.values.roomType}\n                                    onChange={handleOtherRoomType}\n                                    name=\"otherRoom\"\n\n                                />}\n\n                            </RadioGroup>\n                            {\n                                formik.touched.roomType && Boolean(formik.errors.roomType) &&\n                                <Typography component=\"p\" variant=\"caption\" sx={{ color: 'red' }}>{formik.touched.roomType && formik.errors.roomType}</Typography>\n                            }\n                        </FormLabel>\n                    </Box>\n                    <_TextField\n                        label=\"Number Of Beds\"\n                        pHolder=\"1\"\n                        required\n                        type='number'\n                        error={formik.touched.beds && Boolean(formik.errors.beds)}\n                        helper={formik.touched.beds && formik.errors.beds}\n                        shrink={true}\n                        value={formik.values.beds}\n                        onChange={formik.handleChange}\n                        name=\"beds\"\n\n                    />\n                    <_TextField\n                        label=\"Minimum Number Of Adults\"\n                        pHolder=\"1\"\n                        required\n                        type='number'\n                        error={formik.touched.minAdults && Boolean(formik.errors.minAdults)}\n                        helper={formik.touched.minAdults && formik.errors.minAdults}\n                        shrink={true}\n                        value={formik.values.minAdults}\n                        onChange={formik.handleChange}\n                        name=\"minAdults\"\n\n                    />\n                    <_TextField\n                        label=\"Minimum Number Of Childrens\"\n                        pHolder=\"0\"\n                        required\n                        type=\"number\"\n                        error={formik.touched.minChildren && Boolean(formik.errors.minChildren)}\n                        helper={formik.touched.minChildren && formik.errors.minChildren}\n                        value={formik.values.minChildren}\n                        onChange={formik.handleChange}\n                        name=\"minChildren\"\n\n                    />\n                    <_TextField\n                        label=\"Price\"\n                        pHolder=\"0\"\n                        required\n                        type=\"number\"\n                        error={formik.touched.price && Boolean(formik.errors.price)}\n                        helper={formik.touched.price && formik.errors.price}\n                        value={formik.values.price}\n                        onChange={formik.handleChange}\n                        name=\"price\"\n\n                    />\n                </Box>\n                <Divider flexItem variant=\"fullWidth\" orientation=\"vertical\" />\n                <Box sx={{ width: '30%', display: 'flex', flexDirection: 'column', minHeight: '20rem', justifyContent: 'center' }}>\n                    <BranchField\n                        errors={formik.touched.branch && Boolean(formik.errors.branch)}\n                        helpers={formik.touched.branch && formik.errors.branch}\n                    />\n                    {isRoomType && <_TextField\n                        label=\"Room Number\"\n                        pHolder=\"XXXXX\"\n                        required\n                        type='number'\n                        error={formik.touched.roomNo && Boolean(formik.errors.roomNo)}\n                        helper={formik.touched.roomNo && formik.errors.roomNo}\n                        shrink={true}\n                        value={formik.values.roomNo}\n                        onChange={formik.handleChange}\n                        name=\"roomNo\"\n\n                    />}\n                </Box>\n            </Box>\n\n            <Box sx={{ width: 1, display: 'flex', justifyContent: 'space-around', flexDirection: 'column', alignItems: 'center', margin: '5rem 0' }} >\n                <Typography sx={{ color: !isWarning ? `green` : `red` }}>{helperText}</Typography>\n                <Button variant=\"contained\" type='submit' sx={{ width: 2 / 5, margin: '2rem 0', transform: 'translateX(0%)', bottom: '0' }}>Add Room</Button>\n            </Box>\n        </form >\n    )\n}\n\nexport default AddRoom","import React, { useState, useEffect } from \"react\";\nimport _TextField from \"../../../components/auth/textField\";\nimport { DataGrid, } from '@mui/x-data-grid';\nimport { Box, TextField, Autocomplete, Button } from \"@mui/material\";\nimport api from '../../../api/api'\nimport BranchField from '../../../components/branchField'\nimport { useSelector } from \"react-redux\";\nimport { CSVLink } from \"react-csv\";\n\nconst columns = [\n    { field: 'id', headerName: 'ID', align: \"center\", width: 70 },\n    { field: 'roomNo', headerName: 'Room Number', type: 'number', align: \"center\", width: 200 },\n    { field: 'isBooked', headerName: 'Booked', align: \"center\", width: 200 },\n    {\n        field: 'type',\n        headerName: 'Room Type',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'pricePerNight',\n        headerName: 'Price Per Night',\n        type: 'number',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'minAdults',\n        headerName: 'Minimum Number Of Adults',\n        type: 'date',\n        align: \"center\", width: 300,\n    },\n    {\n        field: 'minChildren',\n        headerName: 'Minimum Number Of Children',\n        type: 'number',\n        align: \"center\", width: 300,\n    },\n    {\n        field: 'branchId',\n        headerName: 'Branch ID',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'location',\n        headerName: 'Location',\n        align: \"center\", width: 200,\n    },\n    {\n        field: 'roomStatus',\n        headerName: 'Room Status',\n        sortable: false,\n        width: 200,\n        valueGetter: ({ row }) => {\n            const value = row.isBooked\n            return value == 0 ? \"Open\" : \"Booked\"\n        }\n    },\n];\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst ViewRooms = () => {\n    const [selected, setSelected] = useState([])\n    const [rooms, setRooms] = useState([])\n    const [initialRooms, setInitialRooms] = useState([])\n    const [isRoom, setIsRoom] = useState(false)\n    const [roomQuery, setRoomQuery] = useState(\"\")\n    const [empId, setEmpId] = useState(null)\n    const branch = useSelector(state => state.branch.branchId)\n\n    const getRooms = async () => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const data = await JSON.parse(user)\n        const branchId = data.branchId\n        const employeeId = data.employeeId\n        setEmpId(employeeId)\n        try {\n            const response = await api.get('/manage/room/getAll/', {\n                params: {\n                    employeeId: employeeId,\n                    branchId: branchId || null\n                }\n            })\n            const data = await response.data.data\n            const isRoom = await data.isRoom\n            if (isRoom) {\n                const rows = await data.rows\n                setRooms(rows)\n                setInitialRooms(rows)\n            }\n            setIsRoom(isRoom)\n        } catch (error) {\n            const err = await error.response.data.data\n            const isRoom = err.isRoom\n            if (!isRoom) {\n                setIsRoom(isRoom)\n            }\n        }\n    }\n\n    const searchQuery = async (branch, employeeId, roomNo = null) => {\n\n        try {\n            const req = await api.get(\"/manage/room/getFilter/\", {\n                params: {\n                    employeeId: employeeId,\n                    branchId: branch,\n                    roomNo: roomNo\n                }\n            })\n            const data = await req.data.data\n            const isRoom = data.isRoom\n            const rows = data.rows\n            if (isRoom) {\n                setRooms(rows)\n            } else {\n                setRooms([])\n            }\n            setIsRoom(isRoom)\n        } catch (error) {\n            const isRoom = error.response.data.data.isRoom\n            setIsRoom(isRoom)\n            if (!isRoom) {\n                setRooms([])\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (branch && empId) {\n            searchQuery(branch, empId, roomQuery)\n        }\n    }, [roomQuery, branch])\n\n    useEffect(() => {\n        getRooms()\n    }, [])\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', margin: '1rem 2rem', width: 1 }}>\n                {/* <Autocomplete\n                    disablePortal\n                    options={[\"Branch 1\", \"Branch 2\"]}\n                    renderInput={(params) => <TextField {...params} label=\"Branch\" variant=\"standard\" />}\n\n                    sx={{ width: 1 / 5 }}\n\n                /> */}\n                <BranchField showBranchName={false}\n                    sx={{ width: '20rem', margin: '1rem 2rem' }}\n                />\n                <_TextField\n                    label=\"Search By Room Number\"\n                    pHolder=\"0\"\n                    type='number'\n                    value={roomQuery}\n                    onChange={(e) => setRoomQuery(e.target.value)}\n                    name=\"roomNo\"\n                    sx={{ width: '20rem', margin: '1rem 2rem' }}\n                    disabled={branch ? false : true}\n                    margin=\"none\"\n                />\n            </Box>\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: '80vh', width: '100%' }}>\n                    <DataGrid\n                        rows={rooms}\n                        columns={columns}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        autoPageSize\n                    />\n                </div>\n\n            </div>\n            <div style={{ width: '100%', display: \"flex\", justifyContent: 'flex-start', alignItems: 'center', height: '4rem', marginLeft: '1rem' }}>\n                {rooms &&\n                    <Button\n                        variant=\"contained\" color=\"primary\" type='button' size=\"large\" sx={{ marginRight: 1 }} disabled={rooms.length > 0 ? false : true} ><CSVLink data={rooms} style={{ textDecoration: 'none', color: 'white' }} >Download Table</CSVLink></Button>}\n            </div>\n        </>\n    )\n}\n\nexport default ViewRooms","import React, { useState, useEffect } from \"react\";\nimport { Button, Autocomplete, TextField, FormControl, RadioGroup, FormControlLabel, Radio, Box, Divider, Typography } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport BranchField from \"../../../components/branchField\";\nimport { useSelector } from 'react-redux'\nimport api from '../../../api/api'\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\n\nconst AddEmployee = ({ index, value, width }) => {\n    const [level, setLevel] = useState('employee');\n    const branchId = useSelector(state => state.branch.branchId)\n    const [isBasicDetails, setIsBasicDetails] = useState(false)\n    const [helper, setHelper] = useState(\"\")\n    const [isAvailable, setAvailable] = useState(false)\n\n    const handleChange = (event) => {\n        setLevel(event.target.value);\n    };\n\n    const employeeRegisterSchema = Yup.object({\n        fName: Yup.string('Enter Your First Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        lName: Yup.string('Enter Your Last Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        userName: Yup.string('Enter Your User Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        dob: Yup.date('Enter Your Date Of Birth')\n            .min(minDate, \"Too Old\")\n            .max(maxDate, \"Too Young\")\n            .required(\"Date Of Birth Required\"),\n        pass: Yup.string('Enter A Password')\n            .min(7, \"Too Short\")\n            .required(\"Enter A Password\"),\n        confirmPass: Yup.string('Enter A Same Password')\n            .oneOf([Yup.ref(\"pass\"), null], \"Passwords Must Match\")\n            .required('Required Field & Passwords Must Match'),\n        empType: Yup.string('Select One Of These Options')\n            .oneOf([\"Manager\", \"Assistant Manager\", \"HR Staff\", \"Employee\"], \"Invalid Value\")\n            .required('Select One Of These Options'),\n        email: Yup.string('Enter An Email Address').email('Enter A Valid Email Address').required('Email Is Missing')\n    })\n\n\n    const formik = useFormik({\n        initialValues: {\n            fName: \"\",\n            lName: \"\",\n            userName: \"\",\n            dob: \"\",\n            pass: \"\",\n            confirmPass: \"\",\n            empType: \"\",\n            email: \"\"\n        },\n        validationSchema: employeeRegisterSchema,\n        onSubmit: val => handleRegister(val),\n        enableReinitialize: true,\n        validateOnMount: true\n    })\n\n    const searchEmployee = async () => {\n        const params = {\n            firstName: formik.values.fName,\n            lastName: formik.values.lName,\n            dob: formik.values.dob,\n            email: formik.values.email,\n            branchId: branchId,\n            empType: formik.values.empType\n        }\n        let isAvailable\n        try {\n            const req = await api.get(\"/manage/employee/searchEmployee/\", {\n                params: params\n            })\n            isAvailable = await req.data.data.isAvailable\n            if (typeof isAvailable === 'boolean') {\n                setIsBasicDetails(isAvailable)\n            }\n\n\n        } catch (error) {\n            console.log(error.response.data)\n            isAvailable = error.response.data.data.isAvailable\n            if (typeof isAvailable === 'boolean') {\n                setIsBasicDetails(isAvailable)\n            }\n        }\n        if (isAvailable) {\n            setHelper(\"Employee Already Registered Or Details Have Been Already Taken\")\n        } else {\n            setHelper(\"Employee Not Registered\")\n        }\n\n\n    }\n\n    useEffect(() => {\n        const empType = formik.errors.empType\n        const fName = formik.errors.fName\n        const lName = formik.errors.lName\n        const dob = formik.errors.dob\n        const email = formik.errors.email\n        if (!empType && !fName & !lName && !dob && !email) {\n            searchEmployee()\n        } else {\n            setIsBasicDetails(false)\n            setHelper(\"\")\n        }\n\n    }, [formik.values])\n\n    const handleRegister = async (val) => {\n        const user = await window.localStorage.getItem(\"@user\")\n        const data = await JSON.parse(user)\n        const employeeId = data.employeeId\n        const body = {\n            firstName: val.fName,\n            lastName: val.lName,\n            dob: val.dob,\n            email: val.email,\n            branchId: branchId,\n            employeeType: val.empType,\n            userName: val.userName,\n            password: val.pass,\n            confirmPassword: val.confirmPass,\n            employeeId: employeeId\n        }\n        try {\n            const data = await api.post(\"/manage/employee/register/\", body)\n            const response = await data.data.data\n            console.log(response)\n        } catch (error) {\n            const data = error.response.data\n            console.log(data)\n        }\n\n\n    }\n\n    console.log(isBasicDetails)\n    if (index !== value) return null\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault()\n                formik.handleSubmit()\n            }}\n            style={{\n                display: 'flex',\n                width: width,\n                minHeight: '20rem',\n                margin: '10% auto',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width: '80%'\n            }}\n        >\n            <Box sx={{ width: 1, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }}>\n                <Box >\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup\n                            name=\"empType\"\n                            value={formik.values.empType}\n                            onChange={formik.handleChange}\n                            row\n                            sx={{ display: 'flex', justifyContent: 'center' }}\n                        >\n                            <FormControlLabel value=\"Employee\" control={<Radio />} label=\"Employee\" />\n                            <FormControlLabel value=\"HR Staff\" control={<Radio />} label=\"HR Staff\" />\n                            <FormControlLabel value=\"Assistant Manager\" control={<Radio />} label=\"Assistant Manager\" />\n                            <FormControlLabel value=\"Manager\" control={<Radio />} label=\"Manager\" />\n                        </RadioGroup>\n                    </FormControl>\n                    <BranchField\n                        showBranchName\n                        sx={{ width: 1 }}\n                    />\n\n                    <_TextField\n                        label=\"First Name\"\n                        pHolder=\"John\"\n                        required\n                        type='text'\n                        error={formik.touched.fName && Boolean(formik.errors.fName)}\n                        helper={formik.touched.fName && formik.errors.fName}\n\n                        value={formik.values.fName}\n                        onChange={formik.handleChange}\n                        name=\"fName\"\n\n                    />\n                    <_TextField\n                        label=\"Last Name\"\n                        pHolder=\"Doe\"\n                        required\n                        type='text'\n                        error={formik.touched.lName && Boolean(formik.errors.lName)}\n                        helper={formik.touched.lName && formik.errors.lName}\n\n                        value={formik.values.lName}\n                        onChange={formik.handleChange}\n                        name=\"lName\"\n\n                    />\n                    <_TextField\n                        label=\"Date Of Birth\"\n                        pHolder=\"1995-05-05\"\n                        required\n                        type='date'\n                        error={formik.touched.dob && Boolean(formik.errors.dob)}\n                        helper={formik.touched.dob && formik.errors.dob}\n                        shrink={true}\n                        value={formik.values.dob}\n                        onChange={formik.handleChange}\n                        name=\"dob\"\n\n                    />\n                    <_TextField\n                        label=\"Email\"\n                        pHolder=\"XXXXX\"\n                        required\n                        type='text'\n                        error={formik.touched.email && Boolean(formik.errors.email)}\n                        helper={formik.touched.email && formik.errors.email}\n                        shrink={true}\n                        value={formik.values.email}\n                        onChange={formik.handleChange}\n                        name=\"email\"\n\n                    />\n                    <Typography sx={{ color: isBasicDetails ? 'red' : 'green' }}>{helper}</Typography>\n                </Box>\n                <Divider orientation=\"vertical\" flexItem variant=\"fullWidth\" />\n                <Box sx={{ alignSelf: 'center' }}>\n                    {!isBasicDetails && <>\n                        <_TextField\n\n                            label=\"User Name\"\n                            pHolder=\"doe\"\n                            required\n                            type='text'\n                            error={formik.touched.userName && Boolean(formik.errors.userName)}\n                            helper={formik.touched.userName && formik.errors.userName}\n                            value={formik.values.userName}\n                            onChange={formik.handleChange}\n                            name=\"userName\"\n                            defaultValue={\"\"}\n\n                        /><_TextField\n\n                            label=\"Password\"\n                            pHolder=\"********\"\n                            required\n                            type='password'\n                            error={formik.touched.pass && Boolean(formik.errors.pass)}\n                            helper={formik.touched.pass && formik.errors.pass}\n\n                            value={formik.values.pass}\n                            onChange={formik.handleChange}\n                            name=\"pass\"\n                            defaultValue={\"\"}\n                        /><_TextField\n\n                            label=\"Confirm Password\"\n                            pHolder=\"********\"\n                            required\n                            type='password'\n                            error={formik.touched.confirmPass && Boolean(formik.errors.confirmPass)}\n                            helper={formik.touched.confirmPass && formik.errors.confirmPass}\n\n                            value={formik.values.confirmPass}\n                            onChange={formik.handleChange}\n                            name=\"confirmPass\"\n\n                        />\n                    </>}\n                </Box>\n            </Box>\n            <Box sx={{ width: 4 / 5, display: 'flex', margin: '2rem auto', flexDirection: 'row-reverse' }}>\n                <Button variant=\"contained\" type='submit' disabled={isBasicDetails}>Add Employee</Button>\n            </Box>\n        </form>\n    )\n}\n\nexport default AddEmployee","import { useState, useEffect } from \"react\";\nimport { Autocomplete, TextField, Typography } from \"@mui/material\";\nimport { setQueryAsync } from \"../redux/slicers/gLocation\"\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nconst loadScript = (url) => {\n    let script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = url;\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nconst Location = ({ errors, helpers, sx }) => {\n    const [places, setPlaces] = useState([])\n    const dispatch = useDispatch()\n    const query = useSelector(state => state.gLocation.query)\n\n    const handleScript = (query) => {\n        const options = {\n            types: ['(cities)'],\n            componentRestrictions: { 'country': ['LK'] },\n        }\n\n\n        var autocomplete = new window.google.maps.places.AutocompleteService()\n        autocomplete.getPlacePredictions({\n            input: query,\n            ...options\n        }, (predictions, status) => {\n            if (status != window.google.maps.places.PlacesServiceStatus.OK || !predictions) {\n                return\n            }\n\n            const places = predictions.map(place => place.description)\n            setPlaces(places)\n        })\n\n\n    }\n\n    useEffect(() => {\n        if (query) {\n            handleScript(query)\n        }\n    }, [query])\n\n    useEffect(() => {\n        loadScript(\n            `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_PLACESAPI}&libraries=places&callback=initMap`\n        );\n    }, [])\n\n    console.log(query)\n    return (\n        <>\n            <Autocomplete\n                freeSolo\n                disableClearable\n                options={places}\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Location\"\n                        name=\"location\"\n                        InputProps={{\n                            ...params.InputProps,\n                            type: 'search',\n                        }}\n                    />\n                )}\n                onInputChange={(e, val) => {\n                    if (val) {\n                        dispatch(setQueryAsync(val))\n                    } else {\n                        dispatch(setQueryAsync())\n                    }\n                }}\n                onChange={(e, val) => {\n                    dispatch(setQueryAsync(val))\n                }}\n                inputValue={query}\n                loading={places ? false : true}\n                value={query}\n                label=\"Location\"\n                name=\"location\"\n                sx={sx}\n            />\n            {errors &&\n                <Typography color=\"red\"  >\n                    {helpers}\n                </Typography>}\n        </>\n    )\n}\n\n\nexport default Location","import React, { useEffect, useState } from \"react\";\nimport { Button, Autocomplete, TextField, Typography } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport _TextField from '../../../components/auth/textField'\nimport { useSelector } from 'react-redux'\nimport Location from '../../../components/glLocation'\nimport api from '../../../api/api'\n\nlet minDate = new Date()\nlet maxDate = new Date()\nminDate.setFullYear(minDate.getFullYear() - 70, 0, 1)\nmaxDate.setFullYear(maxDate.getFullYear() - 18, 0, 1)\n\nconst AddBranch = ({ index, value, width }) => {\n    const query = useSelector(state => state.gLocation.query)\n    const [helper, setHelper] = useState(\"\")\n\n    const barRegisterSchema = Yup.object({\n        branchName: Yup.string('Enter Branch Name')\n            .min(2, 'Too Short!')\n            .max(60, 'Too Long!')\n            .required('Required'),\n        location: Yup.string('Enter Branch Location').required('Required'),\n        empId: Yup.string('Enter An NIC ID Or Passport ID')\n            .min(1, \"Too Short\")\n            .required(\"Enter An NIC ID Or Passport ID\"),\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            branchName: \"\",\n            location: \"\",\n            empId: \"\"\n        },\n        validationSchema: barRegisterSchema,\n        onSubmit: val => handleSubmit(val)\n    })\n\n    useEffect(() => {\n        const user = window.localStorage.getItem(\"@user\")\n        const parsed = JSON.parse(user)\n        const empId = parsed.employeeId\n        formik.setFieldValue('empId', empId)\n    }, [])\n\n    useEffect(() => {\n        formik.setFieldValue('location', query)\n    }, [query])\n\n    const handleSubmit = async (val) => {\n        if (formik.values.empId) {\n            try {\n                const response = await api.post(\"/branch/create/\", val)\n                const data = await response.data\n                const message = await data.message\n                const isSuccess = data.data.isSuccess\n                setHelper(message)\n            } catch (error) {\n                const response = error.response.data\n                const message = response.message\n                setHelper(message)\n            }\n        }\n    }\n\n    if (index !== value) return null\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault()\n                formik.handleSubmit()\n            }}\n            style={{\n                display: 'flex',\n                width: width,\n                minHeight: '20rem',\n                margin: '10% auto',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'space-evenly',\n                width: '80%'\n            }}\n        >\n            <_TextField\n                label=\"Branch Name\"\n                pHolder=\"XXXXX\"\n                required\n                type='text'\n                error={formik.touched.branchName && Boolean(formik.errors.branchName)}\n                helper={formik.touched.branchName && formik.errors.branchName}\n                shrink={true}\n                value={formik.values.branchName}\n                onChange={formik.handleChange}\n                name=\"branchName\"\n                sx={{ width: 3 / 5 }}\n            />\n            <Location\n                errors={formik.touched.location && Boolean(formik.errors.location)}\n                helpers={formik.touched.location && formik.errors.location}\n                sx={{ width: 3 / 5 }}\n            />\n            <Typography component=\"h4\" variant=\"body1\" >{helper} </Typography>\n            <Button variant=\"contained\" type='submit' >Add Branch</Button>\n        </form>\n    )\n}\n\nexport default AddBranch","import React, { useState, useEffect } from \"react\";\nimport _TextField from \"../../../components/auth/textField\";\nimport { DataGrid, } from '@mui/x-data-grid';\nimport { Box, TextField, Autocomplete } from \"@mui/material\";\nimport api from \"../../../api/api\";\n\n\nconst columns = [\n\n    { field: 'id', headerName: 'ID', align: \"center\", width: 250, headerAlign: \"center\" },\n    { field: 'branchName', headerName: 'Branch Name', align: \"center\", width: 400, headerAlign: \"center\" },\n    { field: 'location', headerName: 'Branch Location', type: 'number', align: \"center\", width: 400, headerAlign: \"center\" },\n    // {\n    //     field: 'fullName',\n    //     headerName: 'Full name',\n    //     description: 'This column has a value getter and is not sortable.',\n    //     sortable: false,\n    //     width: 160,\n    //     valueGetter: (params) =>\n    //         `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''\n    //         }`,\n    // },\n];\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst ViewBranches = () => {\n    const [selected, setSelected] = useState([])\n    const [branches, setBranches] = useState([])\n    const [helper, setHelper] = useState(\"\")\n    const [branchName, setBranchName] = useState(\"\")\n    const [location, setLocation] = useState(\"\")\n\n    const getBranches = async (name = \"\", location = \"\") => {\n        try {\n            const response = await api.get(\"/branch/getAll/\", {\n                params: {\n                    branchName: name,\n                    location: location\n                }\n            })\n            const data = await response.data\n            const rows = data.data\n            setBranches(rows)\n            setHelper(data.message)\n            setTimeout(() => setHelper(\"\"), 2000)\n        } catch (error) {\n            const data = error.response.data\n            setBranches([])\n            setHelper(data.message)\n            setTimeout(() => setHelper(\"\"), 2000)\n        }\n    }\n    useEffect(() => {\n        getBranches(branchName, location)\n    }, [branchName, location])\n\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', marginBottom: '2rem' }}>\n                <_TextField\n                    label=\"Search By Branch Name\"\n                    pHolder=\"0\"\n                    type='text'\n                    value={branchName}\n                    onChange={(e) => setBranchName(e.target.value)}\n                    name=\"branchName\"\n                    margin=\"none\"\n                    sx={{ margin: '1rem' }}\n                />\n                <_TextField\n                    label=\"Search By Branch Location\"\n                    pHolder=\"0\"\n                    type='text'\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    name=\"location\"\n                    margin=\"none\"\n                    sx={{ margin: '1rem' }}\n                />\n            </Box>\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: '80vh', minWidth: '50%', margin: 'auto' }}>\n                    <DataGrid\n                        rows={branches}\n                        columns={columns}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        autoPageSize\n                        sx={{ fontSize: 20 }}\n                    />\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default ViewBranches","import React, { useEffect, useState } from \"react\";\nimport _TextField from \"../../../components/auth/textField\";\nimport { DataGrid, } from '@mui/x-data-grid';\nimport { Box } from \"@mui/material\";\nimport BranchField from '../../../components/branchField'\nimport { useSelector } from \"react-redux\";\nimport api from \"../../../api/api\";\nimport { CSVLink } from \"react-csv\";\nimport { Button } from \"@mui/material\";\n\n\nconst columns = [\n\n    {\n        headerAlign: \"center\",\n        field: 'id', headerName: 'ID', align: \"center\", width: 200\n    },\n    {\n        headerAlign: \"center\",\n        field: 'branchName', headerName: 'Branch Name', align: \"center\", width: 350\n    },\n    {\n        headerAlign: \"center\",\n        field: 'location', headerName: 'Branch Location', type: 'number', align: \"center\", width: 350\n    },\n    {\n        headerAlign: \"center\",\n        field: 'parsedDate',\n        headerName: 'Date',\n        align: 'center',\n        width: 250,\n        valueGetter: (params) =>\n            params.row.date ? new Date(params.row.date).toLocaleDateString() : null\n    },\n    {\n        headerAlign: \"center\",\n        field: 'date',\n        headerName: 'Date',\n        type: 'date',\n        align: \"center\", width: 150,\n        hide: true\n    },\n    {\n        headerAlign: \"center\",\n        field: 'income',\n        headerName: 'Income',\n        type: 'number',\n        align: \"center\", width: 300,\n    },\n    {\n        headerAlign: \"center\",\n        field: 'expense',\n        headerName: 'Expense',\n        type: 'number',\n        align: \"center\", width: 300,\n    },\n];\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst BarStatsDaily = () => {\n    const [selected, setSelected] = useState([])\n    const [open, setOpen] = useState(false);\n    const [date, setDate] = useState(\"\")\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [helper, setHelper] = useState(\"\")\n    const [bars, setBars] = useState([])\n    const branchId = useSelector(state => state.branch.branchId)\n\n\n    const getBar = async (branchId = \"\", date = \"\") => {\n        try {\n            const response = await api.get(\"/stats/getBar/\", {\n                params: {\n                    branchId: branchId,\n                    date: date\n                }\n            })\n            const data = await response.data\n            const message = data.message\n            setHelper(message)\n            const isAvailable = data.data.isAvailable\n            let rows = data.data.rows\n            if (isAvailable) {\n                rows = rows.filter((row, index, arr) => index === arr.findIndex((item) => row.id === item.id))\n                setBars([...new Set(rows)])\n            } else {\n                setBars([])\n            }\n        } catch (error) {\n            const data = await error.response.data\n            const message = await data.message\n            setHelper(message)\n            setBars([])\n\n        }\n    }\n\n    useEffect(() => {\n        getBar(branchId, date)\n    }, [branchId, date])\n\n\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center' }}>\n                <_TextField\n                    id=\"date\"\n                    label=\"Search By Date\"\n                    type=\"date\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    name=\"date\"\n                    shrink={true}\n                    onChange={(e) => setDate(e.target.value)}\n                    value={date}\n                    margin='normal'\n                    sx={{\n                        padding: 2,\n                        width: 1 / 5\n                    }}\n                    variant=\"standard\"\n                    focused={true}\n                    fullwidth={false}\n                />\n                <BranchField container={{ display: 'flex' }} sx={{ margin: '1rem', width: '25rem' }} />\n            </Box>\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: '70vh', width: '100%' }}>\n                    <DataGrid\n                        rows={bars}\n                        columns={columns}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        autoPageSize\n                        sx={{ fontSize: 20 }}\n                    />\n                </div>\n\n            </div>\n            <div style={{ width: '100%', display: \"flex\", justifyContent: 'flex-start', alignItems: 'center', height: '4rem', marginLeft: '1rem' }}>\n                {bars &&\n                    <Button\n                        variant=\"contained\" color=\"primary\" type='button' size=\"large\" sx={{ marginRight: 1 }} disabled={bars.length > 0 ? false : true} ><CSVLink data={bars} style={{ textDecoration: 'none', color: 'white' }} >Download Table</CSVLink></Button>}\n            </div>\n        </>\n    )\n}\n\nexport default BarStatsDaily","import React, { useState, useEffect } from \"react\";\nimport _TextField from \"../../components/auth/textField\";\nimport { DataGrid, } from '@mui/x-data-grid';\nimport { Box, FormControlLabel, Switch } from \"@mui/material\";\nimport BranchField from \"../../components/branchField\";\nimport { useSelector } from \"react-redux\";\nimport api from \"../../api/api\";\n\nconst columns = [\n    {\n        headerAlign: \"center\",\n        field: 'id', headerName: 'ID', align: \"center\", width: 200\n    },\n    {\n        headerAlign: \"center\",\n        field: 'firstName', headerName: 'First Name', align: \"center\", width: 350\n    },\n    {\n        headerAlign: \"center\",\n        field: 'lastName', headerName: 'Last Name', align: \"center\", width: 350\n    },\n    {\n        headerAlign: \"center\",\n        field: 'email', headerName: 'Email', align: \"center\", width: 350\n    },\n    {\n        headerAlign: \"center\",\n        field: 'parsedDate',\n        headerName: 'Date Of Birth',\n        align: 'center',\n        width: 250,\n        valueGetter: (params) =>\n            params.row.dob ? new Date(params.row.dob).toLocaleDateString() : null\n    },\n    {\n        headerAlign: \"center\",\n        field: 'status', headerName: 'Level', align: \"center\", width: 350\n    },\n    {\n        headerAlign: \"center\",\n        field: 'dob',\n        headerName: 'Date',\n        type: 'date',\n        align: \"center\", width: 150,\n        hide: true\n    },\n];\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst AttendanceStats = () => {\n    const [selected, setSelected] = useState([])\n    const [date, setDate] = useState(\"\")\n    const [helper, setHelper] = useState(\"\")\n    const [attendees, setAttendees] = useState([])\n    const [absentees, setAbsentees] = useState([])\n    const [whichStat, setWhichStat] = useState(true)\n    const branchId = useSelector(state => state.branch.branchId)\n\n\n    const getAttendance = async (branchId = \"\", date = \"\") => {\n        try {\n            const response = await api.get(\"/hr/attendance/getStats/\", {\n                params: {\n                    branchId: branchId,\n                    date: date\n                }\n            })\n            const data = await response.data\n            const message = data.message\n            setHelper(message)\n            const isAvailable = data.data.isSuccess\n            let rows = data.data.data\n            let attendees = rows.attendees\n            let absentees = rows.absentees\n            if (isAvailable) {\n                attendees = attendees.filter((row, index, arr) => index === arr.findIndex((item) => row.id === item.id))\n                absentees = absentees.filter((row, index, arr) => index === arr.findIndex((item) => row.id === item.id))\n                setAbsentees(absentees)\n                setAttendees(attendees)\n            } else {\n                setAbsentees([])\n                setAttendees([])\n            }\n        } catch (error) {\n            const data = await error.response.data\n            const message = await data.message\n            setHelper(message)\n            setAbsentees([])\n            setAttendees([])\n\n        }\n    }\n\n    useEffect(() => {\n        getAttendance(branchId, date)\n    }, [branchId, date])\n\n\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center' }}>\n                <FormControlLabel\n                    control={<Switch\n                        checked={whichStat}\n                        onChange={() => setWhichStat(!whichStat)}\n                    />}\n                    label={whichStat ? 'Attendees' : 'Absentess'}\n                    labelPlacement=\"start\"\n                    sx={{ margin: '1rem', justifySelf: 'flex-start' }}\n                />\n                <_TextField\n                    id=\"date\"\n                    label=\"Search By Date\"\n                    type=\"date\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    name=\"date\"\n                    shrink={true}\n                    onChange={(e) => setDate(e.target.value)}\n                    value={date}\n                    margin='normal'\n                    sx={{\n                        padding: 2,\n                        width: 1 / 5\n                    }}\n                    variant=\"standard\"\n                    focused={true}\n                    fullwidth={false}\n                />\n                <BranchField container={{ display: 'flex' }} sx={{ margin: '1rem', width: '25rem' }} />\n\n            </Box>\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: '70vh', width: '100%' }}>\n                    <DataGrid\n                        rows={whichStat ? attendees : absentees}\n                        columns={columns}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        autoPageSize\n                        sx={{ fontSize: 20 }}\n                    />\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default AttendanceStats","import React, { useState, useEffect } from \"react\";\nimport _TextField from \"../../components/auth/textField\";\nimport { DataGrid, } from '@mui/x-data-grid';\nimport { Box, Button } from \"@mui/material\";\nimport BranchField from \"../../components/branchField\";\nimport { useSelector } from \"react-redux\";\nimport api from \"../../api/api\";\nimport { CSVLink } from \"react-csv\";\n\n\nconst columns = [\n    {\n        headerAlign: \"center\",\n        field: 'id', headerName: 'ID', align: \"center\", width: 200\n    },\n    {\n        headerAlign: \"center\",\n        field: 'income', headerName: 'Income', align: \"center\", width: 350\n    },\n    {\n        headerAlign: \"center\",\n        field: 'expense', headerName: 'Expense', align: \"center\", width: 350\n    },\n    {\n        headerAlign: \"center\",\n        field: 'parsedDate',\n        headerName: 'Date',\n        align: 'center',\n        width: 250,\n        valueGetter: (params) =>\n            params.row.date ? new Date(params.row.date).toLocaleDateString() : null\n    },\n    {\n        headerAlign: \"center\",\n        field: 'date',\n        headerName: 'Date',\n        type: 'date',\n        align: \"center\", width: 150,\n        hide: true\n    },\n    {\n        headerAlign: \"center\",\n        field: 'description', headerName: 'Description', align: \"center\", width: 600\n    },\n];\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 200\n};\n\n\nconst IncomeStats = () => {\n    const [selected, setSelected] = useState([])\n    const [date, setDate] = useState(\"\")\n    const [helper, setHelper] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [incomes, setIncomes] = useState([])\n    const branchId = useSelector(state => state.branch.branchId)\n\n\n    const getIncomes = async (branchId = \"\", date = \"\", description = \"\") => {\n        try {\n            const response = await api.get(\"/stats/getIncome/\", {\n                params: {\n                    branchId: branchId,\n                    date: date,\n                    description\n                }\n            })\n            const data = await response.data\n            const message = data.message\n            setHelper(message)\n            const isAvailable = data.data.isAvailable\n            let rows = data.data.rows\n            if (isAvailable) {\n                rows = rows.filter((row, index, arr) => index === arr.findIndex((item) => row.id === item.id))\n                setIncomes(rows)\n            } else {\n                setIncomes([])\n            }\n        } catch (error) {\n            const data = await error.response.data\n            const message = await data.message\n            setHelper(message)\n            setIncomes([])\n\n        }\n    }\n\n    useEffect(() => {\n        getIncomes(branchId, date, description)\n    }, [branchId, date, description])\n\n\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center' }}>\n                <_TextField\n                    id=\"date\"\n                    label=\"Search By Date\"\n                    type=\"date\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    name=\"date\"\n                    shrink={true}\n                    onChange={(e) => setDate(e.target.value)}\n                    value={date}\n                    margin='normal'\n                    sx={{\n                        padding: 2,\n                        width: 1 / 5\n                    }}\n                    variant=\"standard\"\n                    focused={true}\n                    fullwidth={false}\n                />\n                <BranchField container={{ display: 'flex' }} sx={{ margin: '1rem', width: '25rem' }} />\n                <_TextField\n                    id=\"description\"\n                    label=\"Search By Description\"\n                    type=\"text\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    name=\"description\"\n                    shrink={true}\n                    onChange={(e) => setDescription(e.target.value)}\n                    value={description}\n                    margin='normal'\n                    sx={{\n                        padding: 2,\n                        width: 1 / 5\n                    }}\n                    variant=\"standard\"\n                    focused={true}\n                    fullwidth={false}\n                />\n\n            </Box>\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ height: '70vh', width: '100%' }}>\n                    <DataGrid\n                        rows={incomes}\n                        columns={columns}\n                        checkboxSelection\n                        disableColumnFilter\n                        onSelectionModelChange={(...e) => setSelected(e[0])}\n                        isRowSelectable={(item) => selected.length > 1 ? false : true}\n                        autoPageSize\n                        sx={{ fontSize: 20 }}\n                    />\n                </div>\n\n            </div>\n            <div style={{ width: '100%', display: \"flex\", justifyContent: 'flex-start', alignItems: 'center', height: '4rem', marginLeft: '1rem' }}>\n                {incomes &&\n                    <Button\n                        variant=\"contained\" color=\"primary\" type='button' size=\"large\" sx={{ marginRight: 1 }} disabled={incomes.length > 0 ? false : true} ><CSVLink data={incomes} style={{ textDecoration: 'none', color: 'white' }} >Download Table</CSVLink></Button>}\n            </div>\n        </>\n    )\n}\n\nexport default IncomeStats","import { Box, Typography } from '@mui/material'\nimport ConstructionIcon from '@mui/icons-material/Construction';\n\n\n\nconst UnderConstruction = ({ text, subText }) => {\n    console.log(subText)\n    return (\n        <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', width: 1, height: '80vh', backgroundColor: '#081627', color: 'white' }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\n                <ConstructionIcon sx={{ fontSize: 100 }} />\n                <Box>\n                    <Typography component=\"h2\" variant=\"h2\" >{text}</Typography>\n                    {subText && <Typography component=\"h4\" variant=\"h5\" >{subText}</Typography>}\n                </Box>\n            </Box>\n\n        </Box>\n    )\n}\n\n\nexport default UnderConstruction","import useAuth from '../../hooks/useAuth'\nimport UnderConstruction from '../underConstruction'\n\n\n\nconst Prtotector = ({ children }) => {\n    const auth = useAuth()\n    const user = auth.userData\n    if (user.userId && user.employeeId) {\n        return (\n            <>\n                {children}\n            </>\n        )\n    } else {\n        return (\n            <UnderConstruction\n                text=\"Seems like Your Not Authorized....\"\n            />\n        )\n    }\n}\n\nexport default Prtotector","import './App.css';\nimport Layout from './components/layout/layout'\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport Auth from './screens/login/Auth';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './Theme'\nimport AuthProvider from './components/auth/authProvider';\nimport { Routes, Route } from 'react-router-dom'\nimport Dashboard from './components/layout/dashboard';\nimport CustomerHandling from './sections/staff/customerHandling';\nimport PaymentAndServices from './sections/staff/payments&Services';\nimport Bar from './sections/staff/bar';\nimport AttendanceDashBoard from './sections/hrStaff/attendance';\nimport Employee from './sections/hrStaff/employee';\nimport ManageBranches from './sections/manager/manageBranch';\nimport ManageEmployee from './sections/manager/manageEmployee';\nimport ManageRooms from './sections/manager/manageRooms';\nimport Statistics from './sections/manager/statistics';\nimport CustomerFrontBoard from './screens/dashboards/customer'\nimport PaymentsFrontBoard from './screens/dashboards/payments'\nimport BarFrontBoard from './screens/dashboards/barFB'\n\nimport CustomerInquiry from './screens/customer/customerInquiry/customerInquiry';\nimport CustomerRegistration from './screens/customer/customerRegistration/customerRegistration';\nimport InHotelCustomers from './screens/customer/inHotelCustomers/inHotelCustomrs';\n\nimport ReserveRoom from './screens/paymentsAndServices/room/reserveRoom';\nimport Services from './screens/paymentsAndServices/services/services';\n\nimport FrontDesk from './screens/bar/frontDesk/frontDesk';\nimport Inventory from './screens/bar/inventory/inventory';\n\nimport Attendance from './screens/manage/attendance/attendance';\n\nimport ConfigureSalary from './screens/manage/employee/configureSalary';\nimport EmployeeDetails from './screens/statistics/viewEmployee';\n\nimport AddRoom from './screens/manage/rooms/addRoom';\nimport ViewRooms from './screens/manage/rooms/viewRooms';\n\nimport AddEmployee from './screens/manage/employee/addEmployee';\n\nimport AddBranch from './screens/manage/branches/addBranch';\nimport ViewBranches from './screens/manage/branches/viewBranches';\n\nimport BarStatsDaily from './screens/statistics/bar/dailyStats';\nimport AttendanceStats from './screens/statistics/attendanceStats';\nimport IncomeStats from './screens/statistics/income';\nimport Protector from './components/auth/protector'\nimport UnderConstruction from './components/underConstruction'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <AuthProvider>\n          <Routes>\n            <Route element={<Layout />}>\n              <Route path=\"/\" element={<Auth />} />\n              <Route\n                path=\"/protected\"\n                element={\n                  <Protector>\n                    <Dashboard />\n                  </Protector>\n                }\n              >\n\n                <Route path=\"CustomerHandling\" element={<CustomerHandling />}>\n                  <Route path=\"CustomerInquiry\" element={<CustomerInquiry />} />\n                  <Route path=\"CustomerRegistration\" element={<CustomerRegistration width={'40%'} />} />\n                  <Route path=\"InHotelCustomers\" element={<InHotelCustomers />} />\n                  <Route path=\"*\" element={<CustomerFrontBoard />} />\n                  <Route path=\"\" element={<CustomerFrontBoard />} />\n                  {/* <Route path=\"*\" element={<CustomerRegistration width={'40%'} />} />\n                  <Route path=\"\" element={<CustomerRegistration width={'40%'} />} /> */}\n                </Route>\n\n                <Route path=\"PaymentsAndServices\" element={<PaymentAndServices />}>\n                  <Route path=\"ReserveRoom\" element={<ReserveRoom />} />\n                  <Route path=\"Services\" element={<Services />} />\n                  <Route path=\"*\" element={<PaymentsFrontBoard />} />\n                  <Route path=\"\" element={<PaymentsFrontBoard />} />\n                  {/* <Route path=\"*\" element={<ReserveRoom />} />\n                  <Route path=\"\" element={<ReserveRoom />} /> */}\n                </Route>\n\n                <Route path=\"Statistics\" element={<Statistics />}>\n                  <Route path=\"BarStatsDaily\" element={<BarStatsDaily />} />\n                  <Route path=\"AttendanceStats\" element={<AttendanceStats />} />\n                  <Route path=\"IncomeStats\" element={<IncomeStats />} />\n                  <Route path=\"*\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Other General Statistics Will Be Coming Up Here....\" />} />\n                  <Route path=\"\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Other General Statistics Will Be Coming Up Here....\" />} />\n                </Route>\n                <Route path=\"Bar\" element={<Bar />}>\n                  <Route path=\"FrontDesk\" element={<FrontDesk />} />\n                  <Route path=\"Inventory\" element={<Inventory />} />\n                  <Route path=\"*\" element={<BarFrontBoard />} />\n                  <Route path=\"\" element={<BarFrontBoard />} />\n                  {/* <Route path=\"*\" element={<FrontDesk />} />\n                  <Route path=\"\" element={<FrontDesk />} /> */}\n                </Route>\n\n                <Route path=\"Attendance\" element={<AttendanceDashBoard />}>\n                  <Route path=\"*\" element={<Attendance />} />\n                  <Route path=\"\" element={<Attendance />} />\n                </Route>\n\n                <Route path=\"ManageStaff\" element={<Employee />}>\n                  <Route path=\"ConfigureSalary\" element={<ConfigureSalary />} />\n                  <Route path=\"EmployeeDetails\" element={<EmployeeDetails />} />\n                  <Route path=\"*\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Staff Statistics Is Coming Up Here....\" />} />\n                  <Route path=\"\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Staff Statistics Is Coming Up Here....\" />} />\n                </Route>\n\n                <Route path=\"ManageRooms\" element={<ManageRooms />}>\n                  <Route path=\"AddRoom\" element={<AddRoom />} />\n                  <Route path=\"ViewRooms\" element={<ViewRooms />} />\n                  <Route path=\"*\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Rooms Dashboard Is Coming Up Here....\" />} />\n                  <Route path=\"\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Rooms Dashboard Is Coming Up Here....\" />} />\n                </Route>\n\n                <Route path=\"ManageEmployees\" element={<ManageEmployee />}>\n                  <Route path=\"AddEmployee\" element={<AddEmployee />} />\n                  <Route path=\"*\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Employee Dashboard Is Coming Up Here....\" />} />\n                  <Route path=\"\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Employee Dashboard Is Coming Up Here....\" />} />\n                </Route>\n\n                <Route path=\"ManageBranches\" element={<ManageBranches />}>\n                  <Route path=\"AddBranch\" element={<AddBranch />} />\n                  <Route path=\"ViewBranches\" element={<ViewBranches />} />\n                  <Route path=\"*\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Hotel Branches Dashboard Is Coming Up Here....\" />} />\n                  <Route path=\"\" element={<UnderConstruction subText=\"Navigate To Other Sections By Clicking One Of The Item/s On The Top Navigation Bar\" text=\"Hotel Branches Dashboard Is Coming Up Here....\" />} />\n                </Route>\n                <Route path=\"*\" element={<UnderConstruction text=\"Hmmm.... Not Sure If This Is The Right Place\" />} />\n                <Route path=\"\" element={<UnderConstruction text=\"Hmmm.... Not Sure If This Is The Right Place\" />} />\n\n              </Route>\n              <Route path=\"*\" element={<UnderConstruction text=\"Hmmm.... Not Sure If This Is The Right Place\" />} />\n              <Route path=\"\" element={<UnderConstruction text=\"Hmmm.... Not Sure If This Is The Right Place\" />} />\n            </Route>\n          </Routes>\n        </AuthProvider>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}